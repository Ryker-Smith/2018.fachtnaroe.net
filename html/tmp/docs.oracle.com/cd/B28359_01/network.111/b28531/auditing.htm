<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Verifying Security Access with Auditing</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 743" />
<meta name="dcterms.created" content="2014-01-15T13:27:5Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Security Guide" />
<meta name="dcterms.identifier" content="B28531-21" />
<meta name="dcterms.isVersionOf" content="DBSEG" />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="data_encryption.htm" title="Previous" type="text/html" />
<link rel="Next" href="guidelines.htm" title="Next" type="text/html" />
<link rel="alternate" href="../b28531.pdf" title="PDF version" type="application/pdf" />
<link rel="alternate" href="../B28531-21.epub" title="ePub version" type="application/epub+zip" />
<link rel="alternate" href="../B28531-21.mobi" title="Mobipocket version" type="application/x-mobipocket-ebook" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a>
<header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">16/19</span> <!-- End Header -->
<script  >
<!-- // <![CDATA[
window.name='auditing'
// ]]> -->
</script> <script  >
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=120,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><h1>Footnote ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/body><\/html>');
    msg.document.close();
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript>
<div id="DBSEG006" class="chapter"><a id="BCGIDBFI"></a>
<h1 class="chapter"><span class="secnum">9</span> Verifying Security Access with Auditing</h1>
<p>This chapter contains:</p>
<ul>
<li>
<p><a href="#BCGHGJJH">About Auditing</a></p>
</li>
<li>
<p><a href="#BCGEGAGF">Selecting an Auditing Type</a></p>
</li>
<li>
<p><a href="#BCGCJFEG">Auditing General Activities with Standard Auditing</a></p>
</li>
<li>
<p><a href="#CEGGCIAE">Using Default Auditing for Security-Relevant SQL Statements and Privileges</a></p>
</li>
<li>
<p><a href="#CEGBAFIA">Auditing Specific Activities with Fine-Grained Auditing</a></p>
</li>
<li>
<p><a href="#BCGEHHCA">Auditing SYS Administrative Users</a></p>
</li>
<li>
<p><a href="#BCGHDJHC">Managing Audit Trail Records</a></p>
</li>
<li>
<p><a href="#BCGJFEEE">Archiving and Purging Audit Trail Records</a></p>
</li>
<li>
<p><a href="#BCGIICFE">Finding Information About Audited Activities</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="guidelines.htm#BCGJJBAA">"Guidelines for Auditing"</a> for general guidelines to follow for auditing your system</div>
<a id="BCGHGJJH"></a>
<div id="DBSEG60061" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">About Auditing</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGEFHGD">What Is Auditing?</a></p>
</li>
<li>
<p><a href="#CEGHDBIC">Why Is Auditing Used?</a></p>
</li>
<li>
<p><a href="#i1007242">Protecting the Database Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGHEEBF">Activities That Are Always Written to the Standard and Fine-Grained Audit Records</a></p>
</li>
<li>
<p><a href="#CEGJADDC">Activities That Are Always Audited for All Platforms</a></p>
</li>
<li>
<p><a href="#CDDDDJAA">Auditing in a Distributed Database</a></p>
</li>
<li>
<p><a href="#BCGIJAJF">Best Practices for Auditing</a></p>
</li>
</ul>
<p>See also <a class="olink AVADM" href="http://www.oracle.com/pls/topic/lookup?ctx=db111&amp;id=AVADM"><span class="italic">Oracle Audit Vault Administrator's Guide</span></a> for information about Oracle Audit Vault, which provides advanced auditing features.</p>
<a id="BCGEFHGD"></a>
<div id="DBSEG60612" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">What Is Auditing?</h3>
<p><span class="bold">Auditing</span> is the monitoring and recording of selected user database actions, from both database users and nondatabase users<a id="sthref1465" href="#sthref1465" onclick='footdisplay(1,"\"Nondatabase users\" refers to application users who are recognized in the database using the \u003ccode\u003eCLIENT_IDENTIFIER\u003c/code\u003e attribute. To audit this type of user, you can use a fine-grained audit policy. See \u003ca target=\"auditing\" href=\"#CEGBAFIA\"\u003e\"Auditing Specific Activities with Fine-Grained Auditing\"\u003c/a\u003e for more information.")'><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a>. You can base auditing on individual actions, such as the type of SQL statement executed, or on combinations of data that can include the user name, application, time, and so on. You can audit both successful and failed activities. To use auditing, you enable it, and then configure what must be audited. The actions that you audit are recorded in either data dictionary tables or in operating system files.</p>
<p>Oracle recommends that you enable and configure auditing. Auditing is an effective method of enforcing strong internal controls so that your site can meet its regulatory compliance requirements, as defined in the <a id="sthref1466"></a><a id="sthref1467"></a>Sarbanes-Oxley Act. This enables you to monitor business operations, and find any activities that may deviate from company policy. Doing so translates into tightly controlled access to your database and the application software, ensuring that patches are applied on schedule and preventing ad hoc changes. By enabling auditing by default, you can generate an audit record for audit and compliance personnel. Be selective with auditing and ensure that it meets your business compliance needs.</p>
</div>
<!-- class="sect2" -->
<a id="CEGHDBIC"></a>
<div id="DBSEG98319" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Why Is Auditing Used?</h3>
<p>You typically use auditing to perform the following activities:</p>
<ul>
<li>
<p><span class="bold">Enable accountability for actions.</span> These include actions taken in a particular schema, table, or row, or affecting specific content.</p>
</li>
<li>
<p><span class="bold">Deter users (or others, such as intruders) from inappropriate actions based on their accountability.</span></p>
</li>
<li>
<p><span class="bold">Investigate suspicious activity.</span> For example, if a user is deleting data from tables, then a security administrator might decide to audit all connections to the database and all successful and unsuccessful deletions of rows from all tables in the database.</p>
</li>
<li>
<p><span class="bold">Notify an auditor of the actions of an unauthorized user.</span> For example, an unauthorized user could be changing or deleting data, or a the user has more privileges than expected, which can lead to reassessing user authorizations.</p>
</li>
<li>
<p><span class="bold">Monitor and gather data about specific database activities.</span> For example, the database administrator can gather statistics about which tables are being updated, how many logical I/Os are performed, or how many concurrent users connect at peak times.</p>
</li>
<li>
<p><span class="bold">Detect problems with an authorization or access control implementation.</span> For example, you can create audit policies that you expect will never generate an audit record because the data is protected in other ways. However, if these policies generate audit records, then you will know the other security controls are not properly implemented.</p>
</li>
<li>
<p><span class="bold">Address auditing requirements for compliance.</span> Regulations such as the following have common auditing-related requirements:</p>
<ul>
<li>
<p>Sarbanes-Oxley Act</p>
</li>
<li>
<p>Health Insurance Portability and Accountability Act (HIPAA)</p>
</li>
<li>
<p>International Convergence of Capital Measurement and Capital Standards: a Revised Framework (Basel II)</p>
</li>
<li>
<p>Japan Privacy Law</p>
</li>
<li>
<p>European Union Directive on Privacy and Electronic Communications</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1007242"></a>
<div id="DBSEG98320" class="sect2">
<h3 class="sect2">Protecting the Database Audit Trail</h3>
<p>When <a id="sthref1468"></a>auditing <a id="sthref1469"></a>for suspicious database activity, you should protect the integrity of the audit trail records to guarantee the accuracy and completeness of the auditing information.</p>
<p>Oracle Database writes the database audit trail to the <code>SYS.AUD</code>$ and <code>SYS.FGA_LOG$</code> tables. Audit records generated as a result of object audit options set for the <code>SYS.AUD</code>$ and <code>SYS.FGA_LOG$</code> tables can only be deleted from the audit trail by someone who has connected with administrator privileges. Remember that administrators are also audited for unauthorized use. See <a href="#BCGEHHCA">"Auditing SYS Administrative Users"</a> for more information.</p>
<p>Other ways to protect the database audit trail are as follows:</p>
<ul>
<li>
<p><span class="bold">Set the <a id="sthref1470"></a>O7_DICTIONARY_ACCESSIBILITY initialization parameter to FALSE (the default).</span> This way, only users who have the <code>SYSDBA</code> privilege can perform DML actions on the audit data in the <code>SYS.AUD$</code> and <code>SYS.FGA_LOG$</code> tables. In a default installation, <code>O7_DICTIONARY_ACCESSIBILITY</code> is set to <code>FALSE</code>.</p>
</li>
<li>
<p><span class="bold">If you have Oracle Database Vault installed, create a realm around the SYSTEM.AUD$ tables.</span> In an <a id="sthref1471"></a>Oracle Database Vault environment, when Oracle Label Security is enabled, the <code>AUD$</code> table is moved to the <code>SYSTEM</code> schema. The synonym <code>SYS.AUD$</code> is created to refer to the <code>SYSTEM.AUD$</code> table. See <a class="olink DVADM003" href="../../server.111/b31222/cfrealms.htm#DVADM003"><span class="italic">Oracle Database Vault Administrator's Guide</span></a> for more information about realms in Oracle Database Vault.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BCGCJFEG">"Auditing General Activities with Standard Auditing"</a></p>
</li>
<li>
<p><a href="#CEGBAFIA">"Auditing Specific Activities with Fine-Grained Auditing"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BCGHEEBF"></a>
<div id="DBSEG98321" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Activities That Are Always Written to the Standard and Fine-Grained Audit Records</h3>
<p>When <a id="sthref1472"></a><a id="sthref1473"></a>standard <a id="sthref1474"></a>auditing is enabled (that is, you set <code>AUDIT_TRAIL</code> to <code>DB</code> or <code>DB,EXTENDED</code>), Oracle Database audits all data manipulation language (DML) operations, such as <code>INSERT</code>, <code>UPDATE</code>, <code>MERGE</code>, and <code>DELETE</code> on the <a id="sthref1475"></a><code>SYS.AUD$</code> and<a id="sthref1476"></a> <code>SYS.FGA_LOG$</code> tables by non-<code>SYS</code> users. (It performs this audit even if you have not set audit options for the <code>AUD$</code> and <code>FGA_LOGS$</code> tables.) Typically, non-<code>SYS</code> users do not have access to these tables, except if they have been explicitly granted access. If a non-<code>SYS</code> user tampers with the data in the <code>SYS.FGA_LOG$</code> and <code>SYS.AUD$</code> tables, then Oracle Database writes an audit record for each action.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BCGCJFEG">"Auditing General Activities with Standard Auditing"</a></p>
</li>
<li>
<p><a href="#CEGBAFIA">"Auditing Specific Activities with Fine-Grained Auditing"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CEGJADDC"></a>
<div id="DBSEG0622" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Activities That Are Always Audited for All Platforms</h3>
<p>Oracle Database always audits <a id="sthref1477"></a>certain database-related operations and writes them to the operating system audit files. It includes the actions of any user who is logged in with the <code>SYSDBA</code> or <code>SYSOPER</code> privilege. This is called<a id="sthref1478"></a><a id="sthref1479"></a> <a href="glossary.htm#CBACEGED"><span class="xrefglossterm">mandatory auditing</span></a>. Even if you have enabled the database audit trail (that is, setting the <code>AUDIT_TRAIL</code> parameter to <code>DB</code>), Oracle Database still writes mandatory records to operating system files.</p>
<p>By default, the operating system files are in the <code>$ORACLE_BASE</code><code>/admin/$ORACLE_SID/adump</code> directory for both UNIX and Windows systems. On Windows systems, Oracle Database also writes this information to the Windows Event Viewer. You can change the location of this directory by setting the <code><a id="sthref1480"></a>AUDIT_FILE_DEST</code> initialization parameter, which is described in <a href="#BCGDEGHH">"Specifying a Directory for the Operating System Audit Trail"</a>.</p>
<p>Mandatory auditing includes the following operations:</p>
<ul>
<li>
<p><span class="bold">Database startup.</span> An audit record is generated that lists the operating system user starting the instance, the user terminal identifier, and the date and time stamp. This data is stored in the operating system audit trail because the database audit trail is not available until after the startup has successfully completed.</p>
</li>
<li>
<p><a id="sthref1481"></a><span class="bold">SYSDBA and SYSOPER logins.</span> Oracle Database records all <code>SYSDBA</code> and <code>SYSOPER</code> connections.</p>
</li>
<li>
<p><span class="bold">Database shutdown.</span> An audit record is generated that lists the operating system user shutting down the instance, the user terminal identifier, and the date and time stamp.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you set the <code>AUDIT_SYSLOG_LEVEL</code> initialization parameter, mandatory <a id="sthref1482"></a><a id="sthref1483"></a>actions<a id="sthref1484"></a> are <a id="sthref1485"></a><a id="sthref1486"></a>written the to the UNIX syslog. See <a href="#CEGBIIJD">"Using the Syslog Audit Trail on UNIX Systems"</a> for more information about the syslog audit trail. See also your operating system-specific Oracle Database documentation for more information about the operating system and syslog audit trail.</div>
</div>
<!-- class="sect2" -->
<a id="CDDDDJAA"></a>
<div id="DBSEG60613" class="sect2">
<h3 class="sect2">Auditing in a Distributed Database</h3>
<p>Auditing is site autonomous. <a id="sthref1487"></a><a id="sthref1488"></a>An instance audits only the statements issued by directly connected users. A local Oracle Database node cannot audit actions that take place in a remote database.</p>
</div>
<!-- class="sect2" -->
<a id="BCGIJAJF"></a>
<div id="DBSEG98322" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Best Practices for Auditing</h3>
<p>Follow <a id="sthref1489"></a><a id="sthref1490"></a>these best practices guidelines:</p>
<ul>
<li>
<p>As a general rule, design your auditing strategy to collect the amount of information that you need to meet compliance requirements, but being sure to focus on activities that cause the greatest security concerns. For example, auditing every table in the database is not practical, but auditing table columns that contain sensitive data, such as salaries, is. With both standard and fine-grained auditing, there are mechanisms you can use to design audit policies that focus on specific activities to audit.</p>
</li>
<li>
<p>Periodically archive and purge the audit trail data. See <a href="#BCGJFEEE">"Archiving and Purging Audit Trail Records"</a> for more information.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="guidelines.htm#BCGJJBAA">"Guidelines for Auditing"</a> for general guidelines to follow for auditing your system</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BCGEGAGF"></a>
<div id="DBSEG98323" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Selecting an Auditing Type</h2>
<p><a href="#BCGEADJG">Table 9-1</a> <a id="sthref1491"></a>provides a <a id="sthref1492"></a><a id="sthref1493"></a>roadmap for selecting and using the different audit options available.</p>
<div id="DBSEG98324" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref1494"></a><a id="BCGEADJG"></a>Table 9-1 Selecting an Auditing Type</p>
<table class="cellalignment1576" title="Selecting an Auditing Type" summary="Auditing selections" >
<thead>
<tr class="cellalignment1570">
<th class="cellalignment1577" id="r1c1-t7">What Do You Need to Audit?</th>
<th class="cellalignment1577" id="r1c2-t7">About This Type of Auditing</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r2c1-t7" headers="r1c1-t7">
<p>General activities</p>
</td>
<td class="cellalignment1578" headers="r2c1-t7 r1c2-t7">
<p>You can audit SQL statements, privileges, schema objects, functions, procedures, packages, triggers, and network activity. For example, you can audit each time a particular user performs an <code>UPDATE</code> or a <code>DELETE</code> SQL statement.</p>
<p><span class="bold">Location of audit records:</span> You can write the audit records to either the database audit trail or an operating system audit trail in XML format.</p>
<p><span class="bold">General steps:</span></p>
<ol>
<li>
<p>See <a href="#BCGCJFEG">"Auditing General Activities with Standard Auditing"</a> to understand more about auditing general activities.</p>
</li>
<li>
<p>Decide whether you want to write audit records to the database audit trail or to an operating system file. See <a href="#CEGDGIAF">"Managing the Database Audit Trail"</a>.</p>
</li>
<li>
<p>Set the <code>AUDIT_TRAIL</code> initialization parameter to enable auditing and to select the audit trail destination (database audit trail or operating system audit trail). See <a href="#BCGFBDFI">"Configuring Standard Auditing with the AUDIT_TRAIL Initialization Parameter"</a>.</p>
</li>
<li>
<p>Use the <code>AUDIT</code> and <code>NOAUDIT</code> SQL statements to audit the general activities. See the relevant categories under <a href="#BCGCJFEG">"Auditing General Activities with Standard Auditing"</a>.</p>
</li>
<li>
<p>To monitor audit activities, periodically check the operating system records you configured, or query the audit trail data dictionary views. See <a href="#BCGIICFE">"Finding Information About Audited Activities"</a>.</p>
</li>
<li>
<p>Perform maintenance on the audit trail. See <a href="#BCGHDJHC">"Managing Audit Trail Records"</a>.</p>
</li>
<li>
<p>Periodically archive and purge the contents of the audit trail. See <a href="#BCGJFEEE">"Archiving and Purging Audit Trail Records"</a></p>
</li>
</ol>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r3c1-t7" headers="r1c1-t7">
<p>Default, security-relevant SQL statements and privileges</p>
</td>
<td class="cellalignment1578" headers="r3c1-t7 r1c2-t7">
<p>Oracle Database provides a set of default audit settings that you can enable for commonly used security-relevant SQL statements and privileges.</p>
<p><span class="bold">Location of audit records:</span> Oracle Database writes these audit records to the location based on the <code>AUDIT_TRAIL</code> initialization parameter. See also <a href="#CEGCBJIE">"About Audit Records"</a>.</p>
<p><span class="bold">General steps:</span></p>
<ol>
<li>
<p>Follow the instructions in <a href="#CEGGCIAE">"Using Default Auditing for Security-Relevant SQL Statements and Privileges"</a> to enable default auditing.</p>
<p>To understand more about the database audit trail, see <a href="#BCGHDJHC">"Managing Audit Trail Records"</a>.</p>
</li>
<li>
<p>To monitor audit activities, periodically query the database audit trail data dictionary views. See <a href="#BCGIICFE">"Finding Information About Audited Activities"</a>.</p>
</li>
<li>
<p>Perform maintenance on the database audit trail. See <a href="#BCGHDJHC">"Managing Audit Trail Records"</a>.</p>
</li>
<li>
<p>Periodically archive and purge the contents of the audit trail. See <a href="#BCGJFEEE">"Archiving and Purging Audit Trail Records"</a>.</p>
</li>
</ol>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r4c1-t7" headers="r1c1-t7">
<p>Specific, fine-grained activities</p>
</td>
<td class="cellalignment1578" headers="r4c1-t7 r1c2-t7">
<p>You can audit at the most granular level, data access, and actions based on content, using Boolean measures, such as <code>value &gt; 7800</code> or the IP address from which an action occurred.</p>
<p><span class="bold">Location of audit records:</span> You can write the audit records to either the database audit trail or an operating system audit trail in XML format See also <a href="#CEGCBJIE">"About Audit Records"</a>.</p>
<p><span class="bold">General steps:</span></p>
<ol>
<li>
<p>See <a href="#CEGBAFIA">"Auditing Specific Activities with Fine-Grained Auditing"</a> to understand more about auditing specific activities.</p>
</li>
<li>
<p>Decide whether you want to write audit records to the database audit trail or to an operating system file. See <a href="#CEGDGIAF">"Managing the Database Audit Trail"</a>.</p>
</li>
<li>
<p>Use the <code>DBMS_FGA</code> PL/SQL package to configure fine-grained auditing policies. The <code>DBMS_FGA.ADD_POLICY</code> procedure provides the <code>audit_trail</code> parameter, which you use to select the audit trail type. You can choose between a database audit trail or an operating system audit trail using XML files. See the following sections:</p>
<p><a href="#CEGFHJAC">"Creating an Audit Trail for Fine-Grained Audit Records"</a></p>
<p><a href="#CEGHFFGE">"Using the DBMS_FGA Package to Manage Fine-Grained Audit Policies"</a></p>
</li>
<li>
<p>To monitor audit activities, periodically check the operating system records you configured, or query the audit trail data dictionary views. See <a href="#BCGIICFE">"Finding Information About Audited Activities"</a>.</p>
</li>
<li>
<p>Perform maintenance on the audit trail. See <a href="#BCGHDJHC">"Managing Audit Trail Records"</a>.</p>
</li>
<li>
<p>Periodically archive and purge the contents of the audit trail. See <a href="#BCGJFEEE">"Archiving and Purging Audit Trail Records"</a></p>
</li>
</ol>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r5c1-t7" headers="r1c1-t7">
<p><code>SYS</code> administrative users</p>
</td>
<td class="cellalignment1578" headers="r5c1-t7 r1c2-t7">
<p>You can audit the top-level SQL statements issued by users who have connected using the <code>SYSDBA</code> or <code>SYSOPER</code> privilege. (<a id="sthref1495"></a>Top-level refers to statements directly issued by a user. Statements run from a PL/SQL procedure or function are not considered top-level.)</p>
<p><span class="bold">Location of audit records:</span> Oracle Database writes these audit records to an operating system audit trail only. On Windows, Oracle Database writes the <code>SYS</code> audit records to the Windows Event log by default. For UNIX systems, you can write records to a syslog file. See also <a href="#CEGCBJIE">"About Audit Records"</a>.</p>
<p><span class="bold">General steps:</span></p>
<ol>
<li>
<p>See <a href="#BCGEHHCA">"Auditing SYS Administrative Users"</a> to configure administrative auditing.</p>
</li>
<li>
<p>To understand more about the operating system audit trail, see <a href="#CEGBDFCF">Using the Operating System Audit Trail</a>.</p>
</li>
<li>
<p>To monitor audit activities, periodically check the operating system or syslog records you configured. If you are writing to an XML file, you can query the <code>V$XML_AUDIT_TRAIL</code> and <code>DBA_COMMON_AUDIT_TRAIL</code> views. See <a href="#BCGIICFE">"Finding Information About Audited Activities"</a>.</p>
</li>
<li>
<p>Perform maintenance on the audit trail. See <a href="#BCGHDJHC">"Managing Audit Trail Records"</a>.</p>
</li>
<li>
<p>Periodically archive and purge the contents of the audit trail. See <a href="#BCGJFEEE">"Archiving and Purging Audit Trail Records"</a>.</p>
</li>
</ol>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect1" -->
<a id="BCGCJFEG"></a>
<div id="DBSEG98325" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Auditing General Activities with Standard Auditing</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGEHDAG">About Standard Auditing</a></p>
</li>
<li>
<p><a href="#BCGFBDFI">Configuring Standard Auditing with the AUDIT_TRAIL Initialization Parameter</a></p>
</li>
<li>
<p><a href="#BCGFEJII">What Do the Operating System and Database Audit Trails Have in Common?</a></p>
</li>
<li>
<p><a href="#CEGBDFCF">Using the Operating System Audit Trail</a></p>
</li>
<li>
<p><a href="#CEGBIIJD">Using the Syslog Audit Trail on UNIX Systems</a></p>
</li>
<li>
<p><a href="#BCGIHHBJ">How the AUDIT and NOAUDIT SQL Statements Work</a></p>
</li>
<li>
<p><a href="#CEGEEBGE">Auditing SQL Statements</a></p>
</li>
<li>
<p><a href="#CEGDDHDB">Auditing Privileges</a></p>
</li>
<li>
<p><a href="#CEGDFFFE">Auditing SQL Statements and Privileges in a Multitier Environment</a></p>
</li>
<li>
<p><a href="#CEGEGJJB">Auditing Schema Objects</a></p>
</li>
<li>
<p><a href="#BCGGCHJG">Auditing Functions, Procedures, Packages, and Triggers</a></p>
</li>
<li>
<p><a href="#CEGDHGJI">Auditing Network Activity</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BCGEHHCA">"Auditing SYS Administrative Users"</a> to learn how to use standard auditing to audit <code>SYS</code> users</div>
<a id="BCGEHDAG"></a>
<div id="DBSEG98326" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Standard Auditing</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGIJIHJ">What Is Standard Auditing?</a></p>
</li>
<li>
<p><a href="#BCGFIJIE">Who Can Perform Standard Auditing?</a></p>
</li>
<li>
<p><a href="#i1008322">When Are Standard Audit Records Created?</a></p>
</li>
</ul>
<a id="BCGIJIHJ"></a>
<div id="DBSEG98327" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">What Is Standard Auditing?</h4>
<p><a id="sthref1496"></a>In standard auditing, you audit SQL statements, privileges, schema objects, and network activity. <a id="sthref1497"></a>You accomplish this by using the <code>AUDIT</code> SQL statement to enable the auditing, and <code>NOAUDIT</code> to disable it. You can write the audit records to either the database audit trail or to operating system audit files.</p>
</div>
<!-- class="sect3" -->
<a id="BCGFIJIE"></a>
<div id="DBSEG98328" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Who Can Perform Standard Auditing?</h4>
<p>Any user can <a id="sthref1498"></a>configure auditing for the objects in his or her own schema, by using the <code>AUDIT</code> statement. To undo the audit configuration for this object, the user can use the <code>NOAUDIT</code> statement. No additional privileges are needed to perform this task. Users can run <code>AUDIT</code> statements to set auditing options regardless of the <code>AUDIT_TRAIL</code> parameter setting. If auditing has been disabled, the next time it is enabled, Oracle Database will record the auditing activities set by the <code>AUDIT</code> statements. <a href="#CEGHGFBH">"Enabling or Disabling the Standard Audit Trail"</a> explains how to enable standard auditing.</p>
<p>Note the following:</p>
<ul>
<li>
<p>To audit objects in another schema, the user must have the <code>AUDIT ANY</code> system privilege.</p>
</li>
<li>
<p>To audit system privileges, the user must have the <code>AUDIT SYSTEM</code> privilege.</p>
</li>
<li>
<p>If the <code><a id="sthref1499"></a>O7_DICTIONARY_ACCESSIBILITY</code> initialization parameter has been set to <code>FALSE</code> (the default), then only users who have the <code>SYSDBA</code> privilege can perform DML actions on the audit data in the <code>SYS.AUD$</code> and <code>SYS.FGA_LOG$</code> tables. For greater security, set the <code>O7_DICTIONARY_ACCESSIBILITY</code> parameter to <code>FALSE</code> so that non-<code>SYSDBA</code> users cannot audit <code>SYS</code> objects.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SQLRF30002" href="http://www.oracle.com/pls/topic/lookup?ctx=db111&amp;id=SQLRF30002"><code>GRANT</code></a> in <span class="italic">Oracle Database SQL Language Reference</span> for a listing of available system and object privileges</p>
</li>
<li>
<p><a class="olink SQLRF01107" href="../../server.111/b28286/statements_4007.htm#SQLRF01107"><code>AUDIT</code></a> in <span class="italic">Oracle Database SQL Language Reference</span> for a full listing of audit options</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1008322"></a>
<div id="DBSEG98329" class="sect3">
<h4 class="sect3">When Are Standard Audit Records Created?</h4>
<p><a id="sthref1500"></a>You, as the security administrator, enable or disable standard auditing for the entire database. If it is disabled, then no audit records are created. <a id="sthref1501"></a></p>
<p>When auditing is enabled in the database and an action configured to be audited occurs, Oracle Database generates an audit record during or after the execution phase of the SQL statement. <a id="sthref1502"></a>Oracle Database individually audits SQL statements inside PL/SQL program units, as necessary, when the program unit is run.</p>
<p><a id="sthref1503"></a>The generation and insertion of an audit trail record is independent of a user transaction being committed. That is, even if a user transaction is rolled back, the audit trail record remains committed.</p>
<p><a id="sthref1504"></a><a id="sthref1505"></a>Statement and privilege audit options in effect at the time a database user connects to the database remain in effect for the duration of the session. When the session is already active, setting or changing statement or privilege audit options does not take effect in that session. The modified statement or privilege audit options take effect only when the current session ends and a new session is created.</p>
<p>In contrast, changes to schema object audit options become immediately effective for current sessions.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink CNCPT015" href="../../server.111/b28318/sqlplsql.htm#CNCPT015"><span class="italic">Oracle Database Concepts</span></a> for information about the different phases of SQL statement processing and shared SQL</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGFBDFI"></a>
<div id="DBSEG98330" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Configuring Standard Auditing with the AUDIT_TRAIL Initialization Parameter</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGHGFBH">Enabling or Disabling the Standard Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGEJACG">Settings for the AUDIT_TRAIL Initialization Parameter</a></p>
</li>
</ul>
<a id="CEGHGFBH"></a>
<div id="DBSEG66232" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Enabling or Disabling the Standard Audit Trail</h4>
<p>You enable<a id="sthref1506"></a> the <a id="sthref1507"></a>standard <a id="sthref1508"></a>audit trail by setting the <code><a id="sthref1509"></a>AUDIT_TRAIL</code> initialization parameter. This setting determines whether to create the audit trail in the database audit trail, write the audit activities to an operating system file, or to disable auditing.</p>
<p><a id="sthref1510"></a>To enable or disable the standard audit trail, log in to SQL*Plus with administrative privileges, and use the <code>ALTER SYSTEM</code> statement. Afterwards, you need to restart the database instance.</p>
<p>To check the current value of the <code>AUDIT_TRAIL</code> parameter, use the <code>SHOW PARAMETER</code> command in SQL*Plus.</p>
<p><a href="#BCGHDIGI">Example 9-1</a> shows how to check the <code>AUDIT_TRAIL</code> parameter setting.<a id="sthref1511"></a><a id="sthref1512"></a></p>
<div id="DBSEG98331" class="example">
<p class="titleinexample"><a id="BCGHDIGI"></a>Example 9-1 Checking the Current Value of the AUDIT_TRAIL Initialization Parameter</p>
<pre>
SHOW PARAMETER AUDIT_TRAIL

NAME                                 TYPE        VALUE
------------------------------------ ----------- -------
audit_trail                          string      NONE
</pre></div>
<!-- class="example" -->
<p><a href="#BCGBCEJB">Example 9-2</a> shows how to log onto SQL*Plus, enable the standard audit trail, and then restart the database instance.</p>
<div id="DBSEG98332" class="example">
<p class="titleinexample"><a id="BCGBCEJB"></a>Example 9-2 Enabling the Standard Audit Trail</p>
<pre>
CONNECT SYSTEM
Enter password: <span class="italic">password</span>

ALTER SYSTEM SET AUDIT_TRAIL=DB SCOPE=SPFILE;
System altered.

CONNECT SYS/AS SYSOPER
Enter password: <span class="italic">password</span>

SHUTDOWN
Database closed.
Database dismounted.
ORACLE instance shut down.

STARTUP
ORACLE instance started.
</pre></div>
<!-- class="example" -->
<p>This examples uses the <code>SCOPE</code> clause because the database instance had been started using a server parameter file (<code>SPFILE</code>). Starting the database with a server parameter file is the preferred way of starting a database instance. See <a class="olink ADMIN00202" href="../../server.111/b28310/create006.htm#ADMIN00202"><span class="italic">Oracle Database Administrator's Guide</span></a> for information about creating configuring server parameter files.</p>
</div>
<!-- class="sect3" -->
<a id="BCGEJACG"></a>
<div id="DBSEG98333" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Settings for the AUDIT_TRAIL Initialization Parameter</h4>
<p><a href="#CEGHHFBF">Table 9-2</a> <a id="sthref1513"></a>lists <a id="sthref1514"></a>the settings you can use for the <code>AUDIT_TRAIL</code> initialization parameter.</p>
<div id="DBSEG98334" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref1515"></a><a id="CEGHHFBF"></a>Table 9-2 AUDIT_TRAIL Parameter Settings</p>
<table class="cellalignment1576" title="AUDIT_TRAIL Parameter Settings" summary="This table lists and describes the legal values that can be used with the AUDIT_TRAIL initialization parameter." dir="ltr">
<thead>
<tr class="cellalignment1570">
<th class="cellalignment1577" id="r1c1-t11">AUDIT_TRAIL Value</th>
<th class="cellalignment1577" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r2c1-t11" headers="r1c1-t11">
<p><code>DB</code></p>
</td>
<td class="cellalignment1578" headers="r2c1-t11 r1c2-t11">
<p>Directs audit records to the standard audit records to the database audit trail (the <a id="sthref1516"></a><a id="sthref1517"></a><code>SYS.AUD$</code> table), except for mandatory and <code>SYS</code> audit records, which are always written to the operating system audit trail. <a href="#BCGEADJG">Table 9-1</a> describes the location of the audit records for each type of auditing.) Use this setting for a general database for manageability.</p>
<p>If the database was started in read-only mode with <code>AUDIT_TRAIL</code> set to <code>DB</code>, then Oracle Database internally sets <code>AUDIT_TRAIL</code> to <code>OS</code>. Check the alert log for <a id="sthref1518"></a>details. <a id="sthref1519"></a><a id="sthref1520"></a></p>
<p>See also <a href="#CEGDGIAF">"Managing the Database Audit Trail"</a>.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r3c1-t11" headers="r1c1-t11">
<p><code><a id="sthref1521"></a>DB, EXTENDED</code></p>
</td>
<td class="cellalignment1578" headers="r3c1-t11 r1c2-t11">
<p>Behaves the same as <a id="sthref1522"></a><code>AUDIT_TRAIL=DB</code>, but also populates the SQL bind and SQL text CLOB-type columns of the <code>SYS.AUD$</code> table, when available. These two columns are populated only when this parameter is specified.</p>
<p><code>DB,EXTENDED</code> enables you to capture the SQL statement used in the action that was audited. You can capture both the SQL statement that caused the audit, and any associated <a id="sthref1523"></a>bind variables. However, be aware that you only can capture data from the following column datatypes: <code>CHAR</code>, <code>NCHAR</code>, <code>VARCHAR</code>, <code>VARCHAR2</code>, <code>NVARCHAR2</code>, <code>NUMBER</code>, <code>FLOAT</code>, <code>BINARY_FLOAT</code>, <code>BINARY_DOUBLE</code>, <code>LONG</code>, <code>ROWID</code>, <code>DATE</code>, <code>TIMESTAMP</code>, and <code>TIMESTAMP WITH TIMEZONE</code>. Also be aware that <code>DB, EXTENDED</code> can capture sensitive data, such as credit card information. See also <a href="guidelines.htm#CHDBDBDG">"Auditing Sensitive Information"</a>.</p>
<p>If the database was started in read-only mode with <code>AUDIT_TRAIL</code> set to <code>DB, EXTENDED</code>, then Oracle Database internally sets <code>AUDIT_TRAIL</code> to <code>OS</code>. Check the alert log for details.</p>
<p>You can specify <code>DB,EXTENDED</code> in either of the following ways:</p>
<pre>
ALTER SYSTEM SET AUDIT_TRAIL=DB, EXTENDED SCOPE=SPFILE;

ALTER SYSTEM SET AUDIT_TRAIL='DB','EXTENDED' SCOPE=SPFILE;
</pre>
<p>However, do not enclose <code>DB, EXTENDED</code> in quotes, for example:</p>
<pre>
ALTER SYSTEM SET AUDIT_TRAIL='DB, EXTENDED' SCOPE=SPFILE;
</pre></td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r4c1-t11" headers="r1c1-t11">
<p><code>OS</code></p>
</td>
<td class="cellalignment1578" headers="r4c1-t11 r1c2-t11">
<p>Directs all audit records to an operating system <a id="sthref1524"></a>file.</p>
<p>Oracle recommends that you use the <code>OS</code> setting, particularly if you are using an ultra-secure database configuration. For additional advantages, see <a href="#BCGFDFIA">"Advantages of the Operating System Audit Trail"</a>.</p>
<p>If you set <code>AUDIT_TRAIL</code> to <code>OS</code>, set the following additional initialization parameters:</p>
<ul>
<li>
<p><code>AUDIT_FILE_DEST</code>, which specifies the location of the operating system audit record file. On UNIX systems, the default location is <code>$ORACLE_BASE</code><code>/admin/$ORACLE_SID/adump</code>. For better performance on UNIX systems, set the <code>AUDIT_FILE_DEST</code> parameter to a directory on a disk that is locally attached to the host running the Oracle Database instance. On Windows, the OS setting writes the audit trail to the Application area of the Windows Event Viewer.</p>
</li>
<li>
<p><code>AUDIT_SYS_OPERATIONS</code>, if you want to audit the top-level SQL statements directly issued by users who have connected with the <code>SYSDBA</code> or <code>SYSOPER</code> privilege. To enable this auditing, set <code>AUDIT_SYS_OPERATIONS</code> to <code>TRUE</code>.</p>
<p>If you set <code>AUDIT_SYS_OPERATIONS</code> to <code>TRUE</code> and <code>AUDIT_TRAIL</code> to <code>XML</code> or <code>XML,EXTENDED</code>, then Oracle Database writes <code>SYS</code> audit records operating system files in XML format.</p>
</li>
<li>
<p><code>AUDIT_SYSLOG_LEVEL</code>, which writes <code>SYS</code> and standard <code>OS</code> audit records to the system audit log using the <code>SYSLOG</code> utility. This option only applies to UNIX environments. See <a href="#CEGCFCJI">"Configuring Syslog Auditing"</a> for more information.</p>
</li>
</ul>
<p>See also <a href="#CEGBDFCF">"Using the Operating System Audit Trail"</a>.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r5c1-t11" headers="r1c1-t11">
<p><code><a id="sthref1525"></a>XML</code></p>
</td>
<td class="cellalignment1578" headers="r5c1-t11 r1c2-t11">
<p>Writes <a id="sthref1526"></a>to the operating system audit record file in XML format. Records all elements of the <code>AuditRecord</code> node given by the XML schema in <code><a href="http://xmlns.oracle.com/oracleas/schema/dbserver_audittrail-11_1.xsd">http://xmlns.oracle.com/oracleas/schema/dbserver_audittrail-11_1.xsd</a></code> except <code>Sql_Text</code> and <code>Sql_Bind</code> to operating system XML audit files. (This <code>.xsd</code> file represents the schema definition of the XML audit file. An XML schema is a document written in the XML Schema language.)</p>
<p>See also <a href="#BCGFDFIA">"Advantages of the Operating System Audit Trail"</a>.</p>
<p>If you set the <code>XML</code> value, also set the <code>AUDIT_FILE_DEST</code> parameter. For all platforms, including Windows, the default location for XML audit trail records is <code>$ORACLE_BASE</code><code>/admin/$ORACLE_SID/adump</code>.</p>
<p>In addition <a id="sthref1527"></a><a id="sthref1528"></a><a id="sthref1529"></a>to XML files, Oracle Database creates a text index file that lists the XML files that were generated by the XML auditing. The file is named <code>adx_</code><code><span class="codeinlineitalic">$ORACLE_SID</span></code><code>.txt</code> (for example, <code>adx_ORCL.txt</code>). The <code>adx_</code><code><span class="codeinlineitalic">$ORACLE_SID</span></code><code>.txt</code> is only used when you query the <code>V$XML_AUDIT_TRAIL</code> data dictionary view. Deleting this file does not interfere with auditing, except that you will not see the audit records from the files that are not present in <code>adx_</code><code><span class="codeinlineitalic">$ORACLE_SID</span></code><code>.txt</code> at the time of the query.</p>
<p>The <code>XML AUDIT_TRAIL</code> value does not affect syslog <a id="sthref1530"></a>audit file. In other words, if you have set the <code>AUDIT_TRAIL</code> parameter to XML, the syslog audit records will still be in text format, not XML file format.</p>
<p>To control the output for <code>SYS</code> and mandatory audit records:</p>
<ul>
<li>
<p><span class="bold">To write SYS and mandatory audit files to operating system files in XML format:</span> Set <code>AUDIT_TRAIL</code> to <code>XML</code> or <code>XML,EXTENDED</code>, set <code>AUDIT_SYS_OPERATIONS</code> to <code>TRUE</code>, but do not set the <code>AUDIT_SYSLOG_LEVEL</code> parameter.</p>
</li>
<li>
<p><span class="bold">To write SYS and mandatory audit records to syslog audit files and standard audit records to XML audit files:</span> Set <code>AUDIT_TRAIL</code> to <code>XML</code> or <code>XML,EXTENDED</code>, set <code>AUDIT_SYS_OPERATIONS</code> to <code>TRUE</code>, and set the <code>AUDIT_SYSLOG_LEVEL</code> parameter.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r6c1-t11" headers="r1c1-t11">
<p><code>XML, <a id="sthref1531"></a><a id="sthref1532"></a>EXTENDED</code></p>
</td>
<td class="cellalignment1578" headers="r6c1-t11 r1c2-t11">
<p>Behaves the same <a id="sthref1533"></a>as <a id="sthref1534"></a><code>AUDIT_TRAIL=XML</code>, but also includes SQL text and SQL bind information in the operating system XML audit files</p>
<p>You can specify <code>XML,EXTENDED</code> in either of the following ways:</p>
<pre>
ALTER SYSTEM SET AUDIT_TRAIL=XML, EXTENDED SCOPE=SPFILE;

ALTER SYSTEM SET AUDIT_TRAIL='XML','EXTENDED' SCOPE=SPFILE;
</pre>
<p>However, do not enclose <code>XML, EXTENDED</code> in quotes, for example:</p>
<pre>
ALTER SYSTEM SET AUDIT_TRAIL='XML, EXTENDED' SCOPE=SPFILE;
</pre>
<p>If you set the <code>XML, EXTENDED</code> value, also set the <code>AUDIT_FILE_DEST</code> and <code>AUDIT_SYS_OPERATIONS</code> initialization parameters. See the description for the <code>XML</code> value for more information.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r7c1-t11" headers="r1c1-t11">
<p><code>NONE</code></p>
</td>
<td class="cellalignment1578" headers="r7c1-t11 r1c2-t11">
<p>Disables standard auditing. This value is the default if the <code>AUDIT_TRAIL</code> parameter was not set in the <code>init.ora</code> file or if you created the database using a method other than Database Configuration Assistant. If you created the database using Database Configuration Assistant, then the default is <code>DB</code>. <a id="sthref1535"></a></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<p>Note the following:</p>
<ul>
<li>
<p><span class="bold">You do not need to restart the database after you run the AUDIT or NOAUDIT statements.</span> You only need to restart the database if you made a universal change, such as changing the <code>AUDIT_TRAIL</code> initialization parameter.</p>
</li>
<li>
<p><span class="bold">You do not need to set AUDIT_TRAIL to enable either fine-grained auditing or SYS auditing.</span> For fine-grained auditing, you add and remove fine-grained audit policies as necessary, applying them to the specific operations or objects you want to monitor. To enable <code>SYS</code> auditing, set the <code>AUDIT_SYS_OPERATIONS</code> parameter to <code>TRUE</code>.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGFEJII"></a>
<div id="DBSEG98335" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">What Do the Operating System and Database Audit Trails Have in Common?</h3>
<p>The <a id="sthref1536"></a>operating<a id="sthref1537"></a> system and <a id="sthref1538"></a>database <a id="sthref1539"></a>audit trails both capture many of the same types of actions. <a href="#BCGEAHAG">Table 9-3</a> lists the operating system audit trail records. Most map to equivalent columns in the <code>DBA_AUDIT_TRAIL</code> view. For a description of these columns, see <a class="olink REFRN23023" href="../../server.111/b28320/statviews_3073.htm#REFRN23023"><span class="italic">Oracle Database Reference</span></a>.</p>
<div id="DBSEG98336" class="tblhruleformal">
<p class="titleintable"><a id="sthref1540"></a><a id="BCGEAHAG"></a>Table 9-3 What the Operating System Audit Trail Records Mean</p>
<table class="cellalignment1576" title="What the Operating System Audit Trail Records Mean" summary="OS Audit Trail Record Descriptions" dir="ltr">
<thead>
<tr class="cellalignment1570">
<th class="cellalignment1577" id="r1c1-t12">Operating System Audit Record</th>
<th class="cellalignment1577" id="r1c2-t12">Equivalent DBA_AUDIT_TRAIL View Column</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r2c1-t12" headers="r1c1-t12">
<p><code>SESSIONID</code></p>
</td>
<td class="cellalignment1578" headers="r2c1-t12 r1c2-t12">
<p><code>SESSIONID</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r3c1-t12" headers="r1c1-t12">
<p><code>ENTRYID</code></p>
</td>
<td class="cellalignment1578" headers="r3c1-t12 r1c2-t12">
<p><code>ENTRYID</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r4c1-t12" headers="r1c1-t12">
<p><code>STATEMENT</code></p>
</td>
<td class="cellalignment1578" headers="r4c1-t12 r1c2-t12">
<p><code>STATEMENTID</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r5c1-t12" headers="r1c1-t12">
<p><code>USERID</code></p>
</td>
<td class="cellalignment1578" headers="r5c1-t12 r1c2-t12">
<p><code>USERNAME</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r6c1-t12" headers="r1c1-t12">
<p><code>USERHOST</code></p>
</td>
<td class="cellalignment1578" headers="r6c1-t12 r1c2-t12">
<p><code>USERHOST</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r7c1-t12" headers="r1c1-t12">
<p><code>TERMINAL</code></p>
</td>
<td class="cellalignment1578" headers="r7c1-t12 r1c2-t12">
<p><code>TERMINAL</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r8c1-t12" headers="r1c1-t12">
<p><code>ACTION</code></p>
</td>
<td class="cellalignment1578" headers="r8c1-t12 r1c2-t12">
<p><code>ACTION</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r9c1-t12" headers="r1c1-t12">
<p><code>SYS$OPTIONS</code></p>
</td>
<td class="cellalignment1578" headers="r9c1-t12 r1c2-t12">
<p>Indicates what audit option was set with<a id="sthref1541"></a><a id="sthref1542"></a> <code>AUDIT</code> or <code>NOAUDIT</code>, or what<a id="sthref1543"></a><a id="sthref1544"></a> privilege was granted or revoked.<a id="sthref1545" href="#sthref1545" onclick='footdisplay(1,"For example, if the \u003ccode\u003eACTION\u003c/code\u003e value is \u003ccode\u003e104\u003c/code\u003e (for \u003ccode\u003eAUDIT\u003c/code\u003e) or \u003ccode\u003e105\u003c/code\u003e (for \u003ccode\u003eNOAUDIT\u003c/code\u003e), then the \u003ccode\u003eSYS$OPTIONS\u003c/code\u003e number represents an audit option listed in the \u003ccode\u003eSTMT_AUDIT_OPTION_MAP\u003c/code\u003e table. If the \u003ccode\u003eACTION\u003c/code\u003e value is \u003ccode\u003e108\u003c/code\u003e (for \u003ccode\u003eGRANT\u003c/code\u003e) or \u003ccode\u003e109\u003c/code\u003e (for \u003ccode\u003eREVOKE\u003c/code\u003e), then the number represents a privilege listed in the \u003ccode\u003eSYSTEM_PRIVILEGE_MAP\u003c/code\u003e table.")'><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r10c1-t12" headers="r1c1-t12">
<p><code>RETURNCODE</code></p>
</td>
<td class="cellalignment1578" headers="r10c1-t12 r1c2-t12">
<p><code>RETURNCODE</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r11c1-t12" headers="r1c1-t12">
<p><code>OBJ$CREATOR</code></p>
</td>
<td class="cellalignment1578" headers="r11c1-t12 r1c2-t12">
<p><code>OWNER</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r12c1-t12" headers="r1c1-t12">
<p><code>OBJ$NAME</code></p>
</td>
<td class="cellalignment1578" headers="r12c1-t12 r1c2-t12">
<p><code>OBJ_NAME</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r13c1-t12" headers="r1c1-t12">
<p><code>OBJ$PRIVILEGES</code></p>
</td>
<td class="cellalignment1578" headers="r13c1-t12 r1c2-t12">
<p><code>OBJ_PRIVILEGE</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r14c1-t12" headers="r1c1-t12">
<p><code>AUTH$GRANTEE</code></p>
</td>
<td class="cellalignment1578" headers="r14c1-t12 r1c2-t12">
<p><code>GRANTEE</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r15c1-t12" headers="r1c1-t12">
<p><code>NEW$OWNER</code></p>
</td>
<td class="cellalignment1578" headers="r15c1-t12 r1c2-t12">
<p><code>NEW_OWNER</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r16c1-t12" headers="r1c1-t12">
<p><code>NEW$NAME</code></p>
</td>
<td class="cellalignment1578" headers="r16c1-t12 r1c2-t12">
<p><code>NEW_NAME</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r17c1-t12" headers="r1c1-t12">
<p><code>SES$ACTIONS</code></p>
</td>
<td class="cellalignment1578" headers="r17c1-t12 r1c2-t12">
<p><code>SES_ACTIONS</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r18c1-t12" headers="r1c1-t12">
<p><code>LOGOFF$PREAD</code></p>
</td>
<td class="cellalignment1578" headers="r18c1-t12 r1c2-t12">
<p><code>LOGOFF_PREAD</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r19c1-t12" headers="r1c1-t12">
<p><code>LOGOFF$LWRITE</code></p>
</td>
<td class="cellalignment1578" headers="r19c1-t12 r1c2-t12">
<p><code>LOGOFF_LWRITE</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r20c1-t12" headers="r1c1-t12">
<p><code>COMMENT$TEXT</code></p>
</td>
<td class="cellalignment1578" headers="r20c1-t12 r1c2-t12">
<p><code>COMMENT_TEXT</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r21c1-t12" headers="r1c1-t12">
<p><code>OS$USERID</code></p>
</td>
<td class="cellalignment1578" headers="r21c1-t12 r1c2-t12">
<p><code>OS_USERNAME</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r22c1-t12" headers="r1c1-t12">
<p><code>PRIV$USED</code></p>
</td>
<td class="cellalignment1578" headers="r22c1-t12 r1c2-t12">
<p><code>PRIV_USED</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r23c1-t12" headers="r1c1-t12">
<p><code>SES$LABEL</code></p>
</td>
<td class="cellalignment1578" headers="r23c1-t12 r1c2-t12">
<p><code>CLIENT_ID</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r24c1-t12" headers="r1c1-t12">
<p><code>SES$TID</code></p>
</td>
<td class="cellalignment1578" headers="r24c1-t12 r1c2-t12">
<p>Does not have an equivalent in the <code>DBA_AUDIT_TRAIL</code> view, but it does appear in the <code>SYS.AUD$</code> table</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r25c1-t12" headers="r1c1-t12">
<p><code>SPARE2</code></p>
</td>
<td class="cellalignment1578" headers="r25c1-t12 r1c2-t12">
<p>Does not have an equivalent in the <code>DBA_AUDIT_TRAIL</code> view, but it does appear in the <code>SYS.AUD$</code> table</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1&nbsp;</sup>For example, if the <code>ACTION</code> value is <code>104</code> (for <code>AUDIT</code>) or <code>105</code> (for <code>NOAUDIT</code>), then the <code>SYS$OPTIONS</code> number represents an audit option listed in the <code>STMT_AUDIT_OPTION_MAP</code> table. If the <code>ACTION</code> value is <code>108</code> (for <code>GRANT</code>) or <code>109</code> (for <code>REVOKE</code>), then the number represents a privilege listed in the <code>SYSTEM_PRIVILEGE_MAP</code> table.</p>
</div>
<!-- class="sect2" -->
<a id="CEGBDFCF"></a>
<div id="DBSEG0624" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using the Operating System Audit Trail</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#i1007867">About the Operating System Trail</a></p>
</li>
<li>
<p><a href="#BCGEDHJA">What Do the Operating System Audit Trail Records Look Like?</a></p>
</li>
<li>
<p><a href="#BCGFDFIA">Advantages of the Operating System Audit Trail</a></p>
</li>
<li>
<p><a href="#CEGGCFHA">How the Operating System Audit Trail Works</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CEGBIIJD">"Using the Syslog Audit Trail on UNIX Systems"</a></p>
</li>
<li>
<p><a href="#BCGGCFJF">"Managing the Operating System Audit Trail"</a></p>
</li>
<li>
<p><a href="#BCGJCCAE">"Archiving and Purging the Operating System Audit Trail"</a></p>
</li>
</ul>
</div>
<a id="i1007867"></a>
<div id="DBSEG98337" class="sect3">
<h4 class="sect3">About the Operating System Trail</h4>
<p><a id="sthref1546"></a>As an alternative to creating standard audit records in the <code>DBA_AUDIT_TRAIL</code> (<code>SYS.AUD$</code> table), you can create standard audit records in operating system files. The operating system <a id="sthref1547"></a>file that <a id="sthref1548"></a>contains the audit trail can include any of the following data:</p>
<ul>
<li>
<p>Audit records generated by the operating system</p>
</li>
<li>
<p>Database audit trail records</p>
</li>
<li>
<p>Database actions that are always audited</p>
</li>
<li>
<p>Audit records for administrative users (<code>SYS</code>)</p>
</li>
</ul>
<p>You can write the operating system audit records to either a text file or an XML file.</p>
</div>
<!-- class="sect3" -->
<a id="BCGEDHJA"></a>
<div id="DBSEG98338" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">What Do the Operating System Audit Trail Records Look Like?</h4>
<p>The operating system audit trail files are in either text or XML file format. Be aware that the contents of the text and XML operating system files have some differences, and that the formats may change across different releases. With each release of Oracle Database, new enhancements, such as the audit type, have been made to the XML file, but not the text file. The text operating system file has a different presentation for the timestamp, for example:</p>
<pre>
Wed May  6 00:57:36 2009 -07:00
</pre>
<p>However, this timestamp does not appear in the event log or syslog, which have their own format for timestamps. The timestamp string only appears in the text operating system audit files.</p>
<p><a href="#BCGJJFCE">Example 9-3</a> shows a <a id="sthref1549"></a>typical text <a id="sthref1550"></a>operating system audit trail for a logon operation on an Oracle database that is installed on Microsoft Windows. (The text in the actual record wraps around, but for this manual, each item is separated onto its own line for easier readability.)</p>
<div id="DBSEG98339" class="example">
<p class="titleinexample"><a id="BCGJJFCE"></a>Example 9-3 Text File Operating System Audit Trail</p>
<pre>
Audit trail: 
LENGTH: "349" 
SESSIONID:[5] "43464" 
ENTRYID:[1] "1" 
STATEMENT:[1] "1" 
USERID:[6] "DBSNMP" 
USERHOST:[7] "SHOBEEN" 
TERMINAL:[3] "MAU" 
ACTION:[3] "100" 
RETURNCODE:[1] "0" 
COMMENT$TEXT:[97] "Authenticated by: DATABASE; Client address: (ADDRESS=(PROTOCOL=tcp)(HOST=192.0.2.4)(PORT=2955))" 
OS$USERID:[19] "NT AUTHORITY\SYSTEM" 
DBID:[10] "1212547373" 
PRIV$USED:[1] "5"
</pre></div>
<!-- class="example" -->
<p>In this example:</p>
<ul>
<li>
<p><code>LENGTH</code> refers to the total number of bytes used in this audit record. This number includes the trailing newline bytes (<code>\n</code>), if any, at the end of the audit record.</p>
</li>
<li>
<p><code>[]</code> brackets indicate the length of each value for each audit entry. For example, the <code>USERID</code> entry, <code>DBSNMP</code>, is 6 bytes long.</p>
</li>
<li>
<p><code>SESSIONID</code> indicates the audit session ID number. You can also find the session ID by querying the <code>AUDSID</code> column in the <code>V$SESSION</code> data dictionary view.</p>
</li>
<li>
<p><code>ENTRYID</code> indicates the current audit entry number, assigned to each audit trail record. The audit <code>ENTRYID</code> sequence number is shared between fine-grained audit records and regular audit records.</p>
</li>
<li>
<p><code>STATEMENT</code> is a numeric ID assigned to the statement the user runs. It appears for each statement issued during the user session, because a statement can result in multiple audit records.</p>
</li>
<li>
<p><code>ACTION</code> is a numeric value representing the action the user performed. The corresponding name of the action type is in the <code>AUDIT_ACTIONS</code> table. For example, action <code>100</code> refers to <code>LOGON</code>.</p>
</li>
<li>
<p><code>RETURNCODE</code> indicates if the audited action was successful. 0 indicates success. If the action fails, the return code lists the Oracle Database error number. For example, if you try to drop a non-existent table, the error number is <code>ORA-00903</code>, which in turn translates to <code>903</code> in the <code>RETURNCODE</code> setting.</p>
</li>
<li>
<p><code>COMMENT$TEXT</code> indicates additional comments about the audit record. For example, for <code>LOGON</code> audit records, it can indicate the authentication method.It corresponds to the <code>COMENT_TEXT</code> column of the <code>DBA_COMMON_AUDIT_TRAIL</code> data dictionary view.</p>
</li>
<li>
<p><code>DBID</code> is a database identifier calculated when the database is created. It corresponds to the <code>DBID</code> column of the <code>V$DATABASE</code> data dictionary view.</p>
</li>
<li>
<p><code>ECONTEXT_ID</code> indicates the application execution context identifier.</p>
</li>
<li>
<p><code>PRIVS$USED</code> refers to the privilege that was used to perform an action. To find the privilege, query the <code>SYSTEM_PRIVILEGE_MAP</code> table. For example, privilege <code>5</code> refers to <code>-5</code> in this table, which means <code>CREATE SESSION</code>. <code>PRIVS$USED</code> corresponds to the <code>PRIV_USED</code> column in the <code>DBA_COMMON_AUDIT_TRAIL</code>, which lists the privilege by name.</p>
</li>
</ul>
<p>Other possible values are as follows:</p>
<ul>
<li>
<p><code>SCN</code> (for example, <code>SCN:8934328925</code>) indicates the System Change Number (SCN). Use this value if you want to perform a flashback query to find the value of a setting (for example, a column) at a time in the past. For example, to find the value of the <code>ORDER_TOTAL</code> column of the <code>OE.ORDERS</code> table based on the SCN number, use the following <code>SELECT</code> statement:</p>
<pre>
SELECT ORDER_TOTAL 
FROM OE.ORDERS
AS OF SCN = 8934328925
WHERE ORDER_TOTAL = 86;
</pre></li>
<li>
<p><code>SES_ACTIONS</code> indicates the actions that took place during the session. This field is present only if the event was audited with the <code>BY SESSION</code> clause. Because this field does not explain in detail the actions that occurred during the session, you should configure the audit event with the <code>BY ACCESS</code> clause.</p>
<p>The <code>SES_ACTIONS</code> field contains 16 characters. Positions 14, 15, and 16 are reserved for future use. In the first 12 characters, each position indicates the result of an action. They are: <code>ALTER</code>, <code>AUDIT</code>, <code>COMMENT</code>, <code>DELETE</code>, <code>GRANT</code>, <code>INDEX</code>, <code>INSERT</code>, <code>LOCK</code>, <code>RENAME</code>, <code>SELECT</code>, <code>UPDATE</code>, and <code>FLASHBACK</code>. For example, if the user had successfully run the ALTER statement, the <code>SES_ACTIONS</code> setting is as follows:</p>
<pre>
S---------------
</pre>
<p>The <code>S</code>, in the first position (for <code>ALTER</code>), indicates success. Had the <code>ALTER</code> statement failed, the letter <code>F</code> would have appeared in its place. If the action resulted in both a success and failure, then the letter is <code>B</code>.</p>
</li>
<li>
<p><code>SES$TID</code> indicates the ID of the object affected by the audited action.</p>
</li>
<li>
<p><code>SPARE2</code> indicates whether the user modified <code>SYS.AUD$</code> table. <code>0</code> means the user modified <code>SYS.AUD$</code>; otherwise, the value is <code>NULL</code>.</p>
</li>
</ul>
<p>Similarly, <a href="#BCGIJJAD">Example 9-4</a> <a id="sthref1551"></a>shows how <a id="sthref1552"></a>an XML audit trail record appears. The text wraps around in the actual record, but for this manual, each element appears on its own line for easier readability. To find all the tags that appear in the XML audit file, you can view its schema in a Web browser at</p>
<p><code><a href="http://www.oracle.com/technology/oracleas/schema/dbserver_audittrail-11_1.xsd">http://www.oracle.com/technology/oracleas/schema/dbserver_audittrail-11_1.xsd</a></code></p>
<div id="DBSEG98340" class="example">
<p class="titleinexample"><a id="BCGIJJAD"></a>Example 9-4 XML File Operating System Audit Trail</p>
<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
  &lt;Audit xmlns="http://xmlns.oracle.com/oracleas/schema/dbserver_audittrail-11_2.xsd"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://xmlns.oracle.com/oracleas/schema/dbserver_audittrail-11_2.xsd"&gt;
   &lt;Version&gt;11.2&lt;/Version&gt;
   &lt;AuditRecord&gt;
     &lt;Audit_Type&gt;1&lt;/Audit_Type&gt;
       &lt;Session_Id&gt;43535&lt;/Session_Id&gt;
       &lt;StatementId&gt;1&lt;/StatementId&gt;
       &lt;EntryId&gt;1&lt;/EntryId&gt;
       &lt;Extended_Timestamp&gt;2009-04-29T18:32:26.062000Z&lt;/Extended_Timestamp&gt;
       &lt;DB_User&gt;SYSMAN&lt;/DB_User&gt;
       &lt;OS_User&gt;SYSTEM&lt;/OS_User&gt;
       &lt;Userhost&gt;shobeen&lt;/Userhost&gt;
       &lt;OS_Process&gt;3164:3648&lt;/OS_Process&gt;
       &lt;Terminal&gt;mau&lt;/Terminal&gt;
       &lt;Instance_Number&gt;0&lt;/Instance_Number&gt;
       &lt;Action&gt;100&lt;/Action&gt;
       &lt;TransactionId&gt;0000000000000000&lt;/TransactionId&gt; 
       &lt;Returncode&gt;0&lt;/Returncode&gt;
       &lt;Comment_Text&gt;Authenticated by: DATABASE; Client address: (ADDRESS=(PROTOCOL=tcp)(HOST=192.0.2.4)(PORT=3536))&lt;/Comment_Text&gt;
       &lt;Priv_Used&gt;5&lt;/Priv_Used&gt;
&lt;/AuditRecord&gt;
&lt;/Audit&gt;
</pre></div>
<!-- class="example" -->
<p>In this example:</p>
<ul>
<li>
<p><code>AuditRecord</code> element contains the entire audit record. (See <a href="#BCGJJFCE">Example 9-3</a> for more information about the elements within the <code>Audit_Record</code> element.)</p>
</li>
<li>
<p><code>Audit_Type</code> indicates the type of audit trail. Possible values are as follows:</p>
<ul>
<li>
<p>1: Standard audit record</p>
</li>
<li>
<p>2: Fine-grained audit record</p>
</li>
<li>
<p>4: <code>SYS</code> audit record</p>
</li>
<li>
<p>8: Mandatory audit record</p>
</li>
</ul>
<p>This field only appears in the XML audit files, not the OS text audit files.</p>
</li>
<li>
<p><code>Extended_Timestamp</code> indicates the time of the audited operation (timestamp of user login for entries created by <code>AUDIT SESSION</code>) in the time zone of the session, in Coordinated Universal Time (UTC) or Greenwich Mean Time (GMT). This field only appears in the XML audit files, not the OS text audit files.</p>
</li>
<li>
<p><code>Instance_Number</code> indicates the instance number to which the user is connected, for an Oracle Real Application Clusters environment. In this example, the number is <code>0</code>, which is used for single-instance database installations. The <code>INSTANCE_NUMBER</code> initialization parameter specifies this number.</p>
</li>
</ul>
<p>The following values can appear if you set the <code>AUDIT_TRAIL</code> parameter to <code>XML, EXTENDED</code>. Both are listed in the <code>DBA_COMMON_AUDIT_TRAIL</code> data dictionary view.</p>
<ul>
<li>
<p><code>Sql_Bind</code> (for example, <code>&lt;Sql_Bind&gt;#1(5):89&lt;/Sql_Bind&gt;</code>) shows the value of the bind variable. The syntax is as follows:</p>
<pre>
<span class="italic">VariablePosition</span>(<span class="italic">LengthOfVariableValue</span>):<span class="italic">ValueofBindVariable</span>
</pre>
<p>The example <code>#1(5):89</code> indicates that there is 1 bind variable; its value is 5 characters long; and the value of the bind variable is <code>89</code>.</p>
</li>
<li>
<p><code>Sql_Text</code> (for example, <code>&lt;Sql_Text&gt;begin procedure_one(:num); end; &lt;/Sql_Text&gt;</code>) appears if you have set the <code>AUDIT_TRAIL</code> parameter to <code>XML, EXTENDED</code>. It shows the SQL text that the user entered.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGFDFIA"></a>
<div id="DBSEG98341" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Advantages of the Operating System Audit Trail</h4>
<p>Using<a id="sthref1553"></a> the <a id="sthref1554"></a>operating system audit trail offers these advantages:</p>
<ul>
<li>
<p>It reduces the likelihood of a <a id="sthref1555"></a>denial-of-service (DoS) attack.</p>
</li>
<li>
<p>It makes it easier to secure the audit trail. If the auditor is distinct from the database administrator, then you <span class="italic">must</span> use the <code>OS</code>, <code>XML</code>, or <code>XML, EXTENDED</code> setting. Otherwise, a database administrator can view and modify any auditing information that is stored in the database.</p>
</li>
<li>
<p>Because you are writing the audit trail to a specific location that you can restrict to specific users, the operating system audit trail enforces separation of duty concepts.</p>
</li>
<li>
<p>Writing the audit trail to an operating system file results in the least amount of overhead on the database. For this reason, it is excellent for very large databases.</p>
</li>
<li>
<p>Audit records stored in operating system files can be more secure than database-stored audit records because access can require file permissions that database administrators do not have. Greater availability is another advantage to operating system storage for audit records, because they remain available even if the database is temporarily inaccessible.</p>
</li>
<li>
<p>If the <code>AUDIT_TRAIL</code> initialization parameter is set to <code>XML</code> (or <code>XML, EXTENDED</code>), then Oracle Database writes audit records to the operating system as XML files. You can use the <code>V$XML_AUDIT_TRAIL</code> view to make XML audit records available to database administrators through a SQL query, providing enhanced usability.</p>
</li>
<li>
<p>The <code>DBA_COMMON_AUDIT_TRAIL</code> view includes the standard and fine grained audit trails written to database tables, XML-format audit trail records, and the contents of the <code>V$XML_AUDIT_TRAIL</code> dynamic view (standard, fine grained, <code>SYS</code> and mandatory).</p>
</li>
<li>
<p>Using your operating system audit trail can enable you to consolidate audit records from multiple sources, including Oracle Database and other applications. Examining system activity can be more efficient with all audit records in one place. If you use XML audit records, then you can use of any standard XML editing tool to review or extract information from those records.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CEGGCFHA"></a>
<div id="DBSEG98342" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">How the Operating System Audit Trail Works</h4>
<p>The <a id="sthref1556"></a>operating system audit trail writes the audit data to an operating system file. You can enable this feature by setting the <code>AUDIT_TRAIL</code> parameter to one of the following values:</p>
<ul>
<li>
<p><code>OS</code>: Writes the audit trail records to a text operating system file on UNIX systems and to the applications Event Viewer on Microsoft Windows.</p>
</li>
<li>
<p><code>XML</code>: Writes the audit trail records to an XML file.</p>
</li>
<li>
<p><code>XML, EXTENDED</code>: Writes the audit trail records to an XML file and includes SQL text and SQL bind information in the operating system XML audit files.</p>
</li>
</ul>
<p>The <code>AUDIT_FILE_DEST</code> initialization parameter sets the location of the operating system audit file. If you want to audit top-level statements issued by users who log in to the database with the <code>SYSDBA</code> or <code>SYSOPER</code> privilege, then set the <code>AUDIT_SYS_OPERATIONS</code> parameter to <code>TRUE</code>. See <a href="#CEGHHFBF">Table 9-2, "AUDIT_TRAIL Parameter Settings"</a> for more information about these settings.</p>
<p>The records that are written to an operating system file are not recorded to the <code>SYS.AUD$</code> and <code>SYS.FGA_LOG$</code> tables. You can still view the contents of the XML operating system audit files by querying the <code>DBA_COMMON_AUDIT_TRAIL</code> data dictionary views. Querying this view parses all XML files (all files with an <code>.xml</code> extension) in the <code>AUDIT_FILE_DEST</code> directory, and then presents them in relational table format. Because XML is a standard document format, many utilities are available to parse and analyze XML data. Consult the operating system-specific Oracle Database documentation to find if this feature has been implemented on your operating system.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGBIIJD"></a>
<div id="DBSEG66112" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using the Syslog Audit Trail on UNIX Systems</h3>
<p><a id="sthref1557"></a><a id="sthref1558"></a>On UNIX systems, you can audit the activities of system administrators by creating a syslog audit trail.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGDBCDG">About the Syslog Audit Trail</a></p>
</li>
<li>
<p><a href="#CEGCAEDA">Format of the Information Stored in the Syslog Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGDJIJE">What Does the Syslog Audit Trail Look Like?</a></p>
</li>
<li>
<p><a href="#CEGCFCJI">Configuring Syslog Auditing</a></p>
</li>
</ul>
<a id="CEGDBCDG"></a>
<div id="DBSEG98343" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About the Syslog Audit Trail</h4>
<p>A <a id="sthref1559"></a>potential security vulnerability for an operating system audit trail is that a privileged user, such as a database administrator, can modify or delete database audit records.<a id="sthref1560"></a> To minimize this risk, you can use a syslog audit trail. Syslog is a standard protocol on UNIX-based systems for logging information from different components of a network. Applications call the <code>syslog()</code> function to log information to the syslog daemon, which then determines where to log the information. You can configure syslog to log information to a file or to a dedicated host by editing the <code>syslog.conf</code> file. You can also configure syslog to alert a specified set of users when information is logged.</p>
<p>Because applications, such as an Oracle process, use the <code>syslog()</code> function to log information to the syslog daemon, a privileged user would not have permissions to the file system where syslog messages are logged. For this reason, audit records stored using a syslog audit trail can be more secure than audit records stored using an operating system audit trail. In addition to restricting permissions to a file system for a privileged user, for a syslog audit trail to be secure, neither privileged users nor the Oracle process should have <code>root</code> access to the system where the audit records are written.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
You should have a strong understanding of how to work with <code>syslog</code> before enabling <code>syslog</code> auditing. See the following references for more information about syslog:
<ul>
<li>
<p><a class="olink REFRN10263" href="../../server.111/b28320/initparams016.htm#REFRN10263"><span class="italic">Oracle Database Reference</span></a> for information about the <code>AUDIT_SYSLOG_LEVEL</code> initialization parameter</p>
</li>
<li>
<p>The UNIX man page for the <code>syslogd</code> utility for more information about the <code><span class="codeinlineitalic">facility.priority</span></code> settings and their directory paths</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CEGCAEDA"></a>
<div id="DBSEG98344" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Format of the Information Stored in the Syslog Audit Trail</h4>
<p><a id="sthref1561"></a>Similar to the operating system audit trail records, Oracle Database encodes the syslog records to ensure greater security. If you have Oracle Audit Vault installed, you can use its Syslog Collector to extract and transfer syslog audit records to centralized Oracle Audit Vault server.</p>
</div>
<!-- class="sect3" -->
<a id="BCGDJIJE"></a>
<div id="DBSEG98345" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">What Does the Syslog Audit Trail Look Like?</h4>
<p><a href="#BCGCFADJ">Example 9-5</a> shows <a id="sthref1562"></a>how the syslog audit trail can appear. (For this example, the text has been reformatted for easier readability. In reality, the text is all on one line.) As with other Oracle Database audit trails, the brackets indicate the length of the value that was audited. For syslog audit trails, the text from (and including) <code>LENGTH:</code> is Oracle Database audit record. The prepended text (the date and <code>Oracle Audit [10085]</code> line) is added by the syslog utility.</p>
<div id="DBSEG98346" class="example">
<p class="titleinexample"><a id="BCGCFADJ"></a>Example 9-5 Syslog Audit Trail for SYS User</p>
<pre>
May 14 23:40:15 shobeen 
Oracle Audit[10085]: 
LENGTH : '171' 
ACTION :[18] 'select * from aud$' 
DATABASE USER:[1] '/' 
PRIVILEGE :[6] 'SYSDBA' 
CLIENT USER:[7] 'laurelh' 
CLIENT TERMINAL:[6] 'pts/12' 
STATUS:[1] '0' 
DBID:[9] '562317007' 
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="CEGCFCJI"></a>
<div id="DBSEG98347" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Configuring Syslog Auditing</h4>
<p>To <a id="sthref1563"></a>enable syslog auditing, follow these steps:</p>
<ol>
<li>
<p>Assign a value of <code>OS</code> to the <code>AUDIT_TRAIL</code> initialization parameter, as described in <a href="#CEGHGFBH">"Enabling or Disabling the Standard Audit Trail"</a>.</p>
<p>For example:</p>
<pre>
ALTER SYSTEM SET AUDIT_TRAIL=OS SCOPE=SPFILE;
</pre></li>
<li>
<p>Manually add and set the <a id="sthref1564"></a><code>AUDIT_SYSLOG_LEVEL</code> parameter to the initialization parameter file, <code>init</code><code><span class="codeinlineitalic">sid</span></code><code>.ora</code>.</p>
<p>Set the <code>AUDIT_SYSLOG_LEVEL</code> parameter to specify a facility and priority in the format <code>AUDIT_SYSLOG_LEVEL</code>=<code><span class="codeinlineitalic">facility.priority</span></code>.</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">facility</span></code>: Describes the part of the operating system that is logging the message. Accepted values are <code>user</code>, <code>local0</code>&ndash;<code>local7</code>, <code>syslog</code>, <code>daemon</code>, <code>kern</code>, <code>mail</code>, <code>auth</code>, <code>lpr</code>, <code>news</code>, <code>uucp</code>, and <code>cron</code>.</p>
<p>The <code>local0</code>&ndash;<code>local7</code> values are predefined tags that enable you to sort the syslog message into categories. These categories can be log files or other destinations that the syslog utility can access. To find more information about these types of tags, refer to the <code>syslog</code> utility <code>MAN</code> page.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">priority</span></code>: Defines the severity of the message. Accepted values are <code>notice</code>, <code>info</code>, <code>debug</code>, <code>warning</code>, <code>err</code>, <code>crit</code>, <code>alert</code>, and <code>emerg</code>.</p>
</li>
</ul>
<p>The syslog daemon compares the value assigned to the facility argument of the <code>AUDIT_SYSLOG_LEVEL</code> parameter with the <code>syslog.conf</code> file to determine where to log information.</p>
<p>For example, the following statement identifies the facility as <code>local1</code> with a priority level of <code>warning</code>:</p>
<pre>
AUDIT_SYSLOG_LEVEL=local1.warning
</pre>
<p>See <a class="olink REFRN10263" href="../../server.111/b28320/initparams016.htm#REFRN10263"><span class="italic">Oracle Database Reference</span></a> for more information about <code>AUDIT_SYSLOG_LEVEL</code>.</p>
</li>
<li>
<p>Log in to the computer that contains the syslog configuration file, <code>/etc/syslog.conf</code>, with the superuser (root) privilege.</p>
</li>
<li>
<p>Add the audit file destination to the <code>syslog</code> configuration file <code>/etc/syslog.conf</code>.</p>
<p>For example, assuming you had set the <code>AUDIT_SYSLOG_LEVEL</code> to <code>local1.warning</code>, enter the following:</p>
<pre>
local1.warning /var/log/audit.log
</pre>
<p>This setting logs all warning messages to the <code>/var/log/audit.log</code> file.</p>
</li>
<li>
<p>Restart the syslog logger:</p>
<pre>
$/etc/rc.d/init.d/syslog restart
</pre>
<p>Now, all audit records will be captured in the file <code>/var/log/audit.log</code> through the syslog daemon.</p>
</li>
<li>
<p>Restart the database instance:</p>
<pre>
CONNECT SYS / AS SYSOPER
Enter password: <span class="italic">password</span>

SHUTDOWN

STARTUP
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGIHHBJ"></a>
<div id="DBSEG625" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">How the AUDIT and NOAUDIT SQL Statements Work</h3>
<p>This section contains:<a id="sthref1565"></a></p>
<ul>
<li>
<p><a href="#i1007245">Enabling Standard Auditing with the AUDIT SQL Statement</a></p>
</li>
<li>
<p><a href="#CEGGIIHH">Auditing Statement Executions: Successful, Unsuccessful, or Both</a></p>
</li>
<li>
<p><a href="#CEGFCCHE">Auditing the Number of Statement Executions</a></p>
</li>
<li>
<p><a href="#CEGFBHAI">Auditing Actions Performed by Specific Users</a></p>
</li>
<li>
<p><a href="#i1006737">Removing the Audit Option with the NOAUDIT SQL Statement</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF01107" href="../../server.111/b28286/statements_4007.htm#SQLRF01107"><span class="italic">Oracle Database SQL Language Reference</span></a> for a description of the <code>AUDIT</code> statement syntax</div>
<a id="i1007245"></a>
<div id="DBSEG11011" class="sect3">
<h4 class="sect3">Enabling Standard Auditing with the AUDIT SQL Statement</h4>
<p><a id="sthref1566"></a>To audit with standard auditing, use the <code>AUDIT</code> SQL statement.</p>
<p><a href="#BCGFGFCI">Table 9-4</a> lists the categories in which you can use the <code>AUDIT</code> statement.<a id="sthref1567"></a></p>
<div id="DBSEG98348" class="tblhruleformal">
<p class="titleintable"><a id="sthref1568"></a><a id="BCGFGFCI"></a>Table 9-4 Standard Auditing Levels and Their Effects</p>
<table class="cellalignment1576" title="Standard Auditing Levels and Their Effects " summary="his table lists the three standard levels of auditing you can set with the AUDIT statement. It also describes the effect of each setting." dir="ltr">
<thead>
<tr class="cellalignment1570">
<th class="cellalignment1577" id="r1c1-t16">Level</th>
<th class="cellalignment1577" id="r1c2-t16">Effect</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r2c1-t16" headers="r1c1-t16">
<p>Statement</p>
</td>
<td class="cellalignment1578" headers="r2c1-t16 r1c2-t16">
<p>Audits specific SQL statements or groups of statements that affect a particular type of database object. For example, <code>AUDIT TABLE</code> audits the <code>CREATE TABLE</code>, <code>TRUNCATE TABLE</code>, <code>COMMENT ON TABLE</code>, and <code>DELETE [FROM] TABLE</code> statements.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r3c1-t16" headers="r1c1-t16">
<p>Privilege</p>
</td>
<td class="cellalignment1578" headers="r3c1-t16 r1c2-t16">
<p>Audits SQL statements that are authorized by the specified system privilege. For example, <code>AUDIT CREATE ANY TRIGGER</code> audits statements issued using the <code>CREATE ANY TRIGGER</code> system privilege.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r4c1-t16" headers="r1c1-t16">
<p>Object</p>
</td>
<td class="cellalignment1578" headers="r4c1-t16 r1c2-t16">
<p>Audits specific statements on specific objects, such as <code>ALTER TABLE</code> on the <code>HR.EMPLOYEES</code> table.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r5c1-t16" headers="r1c1-t16">
<p>Network</p>
</td>
<td class="cellalignment1578" headers="r5c1-t16 r1c2-t16">
<p>Audits unexpected errors in network protocol or internal errors in the network layer.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect3" -->
<a id="CEGGIIHH"></a>
<div id="DBSEG98349" class="sect3">
<h4 class="sect3">Auditing Statement Executions: Successful, Unsuccessful, or Both</h4>
<p><a id="sthref1569"></a><a id="sthref1570"></a>For statement, privilege, and schema object auditing, Oracle Database permits the selective auditing of successful executions of statements, unsuccessful attempts to execute statements, or both. This enables you to monitor actions even if the audited statements do not complete successfully. Monitoring unsuccessful SQL statement can expose users who are snooping or acting maliciously, though most unsuccessful SQL statements are neither.</p>
<p>This method of auditing is also useful in that it reduces the audit trail, helping you to focus on specific actions. This can aid in maintaining good database performance.</p>
<p>The options are as follows:</p>
<ul>
<li>
<p><span class="bold">WHENEVER SUCCESSFUL clause</span>: <a id="sthref1571"></a><a id="sthref1572"></a>This clause audits only successful executions of the audited statement.</p>
</li>
<li>
<p><span class="bold">WHENEVER NOT SUCCESSFUL clause</span>: This clause audits only unsuccessful executions of the audited statement.</p>
<p>Auditing an unsuccessful statement execution generates an audit report only if a valid SQL statement is issued but fails, because it lacks proper authorization or references a nonexistent schema object. Statements that fail to execute because they were not valid cannot be audited.</p>
<p>For example, an enabled privilege auditing option set to audit unsuccessful statement executions audits statements that use the target system privilege but failed for other reasons. One example is when a <code>CREATE TABLE</code> auditing condition is set, but some <code>CREATE</code> <code>TABLE</code> statements fail due to insufficient quota for the specified tablespace.</p>
</li>
<li>
<p><span class="bold">Omitting WHENEVER SUCCESSFUL or WHENEVER NOT SUCCESSFUL</span>: If you omit these clauses, then Oracle Database audits both successful and unsuccessful executions of the audited statement.</p>
</li>
</ul>
<p>For example:</p>
<pre>
AUDIT CREATE TABLE WHENEVER NOT SUCCESSFUL;
</pre></div>
<!-- class="sect3" -->
<a id="CEGFCCHE"></a>
<div id="DBSEG98350" class="sect3">
<h4 class="sect3">Auditing the Number of Statement Executions</h4>
<p>You can <a id="sthref1573"></a><a id="sthref1574"></a>audit the number of statement executions that occur by including either the <code>ACCESS</code> or <code>SESSION</code> option in the <code>AUDIT</code> statement. Both of these options generate an audit record for each execution of an audited statement or operation. These audit options capture the following information:</p>
<ul>
<li>
<p>All statement audit options that audit DDL statements</p>
</li>
<li>
<p>All privilege audit options that audit DDL statements</p>
</li>
</ul>
<p>Setting <code>BY ACCESS</code> and <code>BY SESSION</code> inserts one audit record into the audit trail for each execution of an auditable operation within a cursor. Events that cause cursors to be reused include the following:</p>
<ul>
<li>
<p>An application, such as Oracle Forms, holding a cursor open for reuse</p>
</li>
<li>
<p>Subsequent execution of a cursor using new bind variables</p>
</li>
<li>
<p>Statements executed within PL/SQL loops where the PL/SQL engine optimizes the statements to reuse a single cursor</p>
</li>
</ul>
<p>Auditing is <span class="italic">not</span> affected if a cursor is shared. Each user creates her or his own audit trail records on first execution of the cursor.</p>
<p>The difference between <code>BY ACCESS</code> and <code>BY SESSION</code> lies in how the <code>DBA_AUDIT_TRAIL</code> data dictionary view records the actions that they capture:</p>
<ul>
<li>
<p><span class="bold">ACCESS option</span>: The <code>ACTION</code> column of the <code>DBA_AUDIT_TRAIL</code> view shows the action code.</p>
</li>
<li>
<p><span class="bold">SESSION option</span>: The <code>ACTION</code> column of the <code>DBA_AUDIT_TRAIL</code> view shows the contents of the <code>SESSION REC</code> column.</p>
</li>
</ul>
<p>To use either of these options, append the option name to the <code>AUDIT</code> statement. For example:</p>
<pre>
AUDIT SELECT TABLE BY SESSION;
</pre>
<p>In this scenario:</p>
<ul>
<li>
<p>The user <code>jward</code> connects to the database and issues five <code>SELECT</code> statements against the table named <code>departments</code> and then disconnects from the database.</p>
</li>
<li>
<p>The user <code>swilliams</code> connects to the database and issues three <code>SELECT</code> statements against the <code>departments</code> table and then disconnects from the database.</p>
</li>
</ul>
<p>The single audit trail contains eight records, one recorded for each <code>SELECT</code> statement.</p>
</div>
<!-- class="sect3" -->
<a id="CEGFBHAI"></a>
<div id="DBSEG98351" class="sect3">
<h4 class="sect3">Auditing Actions Performed by Specific Users</h4>
<p><a id="sthref1575"></a><a id="sthref1576"></a>Statement and privilege audit options can audit statements issued by any user or statements issued by a specific list of users. By focusing on specific users, you can minimize the number of audit records generated.</p>
<p><a href="#CEGBHBID">Example 9-6</a> shows how to audit statements by users <code>scott</code> and <code>blake</code> when they query or update a table or view.</p>
<div id="DBSEG98352" class="example">
<p class="titleinexample"><a id="CEGBHBID"></a>Example 9-6 Using AUDIT to Audit User Actions</p>
<pre>
AUDIT SELECT TABLE, UPDATE TABLE 
     BY scott, blake;
</pre></div>
<!-- class="example" -->
<p>See <a class="olink SQLRF01107" href="../../server.111/b28286/statements_4007.htm#SQLRF01107"><span class="italic">Oracle Database SQL Language Reference</span></a> for additional information about auditing by user.</p>
</div>
<!-- class="sect3" -->
<a id="i1006737"></a>
<div id="DBSEG98353" class="sect3">
<h4 class="sect3">Removing the Audit Option with the NOAUDIT SQL Statement</h4>
<p><a id="sthref1577"></a><a id="sthref1578"></a>The<a id="sthref1579"></a> <code>NOAUDIT</code> statement turns off the audit options. Use it to reset statement and privilege audit options, and object audit options. A <code>NOAUDIT</code> statement that sets statement and privilege audit options can include the <code>BY</code> <code><span class="codeinlineitalic">user</span></code> clause to specify a list of users to limit the scope of the statement and privilege audit options.</p>
<p>You can use a <code>NOAUDIT</code> statement to disable an audit option selectively using the <code>WHENEVER</code> clause. If the clause is not specified, then the auditing option is disabled entirely, for both successful and unsuccessful cases.</p>
<p><a id="sthref1580"></a>The <code>NOAUDIT</code> statement does not support the <code>BY ACCESS</code> or <code>BY SESSION</code> clause. You can turn off audit options, no matter how they were turned on, by using an appropriate <code>NOAUDIT</code> statement.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF01607" href="../../server.111/b28286/statements_9017.htm#SQLRF01607"><span class="italic">Oracle Database SQL Language Reference</span></a> for a description of the <code>NOAUDIT</code> statement syntax</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGEEBGE"></a>
<div id="DBSEG225" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing SQL Statements</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGDDEHB">About SQL Statement Auditing</a></p>
</li>
<li>
<p><a href="#CEGHFDED">Types of SQL Statements That Are Audited</a></p>
</li>
<li>
<p><a href="#CEGEDICG">Configuring SQL Statement Auditing</a></p>
</li>
<li>
<p><a href="#CEGEGCAE">Removing SQL Statement Auditing</a></p>
</li>
</ul>
<a id="BCGDDEHB"></a>
<div id="DBSEG98354" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About SQL Statement Auditing</h4>
<p><a id="sthref1581"></a><a id="sthref1582"></a>SQL statement auditing is the selective auditing of related groups of SQL statements regarding a particular type of database structure or schema object, but not a specifically named structure or schema object. The default auditing option for statement auditing is <code>BY ACCESS</code>.</p>
</div>
<!-- class="sect3" -->
<a id="CEGHFDED"></a>
<div id="DBSEG98355" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Types of SQL Statements That Are Audited</h4>
<p>The statements that you can audit are in the following categories:</p>
<ul>
<li>
<p><span class="bold"><a id="sthref1583"></a><a id="sthref1584"></a><a id="sthref1585"></a>DDL statements.</span> For example, <code>AUDIT</code> <code>TABLE</code> audits all <code>CREATE</code> and <code>DROP</code> <code>TABLE</code> statements</p>
</li>
<li>
<p><span class="bold"><a id="sthref1586"></a><a id="sthref1587"></a>DML statements.</span> For example, <code>AUDIT</code> <code>SELECT</code> <code>TABLE</code> audits all <code>SELECT</code> ... <code>FROM</code> <code>TABLE/VIEW</code> statements, regardless of the table or view</p>
</li>
</ul>
<p>Statement auditing can be broad or focused, for example, by auditing the activities of all database users or of only a select list of activities.</p>
</div>
<!-- class="sect3" -->
<a id="CEGEDICG"></a>
<div id="DBSEG98356" class="sect3">
<h4 class="sect3">Configuring SQL Statement Auditing</h4>
<p>Use <a id="sthref1588"></a>the <code>AUDIT</code> <a id="sthref1589"></a><a id="sthref1590"></a>statement to configure SQL statement auditing. You must have the <code>AUDIT SYSTEM</code> system privilege before you can enable auditing. Typically, only the security administrator is granted this system privilege.</p>
<p><a href="#BCGBDAJF">Example 9-7</a> shows how to audit the <code>SELECT TABLE</code> SQL statement.</p>
<div id="DBSEG98357" class="example">
<p class="titleinexample"><a id="BCGBDAJF"></a>Example 9-7 Using AUDIT to Configure SQL Statement Auditing</p>
<pre>
AUDIT SELECT TABLE;
</pre></div>
<!-- class="example" -->
<p>If you plan to audit user connections or references to non-existent objects, follow these guidelines:</p>
<ul>
<li>
<p><span class="bold">Auditing Login and Logoff Connections and Disconnections.</span> The <code>AUDIT SESSION</code> statement generates an independent audit record for every login and logoff event. This enables you to <a id="sthref1591"></a>audit all successful and unsuccessful connections to and disconnections from the database, regardless of user.</p>
<p>For example:</p>
<pre>
AUDIT SESSION BY ACCESS;
</pre>
<p>You can set this option selectively for individual users also, as in the following example:</p>
<pre>
AUDIT SESSION BY ACCESS BY jward, jsmith;
</pre></li>
<li>
<p><span class="bold">Auditing Statements That Fail Because an Object Does Not Exist.</span> The <code>NOT EXISTS</code> option of the <code>AUDIT</code> statement specifies auditing of all SQL statements that fail because the target object does not exist.</p>
<p>For example:</p>
<pre>
AUDIT NOT EXISTS;
</pre></li>
</ul>
<p>See <a class="olink SQLRF01107" href="../../server.111/b28286/statements_4007.htm#SQLRF01107"><span class="italic">Oracle Database SQL Language Reference</span></a> for detailed information about the <code>AUDIT</code> SQL statement.</p>
</div>
<!-- class="sect3" -->
<a id="CEGEGCAE"></a>
<div id="DBSEG98358" class="sect3">
<h4 class="sect3">Removing SQL Statement Auditing</h4>
<p>To <a id="sthref1592"></a>remove <a id="sthref1593"></a><a id="sthref1594"></a>SQL statement auditing, <a id="sthref1595"></a>use the use the <code>NOAUDIT</code> SQL statement. (Privilege auditing will still be enabled.) You must have the <code>AUDIT SYSTEM</code> system privilege before you can remove SQL statement auditing. If you included the <code>IN SESSION CURRENT</code> clause in the <code>AUDIT</code> statement, you cannot remove this <code>AUDIT</code> statement using the <code>NOAUDIT</code> statement. (The audit setting discontinues when the user's session ends.)</p>
<p><a href="#BCGJGFHD">Example 9-8</a> shows examples of using the <code>NOAUDIT</code> statement to remove auditing.</p>
<div id="DBSEG98359" class="example">
<p class="titleinexample"><a id="BCGJGFHD"></a>Example 9-8 Using NOAUDIT to Disable Session and SQL Statement Auditing</p>
<pre>
NOAUDIT session;
NOAUDIT session BY preston, sebastian;
NOAUDIT SELECT TABLE, INSERT TABLE, DELETE TABLE,
    EXECUTE PROCEDURE;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGCAJEA">Example 9-9</a> shows how to remove all auditing by using the <code>NOAUDIT</code> statement.</p>
<div id="DBSEG98360" class="example">
<p class="titleinexample"><a id="BCGCAJEA"></a>Example 9-9 Using NOAUDIT to Remove All Auditing</p>
<pre>
NOAUDIT ALL;
</pre></div>
<!-- class="example" -->
<p>See <a class="olink SQLRF01607" href="../../server.111/b28286/statements_9017.htm#SQLRF01607"><span class="italic">Oracle Database SQL Language Reference</span></a> for detailed information about the <code>NOAUDIT</code> statement.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGDDHDB"></a>
<div id="DBSEG325" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing Privileges</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGGBABA">About Privilege Auditing</a></p>
</li>
<li>
<p><a href="#CEGJGHGC">Types of Privileges That Can Be Audited</a></p>
</li>
<li>
<p><a href="#CEGDBDCA">Configuring Privilege Auditing</a></p>
</li>
<li>
<p><a href="#CEGJBCJA">Removing Privilege Auditing</a></p>
</li>
</ul>
<a id="BCGGBABA"></a>
<div id="DBSEG98361" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About Privilege Auditing</h4>
<p><a id="sthref1596"></a><a id="sthref1597"></a>Privilege auditing audits statements that use a system privilege, such as <code>SELECT</code> <code>ANY</code> <code>TABLE.</code> In this kind of auditing, SQL statements that require the audited privilege to succeed are recorded. The default auditing option for privilege auditing is <code>BY ACCESS</code>.</p>
</div>
<!-- class="sect3" -->
<a id="CEGJGHGC"></a>
<div id="DBSEG98362" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Types of Privileges That Can Be Audited</h4>
<p>You<a id="sthref1598"></a> can audit the use of any system privilege. Similar to statement auditing, privilege auditing audits the activities of all database users or only a specified list.</p>
<p>If you set similar audit options for both statement and privilege auditing, then only a single audit record is generated. For example, if the statement clause <code>TABLE</code> and the system privilege <code>CREATE</code> <code>TABLE</code> are both audited, then only a single audit record is generated each time a table is created.</p>
<p>Privilege auditing does not occur if the action is already permitted by the existing owner and object privileges. Privilege auditing is triggered only if the privileges are insufficient, that is, only if what makes the action possible is a system privilege. For example, suppose that user <code>SCOTT</code> has been granted the <code>SELECT ANY TABLE</code> privilege and the <code>SELECT ANY TABLE</code> is being audited. If <code>SCOTT</code> selects his own table (for example, <code>SCOTT.EMP</code>), then the <code>SELECT ANY TABLE</code> privilege is not used. Because he performed the <code>SELECT</code> statement within his own schema, no audit record is generated. On the other hand, if <code>SCOTT</code> selects from another schema (for example, the <code>HR.EMPLOYEES</code> table), then an audit record <span class="italic">is</span> generated. Because <code>SCOTT</code> selected a table outside his own schema, he needed to use the <code>SELECT ANY TABLE</code> privilege.</p>
<p>Privilege auditing is more focused than statement auditing, because each privilege auditing option audits only specific types of statements, not a related list of statements. For example, the statement auditing clause, <code>TABLE</code>, audits <code>CREATE</code> <code>TABLE</code>, <code>ALTER</code> <code>TABLE</code>, and <code>DROP</code> <code>TABLE</code> statements. However, the privilege auditing option, <code>CREATE TABLE</code>, audits only <code>CREATE TABLE</code> statements, because only the <code>CREATE TABLE</code> statement requires the <code>CREATE</code> <code>TABLE</code> privilege.</p>
<p>See the listing of system privileges in the <code>GRANT</code> SQL statement section of <a class="olink SQLRF01603" href="../../server.111/b28286/statements_9013.htm#SQLRF01603"><span class="italic">Oracle Database SQL Language Reference</span></a>.</p>
</div>
<!-- class="sect3" -->
<a id="CEGDBDCA"></a>
<div id="DBSEG98363" class="sect3">
<h4 class="sect3">Configuring Privilege Auditing</h4>
<p>Privilege <a id="sthref1599"></a><a id="sthref1600"></a>audit <a id="sthref1601"></a>options are the same as their corresponding system privileges. For example, the option to audit use of the <code>DELETE ANY TABLE</code> privilege is <code>DELETE ANY TABLE</code>.</p>
<p><a href="#BCGJCIBC">Example 9-10</a> shows how to audit the <code>DELETE ANY TABLE</code> privilege.</p>
<div id="DBSEG98364" class="example">
<p class="titleinexample"><a id="BCGJCIBC"></a>Example 9-10 Using AUDIT to Enable Privilege Auditing</p>
<pre>
AUDIT DELETE ANY TABLE BY ACCESS WHENEVER NOT SUCCESSFUL;
</pre></div>
<!-- class="example" -->
<p>To audit all successful and unsuccessful uses of the <code>DELETE ANY TABLE</code> system privilege, enter the following statement:</p>
<pre>
AUDIT DELETE ANY TABLE;
</pre>
<p><a href="#BCGDEGJF">Example 9-11</a> shows how to audit all unsuccessful <code>SELECT</code>, <code>INSERT</code>, and <code>DELETE</code> statements on all tables and unsuccessful uses of the <code>EXECUTE PROCEDURE</code> system privilege, by all database users, and by individual audited statement.</p>
<div id="DBSEG98365" class="example">
<p class="titleinexample"><a id="BCGDEGJF"></a>Example 9-11 Auditing Unsuccessful Statements and Privileges</p>
<pre>
AUDIT SELECT TABLE, INSERT TABLE, DELETE TABLE, EXECUTE PROCEDURE
      BY ACCESS
      WHENEVER NOT SUCCESSFUL;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="CEGJBCJA"></a>
<div id="DBSEG98366" class="sect3">
<h4 class="sect3">Removing Privilege Auditing</h4>
<p>The <a id="sthref1602"></a>following<a id="sthref1603"></a><a id="sthref1604"></a> statement removes all privilege audit options:</p>
<pre>
NOAUDIT ALL PRIVILEGES;
</pre>
<p>This example disables the audit settings from <a href="#BCGDEGJF">Example 9-11</a>:</p>
<pre>
NOAUDIT SELECT TABLE, INSERT TABLE, DELETE TABLE, EXECUTE PROCEDURE;
</pre>
<p>To disable privilege auditing options, you must have the <code>AUDIT SYSTEM</code> system privilege. Usually, only the security administrator is granted this system privilege.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGDFFFE"></a>
<div id="DBSEG725" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing SQL Statements and Privileges in a Multitier Environment</h3>
<p>You<a id="sthref1605"></a><a id="sthref1606"></a> can use the <code>AUDIT</code> statement to audit the activities of a client in a multitier environment. In a multitier environment, Oracle Database preserves the identity of a client through all tiers. Thus, you can audit actions taken on behalf of the client by a middle-tier application. To do so, use the <code>BY</code> <code><span class="codeinlineitalic">user</span></code> clause in your <code>AUDIT</code> statement. This audit includes the user session as well as proxy sessions.</p>
<p>The middle tier can also set the user client identity in a database session, enabling the auditing of end-user actions through the middle-tier application. The end-user client identity then shows up in the audit trail.</p>
<p><a href="#BCGFCDII">Example 9-12</a> shows how to audit <code>SELECT TABLE</code> statements issued on by the user <code>jackson</code>.</p>
<div id="DBSEG98367" class="example">
<p class="titleinexample"><a id="BCGFCDII"></a>Example 9-12 Using AUDIT to Audit a SQL Statement for a User</p>
<pre>
AUDIT SELECT TABLE BY jackson;
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink CNCPT" href="../../server.111/b28318/toc.htm"><span class="italic">Oracle Database Concepts</span></a> for more information about proxies and multitier applications</div>
<p><a href="#BCGHEBJD">Figure 9-1</a> illustrates <a id="sthref1607"></a>how you can audit proxy users by querying the <code>COMMENT_TEXT</code>, <code>PROXY_SESSIONID</code>, <code>ACTION_NAME</code>, and <code>SESSION_ID</code> columns of the <code>DBA_AUDIT_TRAIL</code> view. In this scenario, both the database user and proxy user accounts are known to the database. Session pooling can be used.</p>
<div id="DBSEG98368" class="figure">
<p class="titleinfigure"><a id="BCGHEBJD"></a>Figure 9-1 Auditing Proxy Users</p>
<img width="531" height="454" src="img/audit_proxy_user.gif" alt="Description of Figure 9-1 follows" /><br />
<a id="sthref1608" href="img_text/audit_proxy_user.htm">Description of "Figure 9-1 Auditing Proxy Users"</a><br />
<br /></div>
<!-- class="figure" -->
<p><a href="#BCGHBHAG">Figure 9-2</a> illustrates how you can audit <a id="sthref1609"></a>client identifier information across multiple database sessions by querying the <code>CLIENT_ID</code> column of the <code>DBA_AUDIT_TRAIL</code> data dictionary view. In this scenario, the client identifier has been set to <code>CLIENT_A</code>. As with the proxy user-database user scenario described in <a href="#BCGHEBJD">Figure 9-1</a>, session pooling can be used.</p>
<div id="DBSEG98369" class="figure">
<p class="titleinfigure"><a id="BCGHBHAG"></a>Figure 9-2 Auditing Client Identifier Information Across Sessions</p>
<img width="690" height="464" src="img/client_identifier.gif" alt="Description of Figure 9-2 follows" /><br />
<a id="sthref1610" href="img_text/client_identifier.htm">Description of "Figure 9-2 Auditing Client Identifier Information Across Sessions"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="authentication.htm#CHDBAHIB">"Preserving User Identity in Multitiered Environments"</a> for more information about user authentication in a multitiered environment</div>
</div>
<!-- class="sect2" -->
<a id="CEGEGJJB"></a>
<div id="DBSEG425" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing Schema Objects</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGEJAEF">About Schema Object Auditing</a></p>
</li>
<li>
<p><a href="#CEGEIFIJ">Types of Schema Objects That Can Be Audited</a></p>
</li>
<li>
<p><a href="#CEGBIGIF">Schema Object Audit Options for Views, Procedures, and Other Elements</a></p>
</li>
<li>
<p><a href="#CEGIIJAB">Configuring Schema Object Auditing</a></p>
</li>
<li>
<p><a href="#CEGGBGEI">Removing Object Auditing</a></p>
</li>
<li>
<p><a href="#CJADBFBF">Setting Audit Options for Objects That May Be Created in the Future</a></p>
</li>
</ul>
<a id="BCGEJAEF"></a>
<div id="DBSEG98370" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About Schema Object Auditing</h4>
<p>Schema object auditing monitors <a id="sthref1611"></a><a id="sthref1612"></a>actions performed on the audited schema objects, such as tables or views. Object auditing applies to all users but is limited to the audited object only. Users can use the <code>AUDIT</code> and <code>NOAUDIT</code> statements on objects in their own schemas.</p>
</div>
<!-- class="sect3" -->
<a id="CEGEIFIJ"></a>
<div id="DBSEG98371" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Types of Schema Objects That Can Be Audited</h4>
<p><a id="sthref1613"></a><a id="sthref1614"></a><a id="sthref1615"></a><a id="sthref1616"></a><a id="sthref1617"></a>You <a id="sthref1618"></a>can audit statements that refer to tables, views, sequences, standalone stored procedures or functions, and packages, but not individual procedures within packages. (See <a href="#BCGIFJEH">"About Auditing Functions, Procedures, Packages, and Triggers"</a> for more information about auditing these types of objects.)</p>
<p>You cannot directly audit statements that reference clusters, <a id="sthref1619"></a>database links, indexes, or synonyms. However, you can indirectly audit access to these schema objects, by auditing the operations that affect the base table.</p>
<p>When you audit a schema object, the auditing applies to all users of the database. You cannot set these options for a specific list of users. You can set default schema object audit options for all auditable schema objects.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.111/b28286/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about auditable schema objects</div>
</div>
<!-- class="sect3" -->
<a id="CEGBIGIF"></a>
<div id="DBSEG98372" class="sect3">
<h4 class="sect3">Schema Object Audit Options for Views, Procedures, and Other Elements</h4>
<p>The definitions for <a id="sthref1620"></a><a id="sthref1621"></a><a id="sthref1622"></a><a id="sthref1623"></a>views and procedures (including stored functions, packages, and triggers) reference underlying schema objects. Because of this dependency, some unique characteristics apply to auditing views and procedures, such as the likelihood of generating multiple audit records.</p>
<p>Views and procedures are subject to the enabled audit options on the base schema objects, including the default audit options. These options also apply to the resulting SQL statements.</p>
<p>Consider the following series of SQL statements:</p>
<pre>
AUDIT SELECT ON HR.EMPLOYEES BY ACCESS; 
 
CREATE VIEW employees_departments AS 
  SELECT employee_id, last_name, department_id
    FROM employees, departments
    WHERE employees.department_id = departments.department_id;
 
AUDIT SELECT ON employees_departments BY ACCESS; 

SELECT * FROM employees_departments; 
</pre>
<p>As a result of the query on the <code>employees_departments</code> view, two audit records are generated: one for the query on the <code>employees_departments</code> view and one for the query on the base table <code>employees</code> (indirectly through the <code>employees_departments</code> view). The query on the base table <code>departments</code> does not generate an audit record because the <code>SELECT</code> audit option for this table is not enabled. All audit records pertain to the user that queried the <code>employees_departments</code> view.</p>
<p>In the given example, if the <code>AUDIT SELECT ON HR.EMPLOYEES;</code> statement is omitted, then using the <code>employees_departments</code> view does not generate an audit record for the <code>EMPLOYEES</code> table.</p>
<p><a href="#BCGDJFFH">Table 9-5</a> lists auditing actions that are now available in Oracle Database 11<span class="italic">g</span> Release 1 (11.1).</p>
<div id="DBSEG98373" class="tblhruleformal">
<p class="titleintable"><a id="sthref1624"></a><a id="BCGDJFFH"></a>Table 9-5 Auditing Actions Newly Enabled by Oracle Database 11<span class="italic">g</span> Release 1 (11.1)</p>
<table class="cellalignment1576" title="Auditing Actions Newly Enabled by Oracle Database 11g Release 1 (11.1)" summary="This table lists and describes the actions that can be audited now in Oracle Database 10g Release 1 (10.1)." dir="ltr">
<thead>
<tr class="cellalignment1570">
<th class="cellalignment1577" id="r1c1-t21">Object or Element</th>
<th class="cellalignment1577" id="r1c2-t21">Auditable Action</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r2c1-t21" headers="r1c1-t21">
<p>Mining Model</p>
</td>
<td class="cellalignment1578" headers="r2c1-t21 r1c2-t21">
<p><code>ALTER</code>, <code>AUDIT</code>, <code>COMMENT</code>, <code>GRANT</code>, <code>RENAME</code>, <code>SELECT</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r3c1-t21" headers="r1c1-t21">
<p>OLAP Primary Dimension</p>
</td>
<td class="cellalignment1578" headers="r3c1-t21 r1c2-t21">
<p><code>ALTER</code>, <code>AUDIT</code>, <code>DELETE</code>, <code>INSERT</code>, <code>SELECT</code>, <code>CREATE</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r4c1-t21" headers="r1c1-t21">
<p>OLAP Cube</p>
</td>
<td class="cellalignment1578" headers="r4c1-t21 r1c2-t21">
<p><code>ALTER</code>, <code>AUDIT</code>, <code>DELETE</code>, <code>SELECT</code>, <code>UPDATE</code>, <code>CREATE</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r5c1-t21" headers="r1c1-t21">
<p>OLAP Measure Folder</p>
</td>
<td class="cellalignment1578" headers="r5c1-t21 r1c2-t21">
<p><code>AUDIT</code>, <code>DELETE</code>, <code>INDEX</code>, <code>SELECT</code>, <code>CREATE</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r6c1-t21" headers="r1c1-t21">
<p>OLAP InterAction</p>
</td>
<td class="cellalignment1578" headers="r6c1-t21 r1c2-t21">
<p><code>AUDIT</code>, <code>UPDATE</code>, <code>CREATE</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r7c1-t21" headers="r1c1-t21">
<p>Edition</p>
</td>
<td class="cellalignment1578" headers="r7c1-t21 r1c2-t21">
<p><code>ALTER</code>, <code>AUDIT</code>, <code>COMMENT</code>, <code>GRANT</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p><a href="#BCGJAHCG">Table 9-6</a> lists system auditing options that are now enabled in Oracle Database 11<span class="italic">g</span> Release 1 (11.1).</p>
<div id="DBSEG98374" class="tblhruleformal">
<p class="titleintable"><a id="sthref1625"></a><a id="BCGJAHCG"></a>Table 9-6 System Auditing Options Enabled in Oracle Database 11<span class="italic">g</span> Release 1 (11.1)</p>
<table class="cellalignment1576" title="System Auditing Options Enabled in Oracle Database 11g Release 1 (11.1)" summary="System Auditing Actions" dir="ltr">
<thead>
<tr class="cellalignment1570">
<th class="cellalignment1577" id="r1c1-t22">System</th>
<th class="cellalignment1577" id="r1c2-t22">Auditable Action</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r2c1-t22" headers="r1c1-t22">
<p>Edition</p>
</td>
<td class="cellalignment1578" headers="r2c1-t22 r1c2-t22">
<p><code>CREATE ANY EDITION</code>, <code>DROP ANY EDITION</code>, <code>ALTER ANY EDITION</code>, <code>COMMENT EDITION</code>, <code>GRANT EDITION</code>, <code>USE EDITION</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r3c1-t22" headers="r1c1-t22">
<p>Primary Dimension</p>
</td>
<td class="cellalignment1578" headers="r3c1-t22 r1c2-t22">
<p><code>CREATE PRIMARY DIMENSION</code>, <code>ALTER ANY PRIMARY DIMENSION</code>, <code>CREATE ANY PRIMARY DIMENSION</code>, <code>DELETE ANY PRIMARY DIMENSION</code>, <code>DROP ANY PRIMARY DIMENSION</code>, <code>INSERT ANY PRIMARY DIMENSION</code>, <code>SELECT ANY PRIMARY DIMENSION</code>, <code>UPDATE ANY PRIMARY DIMENSION</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r4c1-t22" headers="r1c1-t22">
<p>Cube</p>
</td>
<td class="cellalignment1578" headers="r4c1-t22 r1c2-t22">
<p><code>CREATE CUBE</code>, <code>ALTER ANY CUBE</code>, <code>CREATE ANY CUBE</code>, <code>DROP ANY CUBE</code>, <code>SELECT ANY CUBE</code>, <code>UPDATE ANY CUBE</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r5c1-t22" headers="r1c1-t22">
<p>Measure Folder</p>
</td>
<td class="cellalignment1578" headers="r5c1-t22 r1c2-t22">
<p><code>CREATE MEASURE FOLDER</code>, <code>CREATE ANY MEASURE FOLDER</code>, <code>DELETE ANY MEASURE FOLDER</code>, <code>DROP ANY MEASURE FOLDER</code>, <code>INSERT ANY MEASURE FOLDER</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r6c1-t22" headers="r1c1-t22">
<p>Interaction</p>
</td>
<td class="cellalignment1578" headers="r6c1-t22 r1c2-t22">
<p><code>CREATE INTERACTION</code>, <code>CREATE ANY INTERACTION</code>, <code>DROP ANY INTERACTION</code>, <code>UPDATE ANY INTERACTION</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect3" -->
<a id="CEGIIJAB"></a>
<div id="DBSEG98375" class="sect3">
<h4 class="sect3">Configuring Schema Object Auditing</h4>
<p>You <a id="sthref1626"></a><a id="sthref1627"></a>can use the <code>AUDIT</code> statement to enable object auditing. <a class="olink SQLRF01107" href="../../server.111/b28286/statements_4007.htm#SQLRF01107"><span class="italic">Oracle Database SQL Language Reference</span></a> lists valid object audit options for <code>AUDIT</code> and the schema object types for which each option is available.</p>
<p>A user can set any object audit option for the objects contained in his or her schema. The <code>AUDIT ANY</code> system privilege is required to set an object audit option for an object contained in another user schema or to set the default object auditing option. Usually, only the security administrator is granted the <code>AUDIT ANY</code> privilege.</p>
<p><a href="#BCGIEGBB">Figure 9-2</a> shows how to audit all <a id="sthref1628"></a><a id="sthref1629"></a><a id="sthref1630"></a>successful and unsuccessful <code>DELETE</code> statements on the <code>laurel.emp</code> table.</p>
<div id="DBSEG98376" class="example">
<p class="titleinexample"><a id="BCGIEGBB"></a>Example 9-13 Configuring Auditing for a Schema Table</p>
<pre>
AUDIT DELETE ON laurel.emp BY ACCESS;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGBAFJA">Example 9-14</a> shows how to audit all successful <code>SELECT</code>, <code>INSERT</code>, and <code>DELETE</code> statements on the <code>dept</code> table owned by user <code>jward</code>.</p>
<div id="DBSEG98377" class="example">
<p class="titleinexample"><a id="BCGBAFJA"></a>Example 9-14 Auditing Successful Statements on a Schema Table</p>
<pre>
AUDIT SELECT, INSERT, DELETE
     ON jward.dept
     BY ACCESS
     WHENEVER SUCCESSFUL;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGFAEEB">Example 9-15</a> shows how you <a id="sthref1631"></a>can use <a id="sthref1632"></a><a id="sthref1633"></a>the <code>ON DEFAULT</code> clause to apply to any new objects (tables, views, and sequences) that are created after you set the <code>AUDIT</code> statement. In this example, new objects that are created in the future will be audited for all unsuccessful <code>SELECT</code> statements:</p>
<div id="DBSEG98378" class="example">
<p class="titleinexample"><a id="BCGFAEEB"></a>Example 9-15 Configuring Auditing for Any New Objects Using the DEFAULT Clause</p>
<pre>
AUDIT SELECT
     ON DEFAULT
     BY ACCESS
     WHENEVER NOT SUCCESSFUL;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGHEHED">Example 9-16</a> shows how <a id="sthref1634"></a><a id="sthref1635"></a>to audit the execution of PL/SQL procedure or function.</p>
<div id="DBSEG98379" class="example">
<p class="titleinexample"><a id="BCGHEHED"></a>Example 9-16 Auditing the Execution of a Procedure or Function</p>
<pre>
AUDIT EXECUTE ON sec_mgr.auth_orders BY ACCESS;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="CEGGBGEI"></a>
<div id="DBSEG98380" class="sect3">
<h4 class="sect3">Removing Object Auditing</h4>
<p>Use<a id="sthref1636"></a> the <code>NOAUDIT</code> statement to <a id="sthref1637"></a><a id="sthref1638"></a><a id="sthref1639"></a>remove object auditing. The following statements turn off the corresponding auditing options:</p>
<pre>
NOAUDIT DELETE
   ON emp;
NOAUDIT SELECT, INSERT, DELETE
   ON jward.dept;
</pre>
<p>To remove all object audit options on the <code>emp</code> table, enter the following statement:</p>
<pre>
NOAUDIT ALL ON emp;
</pre>
<p>To<span class="bold"><a id="sthref1640"></a><a id="sthref1641"></a></span> remove all default object audit options, enter the following statement:</p>
<pre>
NOAUDIT ALL ON DEFAULT;
</pre>
<p>All schema objects that are created before this <code>NOAUDIT</code> statement is issued continue to use the default object audit options in effect at the time of their creation, unless overridden by an explicit <code>NOAUDIT</code> statement after their creation.</p>
<p>To remove object audit options for a specific object, you must be the owner of the schema object. To remove the object audit options of an object in the schema of another user or to remove default object audit options, you must have the <code>AUDIT ANY</code> system privilege. A user with privileges to remove object audit options of an object can override the options set by any user.</p>
</div>
<!-- class="sect3" -->
<a id="CJADBFBF"></a>
<div id="DBSEG98381" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Setting Audit Options for Objects That May Be Created in the Future</h4>
<p>You can <a id="sthref1642"></a>create audit settings for objects that do not exist yet, such as the insertion and deletion of tables to be created. There are two approaches that you can take. One approach is to use the statement audit options in the <code>AUDIT</code> statement. For example, to audit all inserts on future tables, enter the following SQL statement:</p>
<pre>
AUDIT INSERT TABLE BY ACCESS;
</pre>
<p>The second approach is to invoke the <code>AUDIT</code> statement using the <code>ON DEFAULT</code> clause. For example:</p>
<pre>
AUDIT ALL ON DEFAULT;
</pre>
<p>This statement audits by default all subsequent object creation statements. The <code>ON</code> keyword specifies object auditing. The <code>ON DEFAULT</code> clause configures auditing for subsequently created objects that are affected by the following statements:</p>
<div class="inftblinformal">
<table class="cellalignment1576" title="AUDIT ALL ON DEFAULT statements" summary="AUDIT ALL ON DEFAULT statements" dir="ltr">
<tbody>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r1c1-t23"><code>ALTER</code></td>
<td class="cellalignment1578"><code>EXECUTE</code></td>
<td class="cellalignment1578"><code>INSERT</code></td>
<td class="cellalignment1578"><code>SELECT</code></td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r2c1-t23"><code>AUDIT</code></td>
<td class="cellalignment1578" headers="r2c1-t23"><code>GRANT</code></td>
<td class="cellalignment1578" headers="r2c1-t23"><code>LOCK</code></td>
<td class="cellalignment1578" headers="r2c1-t23"><code>UPDATE</code></td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r3c1-t23"><code>COMMENT</code></td>
<td class="cellalignment1578" headers="r3c1-t23"><code>FLASHBACK</code></td>
<td class="cellalignment1578" headers="r3c1-t23"><code>READ</code></td>
<td class="cellalignment1578" headers="r3c1-t23">&nbsp;</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r4c1-t23"><code>DELETE</code></td>
<td class="cellalignment1578" headers="r4c1-t23"><code>INDEX</code></td>
<td class="cellalignment1578" headers="r4c1-t23"><code>RENAME</code></td>
<td class="cellalignment1578" headers="r4c1-t23">&nbsp;</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>To restrict <code>ON DEFAULT</code> to a specific action, enter a statement similar to the following:</p>
<pre>
AUDIT ALTER, DELETE ON DEFAULT;
</pre>
<p>For more information about the audit options and the <code>ON DEFAULT</code> clause of the <code>AUDIT</code> SQL statement, see <a class="olink SQLRF01107" href="../../server.111/b28286/statements_4007.htm#SQLRF01107"><span class="italic">Oracle Database SQL Language Reference</span></a>. To find objects audited by default, query the <code>ALL_DEF_AUDIT_OPTS</code> data dictionary view.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGGCHJG"></a>
<div id="DBSEG98382" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing Functions, Procedures, Packages, and Triggers</h3>
<p>This section contains</p>
<ul>
<li>
<p><a href="#BCGIFJEH">About Auditing Functions, Procedures, Packages, and Triggers</a></p>
</li>
<li>
<p><a href="#BCGFAAID">Configuring the Auditing of Functions, Procedures, Packages, and Triggers</a></p>
</li>
<li>
<p><a href="#BCGEAFAH">Removing the Auditing of Functions, Procedures, Packages, and Triggers</a></p>
</li>
</ul>
<a id="BCGIFJEH"></a>
<div id="DBSEG98383" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About Auditing Functions, Procedures, Packages, and Triggers</h4>
<p>You can audit functions, procedures, PL/SQL packages, and triggers. The areas that you can audit are as follows:</p>
<ul>
<li>
<p>You can individually audit standalone <a id="sthref1643"></a><a id="sthref1644"></a>functions, standalone <a id="sthref1645"></a><a id="sthref1646"></a>procedures, and <a id="sthref1647"></a><a id="sthref1648"></a>PL/SQL <a id="sthref1649"></a><a id="sthref1650"></a>packages.</p>
</li>
<li>
<p><a id="sthref1651"></a><a id="sthref1652"></a>If you audit a PL/SQL package, Oracle Database audits all functions and procedures within the package.</p>
</li>
<li>
<p>If you enable auditing for all executions, Oracle Database audits all triggers in the database, as well as all the functions and procedures within PL/SQL packages.</p>
</li>
<li>
<p>You cannot audit individual functions or procedures within a PL/SQL package.</p>
</li>
</ul>
<p>If you want to audit functions that are associated with Oracle Virtual Private database policies, note the following:</p>
<ul>
<li>
<p><span class="bold">Dynamic policies:</span> <a id="sthref1653"></a>Oracle <a id="sthref1654"></a><a id="sthref1655"></a>Database evaluates the policy function twice, once during SQL statement parsing and again during execution. As a result, two audit records are generated for each evaluation.</p>
</li>
<li>
<p><span class="bold">Static policies:</span> <a id="sthref1656"></a>Oracle Database evaluates the policy function once and then caches it in the SGA. As a result, only one audit record is generated.</p>
</li>
<li>
<p><span class="bold">Context-sensitive policies:</span> <a id="sthref1657"></a>Oracle Database executes the policy function once, during statement parsing. As a result, only one audit record is generated.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGFAAID"></a>
<div id="DBSEG98384" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Configuring the Auditing of Functions, Procedures, Packages, and Triggers</h4>
<p><a href="#BCGFBGJG">Example 9-17</a> shows how to <a id="sthref1658"></a><a id="sthref1659"></a><a id="sthref1660"></a><a id="sthref1661"></a>audit the execution <a id="sthref1662"></a>of any function, procedure, package, or trigger, by any user in the database.</p>
<div id="DBSEG98385" class="example">
<p class="titleinexample"><a id="BCGFBGJG"></a>Example 9-17 Auditing All Functions, Procedures, Packages, and Triggers</p>
<pre>
AUDIT EXECUTE PROCEDURE BY ACCESS;
</pre></div>
<!-- class="example" -->
<p><a href="#CHDCCIED">Example 9-18</a> shows how to audit user <code>psmith</code>'s successful and unsuccessful executions of functions, procedures, packages, and triggers.</p>
<div id="DBSEG98386" class="example">
<p class="titleinexample"><a id="CHDCCIED"></a>Example 9-18 Auditing a User's Execution of Functions, Procedures, Packages, and Triggers</p>
<pre>
AUDIT EXECUTE PROCEDURE BY psmith BY ACCESS;
</pre></div>
<!-- class="example" -->
<p><a href="#CHDCGFIH">Example 9-19</a> shows how to audit a standalone procedure entitled <code>check_work</code> that is in the <code>sales_data</code> schema. This idea applies to standalone functions as well.</p>
<div id="DBSEG98387" class="example">
<p class="titleinexample"><a id="CHDCGFIH"></a>Example 9-19 Auditing the Execution of a Procedure or Function within a Schema</p>
<pre>
AUDIT EXECUTE ON sales_data.check_work BY ACCESS WHENEVER SUCCESSFUL;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="BCGEAFAH"></a>
<div id="DBSEG98388" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Removing the Auditing of Functions, Procedures, Packages, and Triggers</h4>
<p>Use the <code>NOAUDIT</code> statement to remove the auditing of functions, procedures, and triggers. For example:</p>
<pre>
NOAUDIT EXECUTE PROCEDURE;

NOAUDIT EXECUTE PROCEDURE BY psmith;

NOAUDIT EXECUTE ON sales_data.checkwork;
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGDHGJI"></a>
<div id="DBSEG98389" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing Network Activity</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGIICDC">About Network Auditing</a></p>
</li>
<li>
<p><a href="#CEGHCHGJ">Configuring Network Auditing</a></p>
</li>
<li>
<p><a href="#CEGDCEIE">Removing Network Auditing</a></p>
</li>
</ul>
<a id="BCGIICDC"></a>
<div id="DBSEG98390" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About Network Auditing</h4>
<p>You can use <a id="sthref1663"></a><a id="sthref1664"></a>the <code>AUDIT</code> statement to audit unexpected errors in network protocol or internal errors in the network layer. Network auditing captures errors that occur during communication with the client on the network. These are errors thrown by the SQL*Net driver. There can be several causes of network errors. For example, an internal event set by a database engineer for testing purposes can cause a network error. Other causes include conflicting configuration settings for encryption, such as the network not finding the information required to create or process expected encryption. <a id="sthref1665"></a>The errors that network auditing uncovers (such as <code>ACTION 122 Network Error</code>) are not connection failures: network auditing is only concerned with data as it travels across the network.</p>
<p>The audit record for network auditing lists the authentication type and SQL*Net address of the client (if available) in the <code>COMMENT_TEXT</code> field of the audit record, using the following format:</p>
<pre>
Authenticated by: <span class="italic">authentication_type</span>; Client Address: <span class="italic">SQLNetAddress_of_client</span>
</pre>
<p>The <code>Client Address:</code> <code><span class="codeinlineitalic">SQLNetAddress_of_client</span></code> portion only appears if this information is available.</p>
<p><a href="#CEGFEEFB">Table 9-7</a> shows how to remedy four common error conditions.</p>
<div id="DBSEG98391" class="tblhruleformal">
<p class="titleintable"><a id="sthref1666"></a><a id="CEGFEEFB"></a>Table 9-7 Auditable Network Error Conditions</p>
<table class="cellalignment1576" title="Auditable Network Error Conditions" summary="This table describes four auditable network error conditions." dir="ltr">
<thead>
<tr class="cellalignment1570">
<th class="cellalignment1577" id="r1c1-t24">Error</th>
<th class="cellalignment1577" id="r1c2-t24">Cause</th>
<th class="cellalignment1577" id="r1c3-t24">Action</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r2c1-t24" headers="r1c1-t24">
<p><code>TNS-02507</code></p>
<p><code>Encryption algorithm not installed</code></p>
</td>
<td class="cellalignment1578" headers="r2c1-t24 r1c2-t24">
<p>After picking an algorithm, the server was unable to find an index for it in its table of algorithms. This should be impossible because the algorithm was chosen (indirectly) from that list.</p>
</td>
<td class="cellalignment1578" headers="r2c1-t24 r1c3-t24">
<p>Turn on tracing for further details, and then rerun the operation. (Note that this error is not normally visible to the user.) If the error persists, then contact Oracle Support Services.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r3c1-t24" headers="r1c1-t24">
<p><code>TNS-12648</code></p>
<p><code>Encryption or data integrity algorithm list empty</code></p>
</td>
<td class="cellalignment1578" headers="r3c1-t24 r1c2-t24">
<p>An Oracle Advanced Security list-of-algorithms parameter was empty.</p>
</td>
<td class="cellalignment1578" headers="r3c1-t24 r1c3-t24">
<p>Change the list to contain the name of at least one installed algorithm, or remove the list entirely if every installed algorithm is not acceptable.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r4c1-t24" headers="r1c1-t24">
<p><code>TNS-12649</code></p>
<p><code>Unknown encryption or data integrity algorithm</code></p>
</td>
<td class="cellalignment1578" headers="r4c1-t24 r1c2-t24">
<p>An Oracle Advanced Security list-of-algorithms parameter included an algorithm name that was not recognized.</p>
</td>
<td class="cellalignment1578" headers="r4c1-t24 r1c3-t24">
<p>Remove that algorithm name, correct it if it was misspelled, or install the driver for the missing algorithm.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r5c1-t24" headers="r1c1-t24">
<p><code>TNS-12650</code></p>
<p><code>No common encryption or data integrity algorithm</code></p>
</td>
<td class="cellalignment1578" headers="r5c1-t24 r1c2-t24">
<p>The client and server have no algorithm in common for either encryption or data integrity or both.</p>
</td>
<td class="cellalignment1578" headers="r5c1-t24 r1c3-t24">
<p>Choose sets of algorithms that overlap. In other words, add one of the client algorithm choices to the server list, or add one of the server list choices to the client algorithm.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect3" -->
<a id="CEGHCHGJ"></a>
<div id="DBSEG11013" class="sect3">
<h4 class="sect3">Configuring Network Auditing</h4>
<p>To <a id="sthref1667"></a>configure network auditing, use the <code>AUDIT</code> statement. For example:</p>
<pre>
AUDIT NETWORK;
</pre></div>
<!-- class="sect3" -->
<a id="CEGDCEIE"></a>
<div id="DBSEG98392" class="sect3">
<h4 class="sect3">Removing Network Auditing<a id="sthref1668"></a></h4>
<p>To remove <a id="sthref1669"></a>network <a id="sthref1670"></a>auditing<a id="sthref1671"></a>:</p>
<pre>
NOAUDIT NETWORK;
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGGCIAE"></a>
<div id="DBSEG60064" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Using Default Auditing for Security-Relevant SQL Statements and Privileges</h2>
<p><a id="sthref1672"></a><a id="sthref1673"></a>When you create a new database or modify an existing database, you can use the Security Settings window in Database Configuration Assistant (DBCA) to enable or disable the default security settings. Oracle recommends that you enable these settings. When you enable the default security settings, Oracle Database audits the most commonly used security-relevant SQL statements and privileges. It also sets the <code>AUDIT_TRAIL</code> initialization parameter to <code>DB</code>. If you decide to use a different auditing option, for example, <code>OS</code> if you want to write the audit trail records to operating system files, you can do that: Oracle Database continues to audit the privileges that are audited by default. If you disable auditing by setting the <code>AUDIT_TRAIL</code> parameter to <code>NONE</code>, then no auditing takes place.</p>
<p><a id="sthref1674"></a>Oracle Database audits the <code>AUDIT ROLE</code> SQL statement by default. The privileges that are audited by default are as follows:</p>
<div class="inftblsimplewide">
<table class="cellalignment1579" title="Audited privileges" summary="Listing of commands that are audited by default, top to bottom, left to right" dir="ltr">
<tbody>
<tr class="cellalignment1570">
<td class="cellalignment1578"><code>ALTER ANY PROCEDURE</code></td>
<td class="cellalignment1578"><code>CREATE ANY JOB</code></td>
<td class="cellalignment1578"><code>DROP ANY TABLE</code></td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578"><code>ALTER ANY TABLE</code></td>
<td class="cellalignment1578"><code>CREATE ANY LIBRARY</code></td>
<td class="cellalignment1578"><code>DROP PROFILE</code></td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578"><code>ALTER DATABASE</code></td>
<td class="cellalignment1578"><code>CREATE ANY PROCEDURE</code></td>
<td class="cellalignment1578"><code>DROP USER</code></td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578"><code>ALTER PROFILE</code></td>
<td class="cellalignment1578"><code>CREATE ANY TABLE</code></td>
<td class="cellalignment1578"><code>EXEMPT ACCESS POLICY</code></td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578"><code>AUDIT ROLE BY ACCESS</code></td>
<td class="cellalignment1578"><code>CREATE EXTERNAL JOB</code></td>
<td class="cellalignment1578"><code>GRANT ANY OBJECT PRIVILEGE</code></td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578"><code>ALTER SYSTEM</code></td>
<td class="cellalignment1578"><code>CREATE PUBLIC DATABASE LINK</code></td>
<td class="cellalignment1578"><code>GRANT ANY PRIVILEGE</code></td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578"><code>ALTER USER</code></td>
<td class="cellalignment1578"><code>CREATE SESSION</code></td>
<td class="cellalignment1578"><code>GRANT ANY ROLE</code></td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578"><code>AUDIT SYSTEM</code></td>
<td class="cellalignment1578"><code>CREATE USER</code></td>
<td class="cellalignment1578">&nbsp;</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578"><code>AUDIT SYSTEM BY ACCESS</code></td>
<td class="cellalignment1578"><code>DROP ANY PROCEDURE</code></td>
<td class="cellalignment1578">&nbsp;</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblsimplewide" -->
<p>To individually control the auditing of SQL statements and privileges, use the <code>AUDIT</code> and <code>NOAUDIT</code> statements. For more information, see <a href="#CEGEEBGE">"Auditing SQL Statements"</a> and <a href="#CEGDDHDB">"Auditing Privileges"</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink TDPSG55222" href="../../server.111/b28337/tdpsg_auditing.htm#TDPSG55222"><span class="italic">Oracle Database 2 Day + Security Guide</span></a> for instructions about using Database Configuration Assistant to enable default auditing</p>
</li>
<li>
<p><a class="olink SQLRF" href="../../server.111/b28286/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for detailed information about the SQL statements described in this section</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CEGBAFIA"></a>
<div id="DBSEG525" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Auditing Specific Activities with Fine-Grained Auditing</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGBICJA">About Fine-Grained Auditing</a></p>
</li>
<li>
<p><a href="#BCGBHBDC">What Permissions Are Needed to Create a Fine-Grained Audit Policy?</a></p>
</li>
<li>
<p><a href="#BCGDFIBF">Activities That Are Always Audited in Fine-Grained Auditing</a></p>
</li>
<li>
<p><a href="#CEGFHJAC">Creating an Audit Trail for Fine-Grained Audit Records</a></p>
</li>
<li>
<p><a href="#BCGIJDIH">How the Fine-Grained Audit Trail Generates Records</a></p>
</li>
<li>
<p><a href="#CEGHFFGE">Using the DBMS_FGA Package to Manage Fine-Grained Audit Policies</a></p>
</li>
<li>
<p><a href="#CEGDFFFD">Tutorial: Adding an Email Alert to a Fine-Grained Audit Policy</a></p>
</li>
<li>
<p><a href="#BCGCBBFI">Tutorial: Auditing Nondatabase Users</a></p>
</li>
<li>
<p><a href="#BCGIBJDG">Archiving and Purging the Fine-Grained Audit Trail</a></p>
</li>
</ul>
<a id="CEGBICJA"></a>
<div id="DBSEG60681" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Fine-Grained Auditing</h3>
<p>Fine-grained auditing<a id="sthref1675"></a> enables you to create policies that define specific conditions that must take place for the audit to occur. <a id="sthref1676"></a>This enables you to monitor data access based on content. It provides granular auditing of queries, and <code>INSERT</code>, <code>UPDATE</code>, and <code>DELETE</code> operations. For example, a central tax authority must track access to tax returns to guard against employee snooping, with enough detail to determine what data was accessed. It is not enough to know that <code>SELECT</code> privilege was used by a specific user on a particular table. Fine-grained auditing provides this deeper functionality.</p>
<p>In general, fine-grained audit policies are based on simple, user-defined SQL predicates on table objects as conditions for selective auditing. During fetching, whenever policy conditions are met for a row, the query is audited.</p>
<p>You can use fine-grained auditing to audit the following types of actions:</p>
<ul>
<li>
<p>Accessing a table between 9 p.m. and 6 a.m. or on Saturday and Sunday</p>
</li>
<li>
<p>Using an IP address from outside the corporate network</p>
</li>
<li>
<p>Selecting or updating a table column</p>
</li>
<li>
<p>Modifying a value in a table column</p>
</li>
</ul>
<p>Fine-grained <a id="sthref1677"></a>auditing creates a more meaningful audit trail, one that includes only very specific actions that you want to audit. It excludes unnecessary information that occurs if each table access was recorded. <a id="sthref1678"></a>Fine-grained auditing has the following advantages over standard auditing:</p>
<ul>
<li>
<p><span class="bold">It performs a Boolean condition check.</span> If the Boolean condition you specify is met, for example, a table being accessed on a Saturday, then the audit takes place.</p>
</li>
<li>
<p><span class="bold">It captures the SQL that triggered the audit.</span> You can capture both the SQL statement that caused the audit, and any associated bind variables. <a id="sthref1679"></a><a id="sthref1680"></a><a id="sthref1681"></a><a id="sthref1682"></a><a id="sthref1683"></a>Be aware that you can only capture data from scalar column types. You cannot capture data from object columns, LOBs, or user-defined column types. For example, suppose you have the following query:</p>
<pre>
SELECT NAME FROM EMPLOYEE WHERE SSN = :1
</pre>
<p>If <code>:1</code> is of integer type and the value for <code>SSN</code> is 987654321, then the audit trail can capture this information. However, the audit trail cannot capture this information if <code>:1</code> is a BLOB, CLOB, object, or user-defined type.</p>
<p>This feature is available if you create the fine grained audit policy with the <code>audit_trail</code> parameter of the <code>DBMS_FGA.ADD_POLICY</code> PL/SQL procedure to <code>DB+EXTENDED</code> or <code>XML+EXTENDED</code>.</p>
</li>
<li>
<p><span class="bold">It adds extra protection to sensitive columns.</span> You can audit specific relevant columns that may hold sensitive information, such as salaries or Social Security numbers.</p>
</li>
<li>
<p><span class="bold">It provides an event handler feature.</span> For example, you can write a function that sends an email alert to a security administrator when an audited column that should not be changed at midnight is updated.</p>
</li>
<li>
<p><span class="bold">You do not need to set initialization parameters to enable fine-grained auditing.</span> Instead of setting initialization parameters such as <code>AUDIT_TRAIL</code>, you use the <code>DBMS_FGA PL/SQL</code> package to add and remove fine-grained auditing policies as necessary applying them to the specific operations or objects you want to monitor.</p>
</li>
</ul>
<p>Fine-grained auditing records are stored in the <code>SYS.FGA_LOG$</code> table. To find the records have been generated for the audit policies that are in effect, you can query the <code>DBA_FGA_AUDIT_TRAIL</code> view. The <code>DBA_COMMON_AUDIT_TRAIL</code> view combines both standard and fine-grained audit log records. In addition, you can use the <code>V$XML_AUDIT_TRAIL</code> view to find fine-grained audit records that were written in XML formatted files. For detailed information about these views, see <a class="olink REFRN" href="../../server.111/b28320/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>Fine-grained auditing is supported only with cost-based optimization. For queries using rule-based optimization, fine-grained auditing checks before applying row filtering, which could result in an unnecessary audit event trigger.</p>
</li>
<li>
<p>Policies currently in force on an object involved in a flashback query are applied to the data returned from the specified flashback snapshot (based on time or system change number (SCN).</p>
</li>
<li>
<p>You cannot use fine-grained auditing with data that has been directly loaded. If <a id="sthref1684"></a>want <a id="sthref1685"></a><a id="sthref1686"></a>to preserve the direct loading of data, then consider using standard auditing instead.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BCGBHBDC"></a>
<div id="DBSEG98393" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">What Permissions Are Needed to Create a Fine-Grained Audit Policy?</h3>
<p>To <a id="sthref1687"></a>create a fine-grained audit policy, you must have <code>EXECUTE</code> privileges on the <code>DBMS_FGA</code> PL/SQL package. The package is owned by the <code>SYS</code> user.</p>
</div>
<!-- class="sect2" -->
<a id="BCGDFIBF"></a>
<div id="DBSEG98394" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Activities That Are Always Audited in Fine-Grained Auditing</h3>
<p>The <code>SYS.AUD$</code> table records <a id="sthref1688"></a>all data manipulation language (DML) statements, such as <code>INSERT</code>, <code>UPDATE</code>, <code>MERGE</code>, and <code>DELETE</code>, that are performed on the <code>SYS.FGA_LOG$</code> table by non-<code>SYS</code> users. Oracle Database performs the audit even if auditing has not been configured for the<a id="sthref1689"></a><a id="sthref1690"></a> <code>SYS.FGA_LOG$</code> table, which is the table in which these activities occur. You can check these activities by querying the <code>DBA_FGA_AUDIT_TRAIL</code> and <code>DBA_COMMON_AUDIT_TRAIL</code> views. See also <a href="#BCGHEEBF">"Activities That Are Always Written to the Standard and Fine-Grained Audit Records"</a>.</p>
</div>
<!-- class="sect2" -->
<a id="CEGFHJAC"></a>
<div id="DBSEG98395" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Creating an Audit Trail for Fine-Grained Audit Records</h3>
<p>You <a id="sthref1691"></a>designate the audit trail format for fine-grained auditing by setting the audit_trail parameter for the <code>DBMS_FGA.ADD_POLICY</code> policy (not to be confused with the <code>AUDIT_TRAIL</code> initialization parameter) when you create the audit policy. Setting this parameter to <code>XML</code> or <code>XML+EXTENDED</code> writes the records to the operating system files in XML format. If you prefer to write the fine-grained audit records to the <code>SYS.FGA_LOG$</code> table, then set the <code>audit_trail</code> parameter for the <code>DBMS_FGA.ADD_POLICY</code> parameter to <code>DB</code> or <code>DB+EXTENDED</code>. For a list of reasons why writing audit records to operating system files is beneficial, see <a href="#BCGFDFIA">"Advantages of the Operating System Audit Trail"</a>.</p>
<p>You can use the <code>V$XML_AUDIT_TRAIL</code> data dictionary view to make audit records from XML files available to DBAs through a SQL query, providing enhanced usability. Querying this view causes all XML files (all files with an <code>.xml</code> extension) in the <code>AUDIT_FILE_DEST</code> directory to be parsed and presented in relational table format.</p>
<p>The <code>DBA_COMMON_AUDIT_TRAIL</code> view includes the contents of the <code>V$XML_AUDIT_TRAIL</code> dynamic view for standard and fine-grained audit records.</p>
<p>Because the audit XML files are stored in files with the <code>.xml</code> extension on all platforms, the dynamic view presents audit information similarly on all platforms. See <a class="olink REFRN30405" href="../../server.111/b28320/dynviews_3120.htm#REFRN30405"><span class="italic">Oracle Database Reference</span></a> for detailed information about the <code>V$XML_AUDIT_TRAIL</code> view contents.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you audit tables that have sensitive data, remember that <code>DB+EXTENDED</code> and <code>XML+EXTENDED</code> settings for the <code>DBMS_FGA.ADD_POLICY</code> <code>audit_trail</code> parameter will capture this data. See <a href="guidelines.htm#CHDBDBDG">"Auditing Sensitive Information"</a> for ways to handle this scenario.</div>
</div>
<!-- class="sect2" -->
<a id="BCGIJDIH"></a>
<div id="DBSEG98396" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">How the Fine-Grained Audit Trail Generates Records</h3>
<p>The <a id="sthref1692"></a>fine-grained audit trail captures an audit record for each reference of a table or a view within a SQL statement. For example, if you run a <code>UNION</code> statement that references the <code>HR.EMPLOYEES</code> table twice, then an audit policy for statement generates two audit records, one for each access of the <code>HR.EMPLOYEES</code> table.</p>
</div>
<!-- class="sect2" -->
<a id="CEGHFFGE"></a>
<div id="DBSEG98397" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using the DBMS_FGA Package to Manage Fine-Grained Audit Policies</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGBECII">About the DBMS_FGA PL/SQL Package</a></p>
</li>
<li>
<p><a href="#CEGEACAJ">Creating a Fine-Grained Audit Policy</a></p>
</li>
<li>
<p><a href="#CEGCJEAE">Disabling and Enabling a Fine-Grained Audit Policy</a></p>
</li>
<li>
<p><a href="#CEGHFDEJ">Dropping a Fine-Grained Audit Policy</a></p>
</li>
</ul>
<a id="BCGBECII"></a>
<div id="DBSEG98398" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About the DBMS_FGA PL/SQL Package</h4>
<p>To <a id="sthref1693"></a><a id="sthref1694"></a>manage a fine-grained audit policy, you use the <code>DBMS_FGA</code> PL/SQL package. This package enables you to add all combinations of <code>SELECT</code>, <code>INSERT</code>, <code>UPDATE</code>, and <code>DELETE</code> statements to one policy. You also can audit <code>MERGE</code> statements, by auditing the underlying actions of <code>INSERT</code> and <code>UPDATE</code>. To audit <code>MERGE</code> statements, configure fine-grained access on the <code>INSERT</code> and <code>UPDATE</code> statements. Only one record is generated for each policy for successful <code>MERGE</code> operations. To administer fine-grained audit policies, you must have the <code>EXECUTE</code> privilege on the <code>DBMS_FGA</code> package.</p>
<p>The audit policy is bound to the table for which you created it. This simplifies the management of audit policies because the policy only must be changed once in the database, not in each application. In addition, no matter how a user connects to the database&mdash;from an application, a Web interface, or through SQL*Plus or Oracle SQL Developer&mdash;Oracle Database records any actions that affect the policy.</p>
<p>If any rows returned from a query match the audit condition that you define, then Oracle Database inserts an audit entry into the fine-grained audit trail. This entry excludes all the information that is reported in the regular audit trail. In other words, only one row of audit information is inserted into the audit trail for every fine-grained audit policy that evaluates to true.</p>
<p>For detailed information about the syntax of the <code>DBMS_FGA</code> package, see <a class="olink ARPLS015" href="../../appdev.111/b28419/d_fga.htm#ARPLS015"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>. See also <a class="olink ADFNS" href="../../appdev.111/b28424/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a>.</p>
</div>
<!-- class="sect3" -->
<a id="CEGEACAJ"></a>
<div id="DBSEG98399" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Creating a Fine-Grained Audit Policy</h4>
<p>To<a id="sthref1695"></a><a id="sthref1696"></a><a id="sthref1697"></a> create a fine-grained audit policy, use the <code>DBMS_FGA.ADD_POLICY</code> procedure. This procedure creates an audit policy using the supplied predicate as the audit condition. Oracle Database executes the policy predicate with the privileges of the user who created the policy. The maximum number of fine-grained policies on any table or view object is 256. Oracle Database stores the policy in the data dictionary table, but you can create the policy on any table or view that is not in the <code>SYS</code> schema.</p>
<p>After <a id="sthref1698"></a>you create the fine-grained audit policy, it does not reside in any specific schema, although the definition for the policy is stored in the <code>SYS.FGA$</code> data dictionary table.</p>
<p>You cannot modify a fine-grained audit policy after you have created it. If you need to modify the policy, drop it and then recreate it.</p>
<p>Be aware that if a table <a id="sthref1699"></a>column <a id="sthref1700"></a>has a fine-grained audit policy, you cannot encrypt or decrypt this column (by using the <code>UPDATE</code> statement). To do so raises an <a id="sthref1701"></a><code>ORA-28133: full table access is restricted by fine-grained security</code> error. If you want to update the column, first temporarily disable the fine-grained audit policy and then encrypt or decrypt the column. Afterwards, re-enable the fine-grained audit policy. See <a href="#CEGCJEAE">"Disabling and Enabling a Fine-Grained Audit Policy"</a> for more information.</p>
<p>The syntax for the <code>ADD_POLICY</code> procedure is:</p>
<pre>
DBMS_FGA.ADD_POLICY(
<span class="italic">   </span>object_schema      VARCHAR2, 
   object_name        VARCHAR2,<span class="italic"> </span>
   policy_name        VARCHAR2, 
   audit_condition    VARCHAR2, 
   audit_column       VARCHAR2, 
   handler_schema     VARCHAR2, 
<span class="italic">   </span>handler_module     VARCHAR2, 
   enable             BOOLEAN, 
   statement_types    VARCHAR2,
   audit_trail        BINARY_INTEGER IN DEFAULT,
   audit_column_opts  BINARY_INTEGER IN DEFAULT);
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code>object_schema</code>: Specifies the schema of the object to be audited.</p>
</li>
<li>
<p><code>object_name</code>: Specifies the name of the object to be audited.</p>
</li>
<li>
<p><code>policy_name</code>: Specifies the name of the policy to be created.</p>
</li>
<li>
<p><code>audit_condition</code>: Specifies a Boolean condition in a row. <code>NULL</code> is allowed and acts as <code>TRUE</code>. See <a href="#BCGFDAIA">"Auditing Specific Columns and Rows"</a> for more information. If you specify <code>NULL</code> or no audit condition, then any action on a table with that policy creates an audit record, whether or not rows are returned.</p>
<p>Follow these guidelines:</p>
<ul>
<li>
<p>Do not include functions, which execute the auditable statement on the same base table, in the <code>audit_condition</code> setting. For example, suppose you create a function that executes an <code>INSERT</code> statement on the <code>HR.EMPLOYEES</code> table. The policy's <code>audit_condition</code> contains this function and it is for <code>INSERT</code> statements (as set by <code>statement_types</code>). When the policy is used, the function executes recursively until the system has run out of memory. This can raise the error<a id="sthref1702"></a> <code>ORA-1000: maximum open cursors exceeded</code> or<a id="sthref1703"></a> <code>ORA-00036: maximum number of recursive SQL levels (50) exceeded</code>.</p>
</li>
<li>
<p>Do not issue the <code>DBMS_FGA.ENABLE_POLICY</code> or <code>DBMS_FGA.DISABLE_POLICY</code> statement from a function in a policy's condition.</p>
</li>
</ul>
</li>
<li>
<p><code>audit_column</code>: Specifies one or more columns to audit, including hidden columns. If set to <code>NULL</code> or omitted, all columns are audited. These can include Oracle Label Security hidden columns or object type columns. The default, NULL, causes audit if any column is accessed or affected.</p>
</li>
<li>
<p><code>handler_schema</code>: If an alert is used to trigger a response when the policy is violated, specifies the name of the schema that contains the event handler. The default, <code>NULL</code>, uses the current schema. See also <a href="#CEGDFFFD">"Tutorial: Adding an Email Alert to a Fine-Grained Audit Policy"</a>.</p>
</li>
<li>
<p><code>handler_module</code>: Specifies the name of the event handler. Include the package the event handler is in. This function is invoked only after the first row that matches the audit condition in the query is processed.</p>
<p>Follow these guidelines:</p>
<ul>
<li>
<p>Do not create recursive fine-grained audit handlers. For example, suppose you create a handler that executes an <code>INSERT</code> statement on the <code>HR.EMPLOYEES</code> table. The policy that is associated with this handler is for <code>INSERT</code> statements (as set by the <code>statement_types</code> parameter). When the policy is used, the handler executes recursively until the system has run out of memory. This can raise the error<a id="sthref1704"></a> <code>ORA-1000: maximum open cursors exceeded</code> or<a id="sthref1705"></a> <code>ORA-00036: maximum number of recursive SQL levels (50) exceeded</code>.</p>
</li>
<li>
<p>Do not issue the <code>DBMS_FGA.ENABLE_POLICY</code> or <code>DBMS_FGA.DISABLE_POLICY</code> statement from a policy handler. Doing so can raise the<a id="sthref1706"></a> <code>ORA-28144: Failed to execute fine-grained audit handler</code> error.</p>
</li>
</ul>
</li>
<li>
<p><code>enable</code>: Enables or disables the policy using true or false. If omitted, the policy is enabled. The default is <code>TRUE</code>.</p>
</li>
<li>
<p><code>statement_types</code>: Specifies the SQL statements to be audited: <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code>, or <code>SELECT</code> only. The default is <code>SELECT</code>.</p>
</li>
<li>
<p><code>audit_trail</code>: Specifies the destination (<code>DB</code> or <code>XML</code>) of fine-grained audit records. Also specifies whether to populate <code>LSQLTEXT</code> and <code>LSQLBIND</code> in <code>FGA_LOG$</code>. However, be aware that sensitive data, such as credit card information, can be recorded in clear text. See <a href="guidelines.htm#CHDBDBDG">"Auditing Sensitive Information"</a> for how you can handle this scenario.</p>
</li>
<li>
<p><code>audit_column_opts</code>: If you specify more than one column in the <code>audit_column</code> parameter, then this parameter determines whether to audit all or specific columns. See <a href="#BCGFDAIA">"Auditing Specific Columns and Rows"</a> for more information.</p>
</li>
</ul>
<p>See <a class="olink ARPLS225" href="../../appdev.111/b28419/d_fga.htm#ARPLS225"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for additional details about the <code>ADD_POLICY</code> syntax.</p>
<p><a href="#CEGBDHHI">Example 9-20</a> shows how to audit statements <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code>, and <code>SELECT</code> on table <code>HR.EMPLOYEES</code>. Note that this example omits the <code>audit_column_opts</code> parameter, because it is not a mandatory parameter.</p>
<div id="DBSEG98400" class="example">
<p class="titleinexample"><a id="CEGBDHHI"></a>Example 9-20 Using DBMS_FGA.ADD_POLICY to Create a Fine-Grained Audit Policy</p>
<pre>
BEGIN
  DBMS_FGA.ADD_POLICY(
   object_schema      =&gt; 'HR',
   object_name        =&gt; 'EMPLOYEES',
   policy_name        =&gt; 'chk_hr_employees',
   enable             =&gt;  TRUE,
   statement_types    =&gt; 'INSERT, UPDATE, SELECT, DELETE',
   audit_trail        =&gt;  DBMS_FGA.DB);
END;
/
</pre></div>
<!-- class="example" -->
<p>At this point, if you query the <code>DBA_AUDIT_POLICIES</code> view, you will find the new policy listed:</p>
<pre>
SELECT POLICY_NAME FROM DBA_AUDIT_POLICIES;
POLICY_NAME
-------------------------------
CHK_HR_EMPLOYEES
</pre>
<p>Afterwards, any of the following SQL statements log an audit event record.</p>
<pre>
SELECT count(*) FROM hr.employees WHERE commission_pct = 20 and salary &gt; 4500;

SELECT salary FROM hr.employees WHERE department_id = 50;

DELETE from hr.employees WHERE salary &gt; 1000000;
</pre>
<p class="subhead2"><a id="BCGFDAIA"></a><a id="DBSEG98401"></a>Auditing Specific Columns and Rows</p>
<p>You<a id="sthref1707"></a> can fine-tune the audit behavior by targeting a specific column, referred to as a <span class="italic">relevant column</span>, to be audited if a condition is met. To accomplish this, you use the <code>audit_column</code> parameter to specify one or more sensitive columns. In addition, you can audit data in specific rows by using the <code>audit_condition</code> parameter to define a Boolean condition.</p>
<p><a href="#CEGBDHHI">Example 9-20</a> performs an audit if anyone in Department 50 who tries to access the <code>salary</code> and <code>commission_pct</code> columns.</p>
<pre>
audit_condition    =&gt; 'department_id = 50', 
audit_column       =&gt; 'salary,commission_pct,'
</pre>
<p>As you can see, this feature is enormously beneficial. It not only enables you to pinpoint particularly important types of data to audit, but it provides increased protection for columns that contain sensitive data, such as Social Security numbers, salaries, patient diagnoses, and so on.</p>
<p>If the <code>audit_column</code> lists more than one column, you can use the <code>audit_column_opts</code> parameter to specify whether a statement is audited when the query references <span class="italic">any</span> column specified in the <code>audit_column</code> parameter or only when <span class="italic">all</span> columns are referenced. For example:</p>
<pre>
audit_column_opts   =&gt; DBMS_FGA.ANY_COLUMNS,

audit_column_opts   =&gt; DBMS_FGA.ALL_COLUMNS,
</pre>
<p>If you do not specify a relevant column, then auditing applies to all columns.</p>
<p>For more information about the <code>audit_condition</code>, <code>audit_column</code>, and <code>audit_column_opts</code> parameters in the <code>DBMS_FGA.ADD_POLICY</code> procedure, see <a class="olink ARPLS66353" href="http://www.oracle.com/pls/topic/lookup?ctx=db111&amp;id=ARPLS66353"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>. See also the usage notes for the <code>ADD_POLICY</code> procedure in that section.</p>
</div>
<!-- class="sect3" -->
<a id="CEGCJEAE"></a>
<div id="DBSEG98402" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Disabling and Enabling a Fine-Grained Audit Policy</h4>
<p><a id="sthref1708"></a><a id="sthref1709"></a>You can disable a fine-grained audit policy by using the <code>DBMS_FGA.DISABLE_POLICY</code> procedure. The syntax for <code>DISABLE_POLICY</code> is:</p>
<pre>
DBMS_FGA.DISABLE_POLICY(
<span class="italic">   </span>object_schema  VARCHAR2, 
   object_name    VARCHAR2,<span class="italic"> </span>
   policy_name    VARCHAR2 ); 
</pre>
<p><a href="#CEGIAABI">Example 9-21</a> shows how to disable the fine-grained audit policy created in <a href="#CEGBDHHI">Example 9-20</a>.</p>
<div id="DBSEG98403" class="example">
<p class="titleinexample"><a id="CEGIAABI"></a>Example 9-21 Disabling a Fine-Grained Audit Policy</p>
<pre>
DBMS_FGA.DISABLE_POLICY(
  object_schema        =&gt; 'hr',
  object_name          =&gt; 'employees',
  policy_name          =&gt; 'chk_hr_employees');
</pre></div>
<!-- class="example" -->
<p>For detailed information about the <code>DISABLE_POLICY</code> syntax, see <a class="olink ARPLS226" href="../../appdev.111/b28419/d_fga.htm#ARPLS226"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
<p><a id="sthref1710"></a><a id="sthref1711"></a><a href="#BCGJAFFD">Example 9-22</a> show how to reenable the <code>chk_hr_emp</code> policy by using the <code>DBMS_FGA.ENABLE_POLICY</code> procedure:</p>
<div id="DBSEG98404" class="example">
<p class="titleinexample"><a id="BCGJAFFD"></a>Example 9-22 Enabling a Fine-Grained Audit Policy</p>
<pre>
DBMS_FGA.ENABLE_POLICY(
  object_schema        =&gt; 'hr',
  object_name          =&gt; 'employees',
  policy_name          =&gt; 'chk_hr_employees',
  enable               =&gt; true);
</pre></div>
<!-- class="example" -->
<p>For detailed information about the <code>ENABLE_POLICY</code> syntax, see <a class="olink ARPLS228" href="../../appdev.111/b28419/d_fga.htm#ARPLS228"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
</div>
<!-- class="sect3" -->
<a id="CEGHFDEJ"></a>
<div id="DBSEG98405" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Dropping a Fine-Grained Audit Policy</h4>
<p>Oracle Database automatically drops the audit policy if you remove the object specified in the <code>object_name</code> parameter of the <code>DBMS_FGA.ADD_POLICY</code> procedure.</p>
<p><a id="sthref1712"></a><a id="sthref1713"></a><a href="#CEGIJACJ">Example 9-23</a> shows how to drop a fine-grained audit policy manually by using the <code>DBMS_FGA.DROP_POLICY</code> procedure.</p>
<div id="DBSEG98406" class="example">
<p class="titleinexample"><a id="CEGIJACJ"></a>Example 9-23 Dropping a Fine-Grained Audit Policy</p>
<pre>
DBMS_FGA.DROP_POLICY(
  object_schema      =&gt; 'hr',
  object_name        =&gt; 'employees',
  policy_name        =&gt; 'chk_hr_employees');
</pre></div>
<!-- class="example" -->
<p>See <a class="olink ARPLS227" href="../../appdev.111/b28419/d_fga.htm#ARPLS227"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for detailed information about the <code>DROP_POLICY</code> syntax.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGDFFFD"></a>
<div id="DBSEG98407" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Tutorial: Adding an Email Alert to a Fine-Grained Audit Policy</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CHDDIHEA">About This Tutorial</a></p>
</li>
<li>
<p><a href="#BCGCBAGC">Step 1: Install and Configure the UTL_MAIL PL/SQL Package</a></p>
</li>
<li>
<p><a href="#BCGHHDEE">Step 2: Create User Accounts</a></p>
</li>
<li>
<p><a href="#BCGDJABE">Step 3: Configure an Access Control List File for Network Services</a></p>
</li>
<li>
<p><a href="#BCGFHDFG">Step 4: Create the Email Security Alert PL/SQL Procedure</a></p>
</li>
<li>
<p><a href="#BCGJHCFE">Step 5: Create and Test the Fine-Grained Audit Policy Settings</a></p>
</li>
<li>
<p><a href="#BCGGDAHA">Step 6: Test the Alert</a></p>
</li>
<li>
<p><a href="#BCGGGAEB">Step 7: Remove the Components for This Tutorial</a></p>
</li>
</ul>
<a id="CHDDIHEA"></a>
<div id="DBSEG98514" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About This Tutorial</h4>
<p>You <a id="sthref1714"></a><a id="sthref1715"></a>can <a id="sthref1716"></a>add an<a id="sthref1717"></a> email alert <a id="sthref1718"></a>to a fine-grained <a id="sthref1719"></a>audit policy that goes into effect when a user (or an intruder) violates the policy. To accomplish this, you first must create a procedure that generates the alert, and then use the following <code>DBMS_FGA.ADD_POLICY</code> parameters to call this function when someone violates this policy:</p>
<ul>
<li>
<p><code>handler_schema</code>: The schema in which the handler event is stored</p>
</li>
<li>
<p><code>handler_module</code>: The name of the event handler</p>
</li>
</ul>
<p>The alert can come in any form that best suits your environment: an email or pager notification, updates to a particular file or table, and so on. Creating alerts also helps to meet certain compliance regulations, such as California Senate Bill 1386. In this tutorial, you will create an email alert.</p>
<p>In this tutorial, you create an email alert that notifies a security administrator that a Human Resources representative is trying to select or modify salary information in the <code>HR.EMPLOYEES</code> table. The representative is permitted to make changes to this table, but to meet compliance regulations, we want to create a record of all salary selections and modifications to the table.</p>
</div>
<!-- class="sect3" -->
<a id="BCGCBAGC"></a>
<div id="DBSEG98408" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 1: Install and Configure the UTL_MAIL PL/SQL Package</h4>
<ol>
<li>
<p>Log on as user <code>SYS</code> with the <code>SYSDBA</code> privilege.</p>
<pre>
sqlplus SYS AS SYSDBA
Enter password: <span class="italic">password</span>
</pre></li>
<li>
<p>Install the <code>UTL_MAIL</code> package.</p>
<pre>
@?/rdbms/admin/utlmail.sql
@?/rdbms/admin/prvtmail.plb
</pre>
<p>The <code>UTL_MAIL</code> package enables you to manage email. See <a class="olink ARPLS384" href="../../appdev.111/b28419/u_mail.htm#ARPLS384"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about <code>UTL_MAIL</code>.</p>
<p>Be aware that currently, the <code>UTL_SMTP</code> and <code>UTL_MAIL</code> PL/SQL packages do not support SSL servers.</p>
</li>
<li>
<p>Check the current value of the <code>SMTP_OUT_SERVER</code> initialization parameter, and make a note of this value so that you can restore it when you complete this tutorial.</p>
<p>For example:</p>
<pre>
SHOW PARAMETER SMTP_OUT_SERVER
</pre>
<p>If the <code>SMTP_OUT_SERVER</code> parameter has already been set, then output similar to the following appears:</p>
<pre>
NAME                    TYPE              VALUE
----------------------- ----------------- ----------------------------------
SMTP_OUT_SERVER         string            some_imap_server.example.com
</pre></li>
<li id="BCGBIAEI">
<p>Issue the following <code>ALTER SYSTEM</code> statement:</p>
<pre>
ALTER SYSTEM SET SMTP_OUT_SERVER="<span class="italic">imap_mail_server.example.com</span>";
</pre>
<p>Replace <code><span class="codeinlineitalic">imap_mail_server</span></code> with the name of your SMTP server, which you can find in the account settings in your email tool. Enclose these settings in quotation marks. For example:</p>
<pre>
ALTER SYSTEM SET SMTP_OUT_SERVER="my_imap_server.example.com"
</pre></li>
<li>
<p>Connect as <code>SYS</code> using the <code>SYSOPER</code> privilege and then restart the database.</p>
<pre>
CONNECT SYS/AS SYSOPER
Enter password: <span class="italic">password</span>

SHUTDOWN IMMEDIATE
STARTUP
</pre></li>
<li>
<p>Ensure that the <code>SMTP_OUT_SERVER</code> parameter setting is correct.</p>
<pre>
CONNECT SYS/AS SYSDBA
Enter password: <span class="italic">password</span>

SHOW PARAMETER SMTP_OUT_SERVER
</pre>
<p>Output similar to the following appears:</p>
<pre>
NAME                    TYPE              VALUE
----------------------- ----------------- ----------------------------------
SMTP_OUT_SERVER         string            my_imap_server.example.com
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGHHDEE"></a>
<div id="DBSEG98409" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 2: Create User Accounts</h4>
<ol>
<li>
<p>Ensure that you are connected as <code>SYS</code> using the <code>SYSDBA</code> privilege, and then create the <code>sysadmin_fga</code> account, who will create the fine-grained audit policy.</p>
<p>For example:</p>
<pre>
CONNECT SYS/AS SYSDBA
Enter password: <span class="italic">password</span>

GRANT CREATE SESSION, DBA TO sysadmin_fga IDENTIFIED BY <span class="italic">password</span>;
GRANT EXECUTE ON DBMS_FGA TO sysadmin_fga;
GRANT CREATE PROCEDURE, DROP ANY PROCEDURE TO sysadmin_fga;
GRANT EXECUTE ON UTL_TCP TO sysadmin_fga;
GRANT EXECUTE ON UTL_SMTP TO sysadmin_fga;
GRANT EXECUTE ON UTL_MAIL TO sysadmin_fga;
GRANT EXECUTE ON DBMS_NETWORK_ACL_ADMIN TO sysadmin_fga;
</pre>
<p>Replace <code><span class="codeinlineitalic">password</span></code> with a password that is secure. See <a href="authentication.htm#CHDFDHAJ">"Minimum Requirements for Passwords"</a> for more information.</p>
<p>The <code>UTL_TCP</code>, <code>UTL_SMTP</code>, <code>UTL_MAIL</code>, and <code>DBMS_NETWORK_ACL_ADMIN</code> PL/SQL packages are used by the email security alert that you create.</p>
</li>
<li>
<p>Connect as user <code>SYSTEM</code>.</p>
<pre>
CONNECT SYSTEM
Enter password: <span class="italic">password</span>
</pre></li>
<li>
<p>Ensure that the <code>HR</code> schema account is unlocked and has a password. If necessary, unlock <code>HR</code> and grant this user a password.</p>
<pre>
SELECT USERNAME, ACCOUNT_STATUS FROM DBA_USERS WHERE USERNAME = 'HR';
</pre>
<p>If the <code>DBA_USERS</code> view lists user <code>HR</code> as locked and expired, then enter the following statement to unlock the <code>HR</code> account and create a new password:</p>
<pre>
ALTER USER HR ACCOUNT UNLOCK IDENTIFIED BY <span class="italic">password</span>;
</pre>
<p>Enter a password that is secure. For greater security, do <span class="bold">not</span> give the <code>HR</code> account the same password from previous releases of Oracle Database. <a href="authentication.htm#CHDFDHAJ">"Minimum Requirements for Passwords"</a> for the minimum requirements for creating passwords.</p>
</li>
<li>
<p>Create a user account for Susan Mavris, who is an HR representative, and then grant this user access to the <code>HR.EMPLOYEES</code> table.</p>
<pre>
GRANT CREATE SESSION TO smavris IDENTIFIED BY <span class="italic">password</span>;
GRANT SELECT, INSERT, UPDATE, DELETE ON HR.EMPLOYEES TO SMAVRIS; 
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGDJABE"></a>
<div id="DBSEG98410" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 3: Configure an Access Control List File for Network Services</h4>
<p>Before you can use PL/SQL network utility packages such as <code>UTL_MAIL</code>, you must configure an access control list (ACL) file that enables fine-grained access to external network services. For detailed information about this topic, see <a href="authorization.htm#CIHDAJDJ">"Managing Fine-Grained Access to External Network Services"</a>.</p>
<p>To configure an access control list for the email alert:</p>
<ol>
<li>
<p>Connect to SQL*Plus as user <code>sysadmin_fga</code>.</p>
<pre>
CONNECT sysadmin_fga
Enter password: <span class="italic">password</span>
</pre></li>
<li>
<p>Create the following access control list and its privilege definitions.</p>
<pre>
BEGIN
 DBMS_NETWORK_ACL_ADMIN.CREATE_ACL (
  acl          =&gt; 'email_server_permissions.xml', 
  description  =&gt; 'Enables network permissions for the email server',
  principal    =&gt; 'SYSADMIN_FGA',
  is_grant     =&gt; TRUE, 
  privilege    =&gt; 'connect');
END;
/
</pre>
<p>Ensure that you enter your exact user name for the principal setting, in upper-case letters. For this tutorial, enter <code>SYSADMIN_FGA</code> for the name of the principal.</p>
</li>
<li>
<p>Assign the access control list to the outgoing SMTP network host for your email server.</p>
<pre>
BEGIN
 DBMS_NETWORK_ACL_ADMIN.ASSIGN_ACL (
  acl         =&gt; 'email_server_permissions.xml',
  host        =&gt; '<span class="italic">SMTP_OUT_SERVER_setting</span>', 
  lower_port  =&gt; <span class="italic">port</span>); 
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">SMTP_OUT_SERVER_setting</span></code>: Enter the <code>SMTP_OUT_SERVER</code> setting that you set for the <code>SMTP_OUT_SERVER</code> parameter in <a href="#BCGCBAGC">"Step 1: Install and Configure the UTL_MAIL PL/SQL Package"</a>. This setting should match exactly the setting that your email tool specifies for its outgoing server.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">port</span></code>: Enter the port number that your email tool specifies for its outgoing server. Typically, this setting is 25. Enter this value for the <code>lower_port</code> setting. (Currently, the <code>UTL_MAIL</code> package does not support SSL. If your email server is an SSL server, then enter 25 for the port number, even if the email server uses a different port number.)</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGFHDFG"></a>
<div id="DBSEG98411" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 4: Create the Email Security Alert PL/SQL Procedure</h4>
<p>As user <code>sysadmin_fga</code>, create the following procedure:. (You can copy and paste this text by positioning the cursor at the start of <code>CREATE OR REPLACE</code> in the first line.)</p>
<div class="inftblsimplewide">
<table class="cellalignment1579" title="FGA email security alert procedure" summary="FGA email security alert procedure, line numbers and code, listed left to right" dir="ltr">
<tbody>
<tr class="cellalignment1570">
<td class="cellalignment1578">
<pre>
1
2
3
4
5
6
7
8
9
10
11
12
</pre></td>
<td class="cellalignment1578">
<pre>
CREATE OR REPLACE PROCEDURE email_alert (sch varchar2, tab varchar2, pol varchar2)
AS
msg varchar2(20000) := 'HR.EMPLOYEES table violation. The time is: ';
BEGIN
  msg := msg||to_char(SYSDATE, 'Day DD MON, YYYY HH24:MI:SS'); 
UTL_MAIL.SEND (
    sender      =&gt; '<span class="italic">youremail@example.com</span>',
    recipients  =&gt; '<span class="italic">recipientemail@example.com</span>',
    subject     =&gt; 'Table modification on HR.EMPLOYEES',
    message     =&gt; msg); 
END email_alert;
/
</pre></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblsimplewide" -->
<p>In this example:</p>
<ul>
<li>
<p><span class="bold">Lines 1 and 2</span>: In the <code>CREATE PROCEDURE</code> statement, you must include a signature that describes the schema name (<code>sch</code>), table name (<code>tab</code>), and the name of the audit procedure (<code>pol</code>) that you will define in audit policy in the next step.</p>
</li>
<li>
<p><span class="bold">Lines 9 and 10</span>: Replace <code><span class="codeinlineitalic">youremail@example.com</span></code> with your email address, and <code><span class="codeinlineitalic">recipientemail@example.com</span></code> with the email address of the person you want to receive the notification.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGJHCFE"></a>
<div id="DBSEG98412" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 5: Create and Test the Fine-Grained Audit Policy Settings</h4>
<ol>
<li>
<p>As user <code>sysadmin_fga</code>, create the <code>chk_hr_emp</code> policy fine-grained audit policy as follows.</p>
<pre>
BEGIN
 DBMS_FGA.ADD_POLICY (
  object_schema      =&gt;  'HR',
  object_name        =&gt;  'EMPLOYEES',
  policy_name        =&gt;  'CHK_HR_EMP',
  audit_column       =&gt;  'SALARY', 
  handler_schema     =&gt;  'SYSADMIN_FGA',
  handler_module     =&gt;  'EMAIL_ALERT',
  enable             =&gt;   TRUE,
  statement_types    =&gt;  'SELECT, UPDATE',
  audit_trail        =&gt;   DBMS_FGA.DB + DBMS_FGA.EXTENDED); 
END;
/
</pre></li>
<li>
<p>Commit the changes you have made to the database.</p>
<pre>
COMMIT;
</pre></li>
<li>
<p>Test the settings that you have created so far.</p>
<pre>
EXEC email_alert ('hr', 'employees', 'chk_hr_emp');
</pre>
<p>SQL*Plus should display a <code>PL/SQL procedure successfully completed</code> message, and in a moment, depending on the speed of your email server, you should receive the email alert.</p>
<p>If you receive an <a id="sthref1720"></a><a id="sthref1721"></a><code>ORA-24247: network access denied by access control list (ACL)</code> error followed by<a id="sthref1722"></a><a id="sthref1723"></a> <code>ORA-06512: at</code> <code><span class="codeinlineitalic">string</span></code><code>line</code> <code><span class="codeinlineitalic">string</span></code> errors, then check the settings in the access control list file.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGGDAHA"></a>
<div id="DBSEG98413" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 6: Test the Alert</h4>
<ol>
<li>
<p>Connect to SQL*Plus as user <code>smavris</code>, check your salary, and give yourself a nice raise.</p>
<pre>
CONNECT smavris
Enter password: <span class="italic">password</span>

SELECT SALARY FROM HR.EMPLOYEES WHERE LAST_NAME = 'Mavris';

SALARY
-----------
6500

UPDATE HR.EMPLOYEES SET SALARY = 13000 WHERE LAST_NAME = 'Mavris';
</pre></li>
<li>
<p>Now select from a column other than <code>SALARY</code> in the <code>HR.EMPLOYEES</code> table.</p>
<pre>
SELECT FIRST_NAME, LAST_NAME FROM HR.EMPLOYEES WHERE LAST_NAME = 'Raphaely';
</pre>
<p>The following output should appear:</p>
<pre>
FIRST_NAME           LAST_NAME
-------------------- --------------------
Den                  Raphaely
</pre>
<p>By now, depending on the speed of you email server, you (or your recipient) should have received an email with the subject header <code>Table modification on HR.EMPLOYEES</code> notifying you of the tampering of the <code>HR.EMPLOYEES</code> table.</p>
</li>
<li>
<p>As user <code>sysadmin_fga</code>, query the <code>DBA_FGA_AUDIT_TRAIL</code> data dictionary view, which contains the Susan Mavris's audited activities.</p>
<pre>
CONNECT sysadmin_fga
Enter password: <span class="italic">password</span>

col dbuid format a10
col lsqltext format a66
col ntimestamp# format a15

SELECT DBUID, LSQLTEXT, NTIMESTAMP# FROM SYS.FGA_LOG$ WHERE POLICYNAME='CHK_HR_EMP';
</pre>
<p>Output similar to the following appears:</p>
<pre>
DBUID      LSQLTEXT
---------- ------------------------------------------------------------------
NTIMESTAMP#
--------------------------------------------------------------------------
SMAVRIS    SELECT SALARY FROM HR.EMPLOYEES WHERE LAST_NAME = 'Mavris'
12-AUG-09 03.48.59.111000 PM

SMAVRIS    UPDATE HR.EMPLOYEES SET SALARY = 13000 WHERE LAST_NAME = 'Mavris'
12-AUG-09 03.49.07.330000 PM
</pre>
<p>The audit trail captures the two SQL statements that Susan Mavris ran that affected the <code>SALARY</code> column in the <code>HR.EMPLOYEES</code> table. The third statement she ran, in which she asked about Den Raphaely, was not recorded because it was not affected by the audit policy. This is because Oracle Database executes the audit function as an autonomous transaction, committing only the actions of the <code>handler_module</code> setting and not any user transaction. The function has no effect on any user SQL transaction.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGGGAEB"></a>
<div id="DBSEG98414" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 7: Remove the Components for This Tutorial</h4>
<ol>
<li>
<p>Connect to SQL*Plus as user <code>sysadmin_fga</code> and drop the <code>CHK_HR_EMP</code> policy.</p>
<pre>
CONNECT sysadmin_fga
Enter password: <span class="italic">password</span>

EXEC DBMS_FGA.DROP_POLICY('HR', 'EMPLOYEES', 'CHK_HR_EMP');
</pre></li>
<li>
<p>Connect as user <code>SYSTEM</code> privilege, and then drop users <code>sysadmin_fga</code> (including the objects in the <code>sysadmin_fga</code> schema) and <code>smavris</code>.</p>
<pre>
CONNECT SYSTEM
Enter password: <span class="italic">password</span>

DROP USER sysadmin_fga CASCADE;
DROP USER smavris;
</pre></li>
<li>
<p>Connect as user <code>HR</code> and remove the loftiness of Susan Mavris's salary.</p>
<pre>
CONNECT HR
Enter password: <span class="italic">password</span>

UPDATE HR.EMPLOYEES SET SALARY = 6500 WHERE LAST_NAME = 'Mavris';
</pre></li>
<li>
<p>If you want, lock and expire <code>HR</code>, unless other users want to use this account:</p>
<pre>
ALTER USER HR PASSWORD EXPIRE ACCOUNT LOCK;
</pre></li>
<li>
<p>Connect as user <code>SYS</code> with the <code>SYSDBA</code> privilege, and drop the <code>email_server_permissions.xml</code> access control list.</p>
<pre>
BEGIN
   DBMS_NETWORK_ACL_ADMIN.DROP_ACL(
     acl =&gt; 'email_server_permissions.xml');
END;
/
</pre>
<p>Access control lists reside in the <code>SYS</code> schema, not the schema of the user who created them.</p>
</li>
<li>
<p>Issue the following <code>ALTER SYSTEM</code> statement to restore the <code>SMTP_OUT_SERVER</code> parameter to the previous value, from Step <a href="#BCGBIAEI">4</a> under <a href="#BCGCBAGC">"Step 1: Install and Configure the UTL_MAIL PL/SQL Package"</a>:</p>
<pre>
ALTER SYSTEM SET SMTP_OUT_SERVER="<span class="italic">previous_value</span>";
</pre>
<p>Enclose this setting in quotation marks. For example:</p>
<pre>
ALTER SYSTEM SET SMTP_OUT_SERVER="some_imap_server.example.com"
</pre></li>
<li>
<p>Restart the database instance.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGCBBFI"></a>
<div id="DBSEG98415" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Tutorial: Auditing Nondatabase Users</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CHDIFIEJ">About This Tutorial</a></p>
</li>
<li>
<p><a href="#BCGGFJHC">Step 1: Create the User Account and Ensure the User HR Is Active</a></p>
</li>
<li>
<p><a href="#BCGDIHHJ">Step 2: Create the Fine-Grained Audit Policy</a></p>
</li>
<li>
<p><a href="#BCGGJBGA">Step 3: Test the Policy</a></p>
</li>
<li>
<p><a href="#BCGDFFHC">Step 4: Remove the Components for This Tutorial</a></p>
</li>
</ul>
<a id="CHDIFIEJ"></a>
<div id="DBSEG98515" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About This Tutorial</h4>
<p>This tutorial <a id="sthref1724"></a><a id="sthref1725"></a>shows how to create a fine-grained audit policy that audits a nondatabase user's actions, based on the identity set in the client identifier.</p>
</div>
<!-- class="sect3" -->
<a id="BCGGFJHC"></a>
<div id="DBSEG98416" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 1: Create the User Account and Ensure the User HR Is Active</h4>
<ol>
<li>
<p>Log on as user <code>SYS</code> with the <code>SYSDBA</code> privilege.</p>
<pre>
sqlplus SYS AS SYSDBA
Enter password: <span class="italic">password</span>
</pre></li>
<li>
<p>Create the <code>sysadmin_fga</code> account, who will create the fine-grained audit policy.</p>
<pre>
GRANT CREATE SESSION, DBA TO sysadmin_fga IDENTIFIED BY <span class="italic">password</span>;
GRANT SELECT ON OE.ORDERS TO sysadmin_fga;
GRANT EXECUTE ON DBMS_FGA TO sysadmin_fga;
GRANT SELECT ON SYS.FGA_LOG$ TO sysadmin_fga;
</pre>
<p>Replace <code><span class="codeinlineitalic">password</span></code> with a password that is secure. See <a href="authentication.htm#CHDFDHAJ">"Minimum Requirements for Passwords"</a> for more information.</p>
</li>
<li>
<p>The sample user <code>OE</code> will also be used in this tutorial, so query the <code>DBA_USERS</code> data dictionary view to ensure that <code>OE</code> is not locked or expired.</p>
<pre>
SELECT USERNAME, ACCOUNT_STATUS FROM DBA_USERS WHERE USERNAME = 'OE';
</pre>
<p>If the <code>DBA_USERS</code> view lists user <code>OE</code> as locked and expired, log in as user <code>SYSTEM</code> and then enter the following statement to unlock the <code>OE</code> account and create a new password:</p>
<pre>
ALTER USER OE ACCOUNT UNLOCK IDENTIFIED BY <span class="italic">password</span>;
</pre>
<p>Enter a password that is secure. For greater security, do <span class="bold">not</span> give the <code>OE</code> account the same password from previous releases of Oracle Database. <a href="authentication.htm#CHDFDHAJ">"Minimum Requirements for Passwords"</a> for the minimum requirements for creating passwords.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGDIHHJ"></a>
<div id="DBSEG98417" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 2: Create the Fine-Grained Audit Policy</h4>
<ol>
<li>
<p>Connect to SQL*Plus as user <code>sysadmin_fga</code>.</p>
<pre>
CONNECT sysadmin_fga
Enter password: <span class="italic">password</span>
</pre></li>
<li>
<p>Create the following policy:<a id="sthref1726"></a></p>
<pre>
BEGIN
 DBMS_FGA.ADD_POLICY(OBJECT_SCHEMA =&gt; 'OE',
   OBJECT_NAME                     =&gt; 'ORDERS',
   POLICY_NAME                     =&gt; 'ORDERS_FGA_POL',
   AUDIT_CONDITION                 =&gt; 'SYS_CONTEXT(''USERENV'', ''CLIENT_IDENTIFIER'') = ''Robert''',
   HANDLER_SCHEMA                  =&gt; NULL,
   HANDLER_MODULE                  =&gt; NULL,
   ENABLE                          =&gt; true,
   STATEMENT_TYPES                 =&gt; 'INSERT,UPDATE,DELETE,SELECT',
   AUDIT_TRAIL                     =&gt; DBMS_FGA.DB + DBMS_FGA.EXTENDED,
   AUDIT_COLUMN_OPTS               =&gt; DBMS_FGA.ANY_COLUMNS);
END;
/
</pre>
<p>In this example, the <code>AUDIT_CONDITION</code> parameter assumes the nondatabase user is named Robert. The policy will monitor any <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code>, and <code>SELECT</code> statements Robert will attempt.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGGJBGA"></a>
<div id="DBSEG98418" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 3: Test the Policy</h4>
<ol>
<li>
<p>Connect as user <code>OE</code> and select from the <code>OE.ORDERS</code> table.</p>
<pre>
CONNECT OE
Enter password: <span class="italic">password</span>

SELECT COUNT(*) FROM ORDERS;
</pre>
<p>The following output appears:</p>
<pre>
  COUNT(*)
----------
       105
</pre></li>
<li>
<p>Connect as user <code>sysadmin_fga</code> and then check if any audit records were generated.</p>
<pre>
CONNECT sysadmin_fga
Enter password: <span class="italic">password</span>

SELECT DBUID, LSQLTEXT FROM SYS.FGA_LOG$ WHERE POLICYNAME='ORDERS_FGA_POL';
</pre>
<p>The following output appears:</p>
<pre>
no rows selected
</pre>
<p>Because no nondatabase users were logged in to query the <code>OE.ORDERS</code> table, the audit trail is empty.</p>
</li>
<li>
<p>Reconnect as user <code>OE</code>, set the client identifier to <code>Robert</code>, and then reselect from the <code>OE.ORDERS</code> table.</p>
<pre>
CONNECT OE
Enter password: <span class="italic">password</span>

EXEC DBMS_SESSION.SET_IDENTIFIER('Robert');

SELECT COUNT(*) FROM ORDERS;
</pre>
<p>The following output should appear:</p>
<pre>
  COUNT(*)
----------
       105
</pre></li>
<li>
<p>Reconnect as user <code>sysadmin_fga</code> and then check the audit trail again.</p>
<pre>
CONNECT sysadmin_fga
Enter password: <span class="italic">password</span>

SELECT DBUID, LSQLTEXT FROM SYS.FGA_LOG$ WHERE POLICYNAME='ORDERS_FGA_POL';
</pre>
<p>This time, because <code>Robert</code> has made his appearance and queried the <code>OE.ORDERS</code> table, the audit trail captures his actions:</p>
<pre>
DBUID            LSQLTEXT
---------------- ----------------------------
OE               SELECT COUNT(*) FROM ORDERS;
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGDFFHC"></a>
<div id="DBSEG98419" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 4: Remove the Components for This Tutorial</h4>
<ol>
<li>
<p>Connect to SQL*Plus as user <code>sysadmin_fga</code> and drop the <code>ORDERS_FGA_POL</code> policy.</p>
<pre>
CONNECT sysadmin_fga
Enter password: <span class="italic">password</span>

EXEC DBMS_FGA.DROP_POLICY('OE', 'ORDERS', 'ORDERS_FGA_POL');
</pre></li>
<li>
<p>Connect to SQL*Plus as user <code>SYSTEM</code>, and then drop user <code>sysadmin_fga</code> (including the objects in the <code>sysadmin_fga</code> schema).</p>
<pre>
CONNECT SYSTEM
Enter password: <span class="italic">password</span>

DROP USER sysadmin_fga CASCADE;
</pre></li>
<li>
<p>If you want, lock and expire <code>OE</code>, unless other users want to use this account:</p>
<pre>
ALTER USER OE PASSWORD EXPIRE ACCOUNT LOCK;
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGIBJDG"></a>
<div id="DBSEG98420" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Archiving and Purging the Fine-Grained Audit Trail</h3>
<p>To <a id="sthref1727"></a>archive <a id="sthref1728"></a><a id="sthref1729"></a>fine-grained audit records, you can copy the relevant records to a normal database table (for example, using <code>INSERT INTO</code> <code><span class="codeinlineitalic">table</span></code> <code>SELECT ... FROM SYS.FGA_LOG$ ...</code>), similar to the way that you would with the database audit trail, as described in <a href="#CJACABDC">"Archiving and Purging the Database Audit Trail"</a>.</p>
<p><a id="sthref1730"></a>To purge fine-grained audit records, you can delete them records from the <code>SYS.FGA_LOG$</code> table. For example, to delete <span class="italic">all</span> fine-grained audit records, enter the following statement:</p>
<pre>
DELETE FROM SYS.FGA_LOG$;
</pre>
<p>Alternatively, to delete all audit records from the fine-grained audit trail generated as a result of auditing the table <code>emp</code>, enter the following statement:</p>
<pre>
DELETE FROM SYS.FGA_LOG$
     WHERE obj$name='EMP';
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BCGEHHCA"></a>
<div id="DBSEG0611" class="sect1">
<h2 class="sect1">Auditing SYS Administrative Users</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CHDFAJAF">Auditing User SYSTEM</a></p>
</li>
<li>
<p><a href="#CHDGJBEI">Auditing User SYS and Users Who Connect as SYSDBA and SYSOPER</a></p>
</li>
</ul>
<a id="CHDFAJAF"></a>
<div id="DBSEG98421" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing User SYSTEM</h3>
<p>You can <a id="sthref1731"></a>audit the <code>SYSTEM</code> user by using all the standard and fine-grained audit features. Insofar as auditing is concerned, user <code>SYSTEM</code> is a typical database user (such as <code>HR</code> or <code>OE</code>) and requires no special configuration to be audited.</p>
<p><a href="#CHDFDFCI">Example 9-24</a> shows how to audit any table insert operations issued by user <code>SYSTEM</code>.</p>
<div id="DBSEG98422" class="example">
<p class="titleinexample"><a id="CHDFDFCI"></a>Example 9-24 Auditing Table Insert Operations by User SYSTEM</p>
<pre>
AUDIT INSERT ANY TABLE BY SYSTEM BY ACCESS;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CHDGJBEI"></a>
<div id="DBSEG98423" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing User SYS and Users Who Connect as SYSDBA and SYSOPER</h3>
<p>You can<a id="sthref1732"></a><a id="sthref1733"></a> fully audit sessions for users who connect as <code>SYS</code>, including all users connecting using the <code>SYSDBA</code> or <code>SYSOPER</code> privileges. This enables you to write the actions of administrative users to an operating system file, even if the <code>AUDIT_TRAIL</code> parameter is set to <code>NONE</code>, <code>DB</code>, or <code>DB, EXTENDED</code>. Writing the actions of administrator users to an operating system audit file is safer than writing to the <code>SYS.AUD$</code> table, because administrative users can remove rows from this table that indicate their bad behavior.</p>
<p>To configure audit settings for <code>SYSDBA</code> and <code>SYSOPER</code> users:</p>
<ol>
<li>
<p>Set <a id="sthref1734"></a>the <code><a id="sthref1735"></a><a id="sthref1736"></a>AUDIT_SYS_OPERATIONS</code> initialization parameter to <code>TRUE</code>.</p>
<pre>
ALTER SYSTEM SET AUDIT_SYS_OPERATIONS=TRUE SCOPE=SPFILE;
</pre>
<p>This setting records the top-level operations directly issued by users who have connected to the database using the <code>SYSDBA</code> or <code>SYSOPER</code> privilege. It writes the audit records to the operation system audit trail. The SQL text of every statement is written to the <code>ACTION</code> field in the operating system audit trail record.</p>
</li>
<li>
<p>If you want to write system administrator activities to XML files, then configure the <code>AUDIT_TRAIL</code> initialization parameter to either <code>XML</code> or <code>XML, EXTENDED</code>.</p>
<p>For example:</p>
<pre>
ALTER SYSTEM SET AUDIT_TRAIL=XML, EXTENDED SCOPE=SPFILE;
</pre>
<p>In all operating systems, if you set <code>AUDIT_TRAIL</code> to either <code>XML</code> or <code>XML,EXTENDED</code>, then audit records are written as XML files in the directory specified by the <code>AUDIT_FILE_DEST</code> initialization parameter. By default, Oracle Database writes the audit records to operating system files.</p>
<p>See <a href="#CEGHHFBF">Table 9-2, "AUDIT_TRAIL Parameter Settings"</a> for more information about these settings. See also <a href="#CEGHGFBH">"Enabling or Disabling the Standard Audit Trail"</a>.</p>
</li>
<li>
<p>Restart the database.</p>
</li>
</ol>
<p>After you restart the database, Oracle Database audits all successful actions performed by <code>SYSDBA</code> and <code>SYSOPER</code> users, and writes these audit records<a id="sthref1737"></a> to the operating system audit trail, and not to the <code>SYS.AUD$</code> table.</p>
<p>In Windows, if you have set the <code>AUDIT_TRAIL</code> initialization parameter <code>OS</code>, then Oracle Database writes audit records as events to the Event Viewer log<a id="sthref1738"></a><a id="sthref1739"></a> file.</p>
<p><a href="#BCGEBDBB">Example 9-25</a> shows how to set the <code>AUDIT_SYS_OPERATIONS</code> initialization parameter to <code>TRUE</code>, which specifies that <code>SYS</code> is to be audited. The default setting for <code>AUDIT_SYS_OPERATIONS</code> is <code>FALSE</code>.</p>
<div id="DBSEG98424" class="example">
<p class="titleinexample"><a id="BCGEBDBB"></a>Example 9-25 Enabling Auditing for Users Who Connect as SYS</p>
<pre>
ALTER SYSTEM SET AUDIT_SYS_OPERATIONS=TRUE SCOPE=SPFILE;
</pre></div>
<!-- class="example" -->
<p>Afterwards, restart the database. Oracle Database then audits all successful actions performed by <code>SYSDBA</code> and <code>SYSOPER</code> users.</p>
<p>Oracle Database writes these audit records to the operating system<a id="sthref1740"></a> file that contains the audit trail, and not to the <code>SYS.AUD$</code> table.</p>
<p>In Windows, if you have set the <code>AUDIT_TRAIL</code> initialization parameter <code>OS</code>, Oracle Database writes audit records as events to the Event Viewer log<a id="sthref1741"></a><a id="sthref1742"></a> file. In all operating systems, if you set <code>AUDIT_TRAIL</code> to either <code>XML</code> or <code>XML,EXTENDED</code>, then audit records are written as XML files in the directory specified by the <code>AUDIT_FILE_DEST</code> initialization parameter.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
The<a id="sthref1743"></a> <code>$ORACLE_BASE/admin/$ORACLE_SID/adump</code> directory is the first default location used if the <code><a id="sthref1744"></a>AUDIT_FILE_DEST</code> initialization parameter is not set or does not point to a valid directory. If writing to that first default location fails or the database is closed, then Oracle Database uses the <code><span class="codeinlineitalic">$ORACLE_HOME/rdbms/<a id="sthref1745"></a>audit</span></code> directory as the backup default location. If that attempt fails, then the audited operation fails and a message is written to the alert log.
<p>When <code>AUDIT_TRAIL</code> <a id="sthref1746"></a>is set to <code>OS</code>, audit file names continue to be in the following form:</p>
<pre>
<span class="italic">$ORACLE_SID_short_form_process_name_processid_sequence_number</span>.aud
</pre>
<p>The sequence number starts from number 1.</p>
<p>For example, the short process name <code>ora</code> is used for dedicated server processes, and the names <code>s001</code>, <code>s002</code>, and so on are used for shared server processes.</p>
<p>When <code>AUDIT_TRAIL</code> is set to <code>XML</code> or <code>XML, EXTENDED</code>, the same audit file names have the extension <code>xml</code> instead of <code>aud</code>.</p>
</div>
<p>If you do not specify the <code>AUDIT_FILE_DEST</code> initialization parameter, then the default location is <code>$ORACLE_BASE/admin/$DB_UNIQUE_NAME/adump</code> in Linux and Solaris, and <code>$ORACLE_BASE\admin\$DB_UNIQUE_NAME\adump</code> in Windows. For other operating systems, refer to their audit trail documentation.</p>
<p>All <code>SYS</code>-issued SQL statements are audited indiscriminately and regardless of the setting of the <code><a id="sthref1747"></a>AUDIT_TRAIL</code> initialization parameter.</p>
<p>Consider the following <code>SYS</code> session:</p>
<pre>
CONNECT SYS/AS SYSDBA;
Enter password: <span class="italic">password</span>

ALTER SYSTEM FLUSH SHARED_POOL;
UPDATE salary SET base=1000 WHERE name='laurel';
</pre>
<p>When <code>SYS</code> auditing is enabled, both the <code>ALTER SYSTEM</code> and <code>UPDATE</code> statements are displayed in the operating system audit file, similar to the following output. (Be aware that this format may change in different Oracle Database releases.)</p>
<pre>
Tue May  5 04:53:37 2009 -07:00
LENGTH : '159'
ACTION :[7] 'CONNECT'
DATABASE USER:[1] '/'
PRIVILEGE :[6] 'SYSDBA'
CLIENT USER:[7] 'laurelh'
CLIENT TERMINAL:[5] 'pts/0'
STATUS:[1] '0'
DBID:[9] '561542328'
 
Tue May  5 04:53:40 2009 -07:00
LENGTH : '183'
ACTION :[30] 'ALTER SYSTEM FLUSH SHARED_POOL'
DATABASE USER:[1] '/'
PRIVILEGE :[6] 'SYSDBA'
CLIENT USER:[7] 'laurelh'
CLIENT TERMINAL:[5] 'pts/0'
STATUS:[1] '0'
DBID:[9] '561542328'
 
Tue May  5 04:53:49 2009 -07:00
LENGTH : '200'
ACTION :[47] 'UPDATE salary SET base=1000 WHERE name='laurel''
DATABASE USER:[1] '/'
PRIVILEGE :[6] 'SYSDBA'
CLIENT USER:[7] 'laurelh'
CLIENT TERMINAL:[5] 'pts/0'
STATUS:[1] '0'
DBID:[9] '561542328'
</pre>
<p>The brackets indicate the length of the value. For example, <code>PRIVILEGE</code> is set to <code>SYSDBA</code>, which uses 6 characters. In addition, the values are in single quotes for <code>SYS</code> and mandatory audit records.</p>
<p>Because of the superuser privileges available to users who connect as <code>SYSDBA</code>, Oracle recommends that database administrators rarely use this connection and only when necessary. Database administrators can usually perform normal day-to-day maintenance activity. These database administrators are typical database users with the <code>DBA</code> role, or have been granted privileges that are the equivalent of a <code>DBA</code> role (for example, <code>mydba</code> or <code>jr_dba</code>) that your organization customizes.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BCGHDJHC"></a>
<div id="DBSEG0063" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Managing Audit Trail Records</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGCBJIE">About Audit Records</a></p>
</li>
<li>
<p><a href="#CEGDGIAF">Managing the Database Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGGCFJF">Managing the Operating System Audit Trail</a></p>
</li>
</ul>
<a id="CEGCBJIE"></a>
<div id="DBSEG60621" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Audit Records</h3>
<p>Audit<a id="sthref1748"></a><a id="sthref1749"></a><a id="sthref1750"></a><a id="sthref1751"></a> records include information about the operation that was audited, the user who performed the operation<a id="sthref1752" href="#sthref1752" onclick='footdisplay(2,"Oracle Database records the actions of both database and nondatabase users in the \u003ccode\u003eSYS.AUD$\u003c/code\u003e and \u003ccode\u003eSYS.FGA_LOG$\u003c/code\u003e tables. The \u003ccode\u003eCLIENTID\u003ca target=\"auditing\" id=\"sthref1753\" name=\"sthref1753\"\u003e\u003c/a\u003e\u003c/code\u003e column in these tables records the name of the nondatabase user. The \u003ccode\u003eUSERID\u003c/code\u003e column in the \u003ccode\u003eSYS.AUD$\u003c/code\u003e table and the \u003ccode\u003eDBUID\u003c/code\u003e column of the \u003ccode\u003eSYS.FGA_LOG$\u003c/code\u003e store the database user account. For nondatabase users, the \u003ccode\u003eUSERID\u003c/code\u003e and \u003ccode\u003eDBUID\u003c/code\u003e columns store the database user account that was created to enable the nondatabase user access to the database. The \u003ccode\u003eDBA_AUDIT_TRAIL\u003c/code\u003e, \u003ccode\u003eDBA_FGA_AUDIT_TRAIL\u003c/code\u003e, and \u003ccode\u003eDBA_COMMON_AUDIT_TRAIL\u003c/code\u003e views store this information in the \u003ccode\u003eCLIENT_ID\u003c/code\u003e, \u003ccode\u003eUSERNAME\u003c/code\u003e, and \u003ccode\u003eDB_USER\u003c/code\u003e columns.")'><sup class="tablefootnote">Foot&nbsp;2&nbsp;</sup></a>, and the date and time of the operation. Depending on the type of auditing you choose, you can write audit records to data dictionary tables, called the <span class="bold">database audit trail</span>, or in operating system files, called the <span class="bold">operating system audit trail</span>.</p>
<p>If you choose to write audit records to the database audit trail, Oracle Database writes the audit records to the <code>SYS.AUD$</code> table for default and standard auditing, and to the <code>SYS.FGA_LOG$</code> table for fine-grained auditing. Both of these tables reside in the <code>SYSTEM</code> tablespace and are owned by the <code>SYS</code> schema. You can check the contents of these tables by querying the following data dictionary views:</p>
<ul>
<li>
<p><code>DBA_AUDIT_TRAIL</code> for the <code>SYS.AUD$</code> contents</p>
</li>
<li>
<p><code>DBA_FGA_AUDIT_TRAIL</code> for the <code>SYS.FGA_LOG$</code> contents</p>
</li>
<li>
<p><code>DBA_COMMON_AUDIT_TRAIL</code> for both <code>SYS.AUD$</code> and <code>SYS.FGA_LOG$</code> contents</p>
</li>
</ul>
<p><a href="#BCGIICFE">"Finding Information About Audited Activities"</a> describes more data dictionary views that you can use to view to contents of the <code>SYS.AUD$</code> and <code>SYS.FGA_LOG$</code> tables.</p>
<p>If you choose to write audit records to an operating system file, you can write them to either a text file or to an XML file. You can check the contents of an audit XML file by querying the <code>V$XML_AUDIT_TRAIL</code> data dictionary view.</p>
</div>
<!-- class="sect2" -->
<a id="CEGDGIAF"></a>
<div id="DBSEG0623" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Managing the Database Audit Trail</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#i1007854">Database Audit Trail Contents</a></p>
</li>
<li>
<p><a href="#i1006824">Controlling the Size of the Database Audit Trail</a></p>
</li>
<li>
<p><a href="#i1011521">Auditing the Database Audit Trail</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJACABDC">"Archiving and Purging the Database Audit Trail"</a></div>
<a id="i1007854"></a>
<div id="DBSEG98425" class="sect3">
<h4 class="sect3">Database Audit Trail Contents</h4>
<p><a id="sthref1754"></a><a id="sthref1755"></a>The database audit trail is a <a id="sthref1756"></a><a id="sthref1757"></a>pair of tables, <code>AUD$</code> (for standard auditing) and <code>FGA_LOG$</code> (for fine-grained auditing), in the <code>SYS</code> schema of each Oracle Database data dictionary. It records both standard and fine-grained audit activities. Several data dictionary views are provided to help you use the information in this table, such as <code>DBA_AUDIT_TRAIL</code>. <a href="#BCGIICFE">"Finding Information About Audited Activities"</a> lists all the auditing-related views.</p>
<p>The database audit trail <a id="sthref1758"></a><a id="sthref1759"></a>record contains different types of information, depending on the events audited and the auditing options set. For example, if you have set the <code>AUDIT_TRAIL</code> initialization parameter to <code>DB,</code> <code>EXTENDED</code> or <code>XML, EXTENDED</code>, then the <code>SQL_BIND</code> and <code>SQL_TEXT</code> columns show any SQL bind variables used for a SQL statement and SQL text that triggered the audit, respectively. For full details about the contents of these views, refer to <a class="olink REFRN" href="../../server.111/b28320/toc.htm"><span class="italic">Oracle Database Reference</span></a>. However, be aware that the format and columns of the <code>DBA_AUDIT_TRAIL</code> view may change across Oracle Database releases.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the <code>AUDIT_TRAIL</code> initialization parameter is set to <code>XML</code> or <code>XML, EXTENDED</code>, then Oracle Database sends standard audit records to operating system files in XML format. Because XML is a standard document format, many utilities are available to parse and analyze XML data.</div>
<p>If the database <a id="sthref1760"></a><a id="sthref1761"></a>destination for audit records becomes full or unavailable, and, therefore, unable to accept new records, then an audited action cannot complete. Instead, Oracle Database generates an error message and does not audit the action. You can control the size of the audit trail to make it more manageable. (In fact, Oracle strongly recommends that you do so.) See <a href="#i1006824">"Controlling the Size of the Database Audit Trail"</a> for more information. See also <a href="guidelines.htm#i1010870">"Keeping Audited Information Manageable"</a>.</p>
<p>The audit trail <a id="sthref1762"></a><a id="sthref1763"></a>does not store information about any data values that might be involved in the audited statement. For example, old and new data values of updated rows are not stored when an <code>UPDATE</code> statement is audited. However, you can perform this specialized type of auditing by using fine-grained auditing methods.</p>
<p>You can use the <a id="sthref1764"></a>Flashback Query feature to show the old and new values of the updated rows, subject to any auditing policy presently in force. The current policies are enforced even if the flashback is to an old query that was originally subject to a different policy. Current business access rules always apply.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CEGBAFIA">"Auditing Specific Activities with Fine-Grained Auditing"</a> for more information about methods of fine-grained auditing</p>
</li>
<li>
<p><a class="olink ADMIN01513" href="../../server.111/b28310/tables008.htm#ADMIN01513"><span class="italic">Oracle Database Administrator's Guide</span></a> for information about auditing table changes by using Flashback Transaction Query</p>
</li>
<li>
<p>Flashback entries in the table of system privileges listed in the <code>GRANT</code> SQL statement section of <a class="olink SQLRF01603" href="../../server.111/b28286/statements_9013.htm#SQLRF01603"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
</li>
</ul>
</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can find information about the log history by querying the<a id="sthref1765"></a> <code>V$LOGMNR_CONTENTS</code> data dictionary view. The <code>CLIENT_ID</code> column of this view records changes to the session client identifier. To query this view, you must have the <code>SELECT ANY TRANSACTION</code> system privilege.</div>
</div>
<!-- class="sect3" -->
<a id="i1006824"></a>
<div id="DBSEG98426" class="sect3">
<h4 class="sect3">Controlling the Size of the Database Audit Trail</h4>
<p><a id="sthref1766"></a>If the database audit trail is full and no more audit records can be inserted, then audited statements cannot be successfully run until you purge the audit trail. Oracle Database issues warnings to all users who issue audited statements. Therefore, you must control the growth and size of the audit trail.</p>
<p>When auditing is enabled and audit records are being generated, the audit trail file increases according to two factors:</p>
<ul>
<li>
<p>The number of audit options turned on</p>
</li>
<li>
<p>The frequency of execution of audited statements</p>
</li>
</ul>
<p>To control the growth of the audit trail, you can use the following methods:</p>
<ul>
<li>
<p><span class="bold">Enable and disable database auditing.</span> If it is enabled, then audit records are generated and stored in the audit trail. If it is disabled, then audit records are not generated. (Remember that some activities are always audited.)</p>
</li>
<li>
<p><span class="bold">Be selective about the audit options that are turned on.</span> If more selective auditing is performed, then useless or unnecessary audit information is not generated and stored in the audit trail. You can use fine-grained auditing to selectively audit only certain conditions.</p>
</li>
<li>
<p><span class="bold">Tightly control the ability to perform object auditing.</span> You can accomplish this in the following ways:</p>
<ul>
<li>
<p>A security administrator owns all objects and never grants the <code>AUDIT ANY</code> system privilege to any other user. Alternatively, all schema objects can belong to a schema for which the corresponding user does not have <code>CREATE SESSION</code> privilege.</p>
</li>
<li>
<p>All objects are contained in schemas that do not correspond to real database users (that is, the <code>CREATE SESSION</code> privilege is not granted to the corresponding user). The security administrator is the only user granted the <code>AUDIT ANY</code> system privilege.</p>
</li>
</ul>
<p>In both scenarios, a security administrator controls entirely object auditing.</p>
</li>
</ul>
<p>The<a id="sthref1767"></a> maximum size of the database audit trail tables (<code>AUD$</code> and <code>FGA_LOG$</code>) is determined by the default storage parameters of the <code>SYSTEM</code> tablespace, in which it is stored by default. If you are concerned that a too-large database audit trail will affect the <code>SYSTEM</code> table performance, then consider moving the database audit trail tables to a different tablespace.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Operating system-specific Oracle Database documentation for more information about managing the operating system audit trail when directing audit records to that location</div>
</div>
<!-- class="sect3" -->
<a id="i1011521"></a>
<div id="DBSEG98427" class="sect3">
<h4 class="sect3">Auditing the Database Audit Trail</h4>
<p>At<a id="sthref1768"></a> times an application must give <code>SYS.AUD$</code> access to regular users (non-<code>SYSDBA</code> users). For example, an audit report generator needs access to <code>AUD$</code> table to generate daily reports on possible violations. Also, many installations have a distinct auditor role to achieve separation of duty.</p>
<p>In this case, remember that DML statements such as <code>INSERT</code>, <code>UPDATE</code>, <code>MERGE</code>, and <code>DELETE</code> are always audited and recorded in the <code>SYS.AUD$</code> table. You can check these activities by querying the <code>DBA_AUDIT_TRAIL</code> and <code>DBA_COMMON_AUDIT_TRAIL</code> views.</p>
<p>If a user has <code>SELECT</code>, <code>UPDATE</code>, <code>INSERT</code>, and <code>DELETE</code> privileges on <code>SYS.AUD$</code> and executes a <code>SELECT</code> operation, then the audit trail will have a record of that operation. That is, <code>SYS.AUD$</code> will have a row identifying the <code>SELECT</code> action on itself, as for example row 1.</p>
<p>If a user later tries to delete this row from <code>SYS.AUD$</code>, then the <code>DELETE</code> operation succeeds, because the user has the privilege to perform this action. However, this <code>DELETE</code> action on <code>SYS.AUD$</code> is also recorded in the audit trail. Setting up this type of auditing acts as a safety feature, potentially revealing unusual or unauthorized actions.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code>DELETE</code>, <code>INSERT</code>, <code>UPDATE</code>, and <code>MERGE</code> operations on <code>SYS.AUD$</code> table are always audited, and such audit records are not allowed to be deleted.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="guidelines.htm#CHDBDBDG">"Auditing Sensitive Information"</a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGGCFJF"></a>
<div id="DBSEG98428" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Managing the Operating System Audit Trail</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGDEGHH">Specifying a Directory for the Operating System Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGHJCGB">If the Operating System Audit Trail Becomes Full</a></p>
</li>
</ul>
<a id="BCGDEGHH"></a>
<div id="DBSEG98429" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Specifying a Directory for the Operating System Audit Trail</h4>
<p>Use the <code><a id="sthref1769"></a>AUDIT_FILE_DEST</code> initialization <a id="sthref1770"></a>parameter to specify an operating system directory into which the audit trail<a id="sthref1771"></a> is written, when the <code>AUDIT_TRAIL</code> initialization parameter is set to <code>OS</code>, <code>XML</code>, or <code>XML, EXTENDED</code>. You must set <code>AUDIT_FILE_DEST</code> to a valid directory with permissions restricted to the owner of the Oracle software and the <code>DBA</code> group. Mandatory auditing information also goes into that directory, as do audit records for user <code>SYS</code> if the <code>AUDIT_SYS_OPERATIONS</code> initialization parameter is specified. You can change the <code><a id="sthref1772"></a>AUDIT_FILE_DEST</code> parameter by using the following <code>ALTER SYSTEM</code> statement, which enables the new destination to be effective for all subsequent sessions.</p>
<pre>
ALTER SYSTEM SET AUDIT_FILE_DEST = <span class="italic">directory_path</span> DEFERRED;
</pre>
<p>To find the current setting of the <code>AUDIT_FILE_DEST</code> parameter, issue the following command:</p>
<pre>
SHOW PARAMETER AUDIT_FILE_DEST
</pre>
<p>The <a id="sthref1773"></a><a id="sthref1774"></a>location of the operating system files depends on the following:</p>
<ul>
<li>
<p>If the database is not running and you have not set the <code>AUDIT_FILE_DEST</code> parameter, then the operating system files are placed in the first default location <code>$ORACLE_BASE/admin/$ORACLE_SID/adump</code> directory.</p>
</li>
<li>
<p>If the database is not running and the first default location, the <code>$ORACLE_BASE/admin/$ORACLE_SID/adump</code> directory, is inaccessible or cannot be written to, or the Oracle process cannot identify the environment variables, then the second default location, <code>$ORACLE_HOME/rdbms/audit</code> is used.</p>
</li>
<li>
<p>When the database is open and Oracle Database reads the initialization file (<code>init</code><code><span class="codeinlineitalic">SID</span></code><code>.ora</code>) for the database instance, the value of <code>AUDIT_FILE_DEST</code> parameter is used as the operating system audit file directory.</p>
</li>
<li>
<p>For UNIX and Solaris systems, all operating system files are written to a directory in the operating system. For Windows, the operating system text records are available from the Windows Event Viewer, but operating system XML files are available from an operating system directory, as explained in the preceding bulleted items.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Notes:</p>
For platforms other than UNIX, Solaris, and Windows, check the platform documentation to learn the correct target directory for operating system files.</div>
</div>
<!-- class="sect3" -->
<a id="BCGHJCGB"></a>
<div id="DBSEG98430" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">If the Operating System Audit Trail Becomes Full</h4>
<p>Be <a id="sthref1775"></a>aware that an operating system audit trail or file system, including the Windows Event Log, can become full, and therefore, unable to accept new records, including audit records directed to the operating system. In this case, Oracle Database cancels and rolls back the audited transactions, including operations that normally are always audited. (See <a href="#CEGJADDC">"Activities That Are Always Audited for All Platforms"</a>.) If the operating system audit trail becomes full, then set the <code>AUDIT_TRAIL</code> parameter to use database audit trail (such as <code>DB</code> or <code>DB, EXTENDED</code>) to prevent audited actions from completing if their audit records cannot be stored. You should periodically archive and purge the operating system audit file.</p>
<p>If you plan to use operating system auditing, then ensure that the operating system audit trail or the file system does not fill completely. Most operating systems provide administrators with sufficient information and warning to ensure this does not occur. If you configure auditing to use the database audit trail, you can prevent this potential loss of audit information. Oracle Database prevents audited events from occurring if the audit trail is unable to accept the database audit record for the statement.</p>
<p>Periodically archive and then purge the operating system audit trail. See <a href="#BCGJCCAE">"Archiving and Purging the Operating System Audit Trail"</a> for more information.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BCGJFEEE"></a>
<div id="DBSEG90934" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Archiving and Purging Audit Trail Records</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGDBEJC">About Archiving and Purging Audit Trail Records</a></p>
</li>
<li>
<p><a href="#CJACABDC">Archiving and Purging the Database Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGJCCAE">Archiving and Purging the Operating System Audit Trail</a></p>
</li>
</ul>
<a id="BCGDBEJC"></a>
<div id="DBSEG98431" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Archiving and Purging Audit Trail Records</h3>
<p>You <a id="sthref1776"></a>should periodically archive and then delete (purge) audit trail records, because the audit trail cannot accept new records if it grows too large. This section describes how to archive and then purge the database audit trail and the operating system audit trail.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Database audits all deletions from the audit trail, without exception. See <a href="#i1011521">"Auditing the Database Audit Trail"</a> and <a href="#BCGEHHCA">"Auditing SYS Administrative Users"</a>.</div>
</div>
<!-- class="sect2" -->
<a id="CJACABDC"></a>
<div id="DBSEG98432" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Archiving and Purging the Database Audit Trail</h3>
<p>You should periodically <a id="sthref1777"></a><a id="sthref1778"></a>archive and then purge the audit trail to prevent it from growing too large. This both frees audit trail space and facilitates the purging of the database audit trail.</p>
<p>In this section:</p>
<ul>
<li>
<p><a href="#BCGDDHAA">Archiving the Database Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGIHBAF">Purging the Database Audit Trail</a></p>
</li>
</ul>
<a id="BCGDDHAA"></a>
<div id="DBSEG98433" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Archiving the Database Audit Trail</h4>
<p>You can <a id="sthref1779"></a>create <a id="sthref1780"></a>an archive <a id="sthref1781"></a>of the database audit trail by using one of the following methods:</p>
<ul>
<li>
<p><span class="bold">Oracle Audit Vault.</span> You install Oracle Audit Vault separately from Oracle Database. For more information, see <a class="olink AVADM460" href="http://www.oracle.com/pls/topic/lookup?ctx=db111&amp;id=AVADM460"><span class="italic">Oracle Audit Vault Administrator's Guide</span></a>.</p>
</li>
<li>
<p><span class="bold">Oracle Data Warehouse.</span> Oracle Data Warehouse is automatically installed with Oracle Database. For more information, see <a class="olink WBINS" href="../../owb.111/b31280/toc.htm"><span class="italic">Oracle Warehouse Builder Installation and Administration Guide</span></a>.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGIHBAF"></a>
<div id="DBSEG98434" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Purging the Database Audit Trail</h4>
<p>After you complete the archive, you can manually <a id="sthref1782"></a>remove records from the database audit trail tables. However, be aware that the purge process may generate additional redo logs. Before you purge the database audit trail, you may need to tune online and archive redo log sizes to accommodate the additional records generated during the audit table purge process. For more information about tuning log files, see <a class="olink PFGRF" href="../../server.111/b28274/toc.htm"><span class="italic">Oracle Database Performance Tuning Guide</span></a> and <a class="olink ADMIN" href="../../server.111/b28310/toc.htm"><span class="italic">Oracle Database Administrator's Guide</span></a>.</p>
<p>You can remove a subset or all records from the database audit trail. For example, to delete audit records that were created later than the evening of February 29, 2008 but before March 29, 2008, enter the following statement:</p>
<pre>
DELETE FROM SYS.AUD$
   WHERE NTIMESTAMP# &gt; TO_TIMESTAMP ('29-FEB-08 09.07.59.907000 PM') AND
   NTIMESTAMP# &lt; TO_TIMESTAMP ('29-MAR-08 09.07.59.907000 PM');
</pre>
<p>To delete all audit records from the audit trail, enter one of the following statements:</p>
<pre>
DELETE FROM SYS.AUD$;

TRUNCATE TABLE SYS.AUD$;
</pre>
<p>Use the <code>DELETE</code> and <code>TRUNCATE TABLE</code> statements to purge the fine-grained audit trail as well. For example:</p>
<pre>
DELETE FROM SYS.FGA_LOG$;

TRUNCATE TABLE SYS.FGA_LOG$;
</pre>
<p>Only the user <code>SYS</code>, a user who has the <code>DELETE ANY TABLE</code> privilege, or a user to whom <code>SYS</code> granted the <code>DELETE</code> privilege on <code>SYS.AUD$</code> can delete records from the database audit trail.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the audit trail is full and connections are being audited (that is, if the <code>AUDIT SESSION</code> statement is set), then typical users cannot connect to the database because the associated audit record for the connection cannot be inserted into the audit trail. In this case, connect as <code>SYS</code> (operations by <code>SYS</code> are not audited), and make space available in the audit trail.</div>
<p>As <a id="sthref1783"></a>with any database table, after records are deleted from the database audit trail, the extents allocated for this table still exist.</p>
<p>If the database audit trail has many extents allocated for it, but many of them are not being used, then you can reduce the space allocated to the database audit trail by following these steps:</p>
<ol>
<li id="BCGEFDDC">
<p>Save (archive) the information currently in the database audit trail</p>
</li>
<li>
<p>Connect as a user with administrator privileges.</p>
</li>
<li>
<p>Truncate <code>SYS.AUD$</code> using the <code>TRUNCATE TABLE</code> statement.</p>
<p>For example:</p>
<pre>
TRUNCATE TABLE SYS.AUD$;
</pre></li>
<li>
<p>Reload archived audit trail records generated in Step <a href="#BCGEFDDC">1</a>.</p>
</li>
</ol>
<p>The <code>SYS.AUD$</code> table is allocated only as many extents as are necessary to maintain current audit trail records.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code>SYS.AUD$</code> is the only <code>SYS</code> object that should ever be directly modified.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGJCCAE"></a>
<div id="DBSEG98435" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Archiving and Purging the Operating System Audit Trail</h3>
<p>You should periodically archive and then purge the <a id="sthref1784"></a><a id="sthref1785"></a>operating system audit trail. Use your platform-specific operating system tools to create an archive of the operating system audit files.</p>
<p>Use the following methods to archive the operating system audit files:</p>
<ul>
<li>
<p><span class="bold">Use Oracle Audit Vault.</span> You install Oracle Audit Vault separately from Oracle Database. For more information, see <a class="olink AVADM460" href="http://www.oracle.com/pls/topic/lookup?ctx=db111&amp;id=AVADM460"><span class="italic">Oracle Audit Vault Administrator's Guide</span></a>.</p>
</li>
<li>
<p><span class="bold">Create tape or disc backups.</span> You can create a compressed file of the audit files, and then store it on tapes or discs. Consult your operating system documentation for more information.</p>
</li>
</ul>
<p>Afterwards, you should purge <a id="sthref1786"></a>(delete) the operating system audit records both to free audit trail space and to facilitate audit trail management. You find the location of these records by checking the <code>AUDIT_FILE_DEST</code> initialization parameter. For example:</p>
<pre>
SHOW PARAMETER AUDIT_FILE_DEST
</pre>
<p>The output is similar to the following:</p>
<pre>
NAME                 TYPE     VALUE
-------------------  -------  ---------------------------------------
audit_file_dest      string   /opt/oracle/app/oracle/admin/orcl/adump
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BCGIICFE"></a>
<div id="DBSEG0635" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Finding Information About Audited Activities</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGEJEBF">Using Data Dictionary Views to Find Information About the Audit Trail</a></p>
</li>
<li>
<p><a href="#i1007917">Using Audit Trail Views to Investigate Suspicious Activities</a></p>
</li>
<li>
<p><a href="#i1007930">Deleting the Audit Trail Views</a></p>
</li>
</ul>
<a id="CEGEJEBF"></a>
<div id="DBSEG98436" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using Data Dictionary Views to Find Information About the Audit Trail</h3>
<p><a id="sthref1787"></a><a id="sthref1788"></a><a id="sthref1789"></a><a href="#BCGJJAFI">Table 9-8</a> lists <a id="sthref1790"></a>data dictionary views that are provide auditing information. For detailed information about these views, see <a class="olink REFRN" href="../../server.111/b28320/toc.htm"><span class="italic">Oracle Database Reference.</span></a></p>
<div id="DBSEG98437" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref1791"></a><a id="BCGJJAFI"></a>Table 9-8 Data Dictionary Views That Display Information about the Database Audit Trail</p>
<table class="cellalignment1576" title="Data Dictionary Views That Display Information about the Database Audit Trail" summary="This table lists and describes the audit trail views that are created when you install the database." dir="ltr">
<thead>
<tr class="cellalignment1570">
<th class="cellalignment1577" id="r1c1-t42">View</th>
<th class="cellalignment1577" id="r1c2-t42">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r2c1-t42" headers="r1c1-t42">
<p><code>ALL_AUDIT_POLICIES</code></p>
</td>
<td class="cellalignment1578" headers="r2c1-t42 r1c2-t42">
<p>Describes the fine-grained auditing policies on the tables and views accessible to the current user</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r3c1-t42" headers="r1c1-t42">
<p><code>ALL_AUDIT_POLICY_COLUMNS</code></p>
</td>
<td class="cellalignment1578" headers="r3c1-t42 r1c2-t42">
<p>Describes the fine-grained auditing policy columns on the tables and views accessible to the current user.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r4c1-t42" headers="r1c1-t42">
<pre>
ALL_DEF_AUDIT_OPTS
</pre></td>
<td class="cellalignment1578" headers="r4c1-t42 r1c2-t42">
<p>Lists default object-auditing options that will be applied when objects are created</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r5c1-t42" headers="r1c1-t42">
<pre>
AUDIT_ACTIONS
</pre></td>
<td class="cellalignment1578" headers="r5c1-t42 r1c2-t42">
<p>Describes audit trail action type codes</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r6c1-t42" headers="r1c1-t42">
<pre>
DBA_AUDIT_EXISTS
</pre></td>
<td class="cellalignment1578" headers="r6c1-t42 r1c2-t42">
<p>Lists audit trail entries produced <code>BY AUDIT NOT EXISTS</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r7c1-t42" headers="r1c1-t42">
<pre>
DBA_AUDIT_OBJECT
</pre></td>
<td class="cellalignment1578" headers="r7c1-t42 r1c2-t42">
<p>Lists audit trail records for all objects in the system</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r8c1-t42" headers="r1c1-t42">
<p><code>DBA_AUDIT_POLICIES</code></p>
</td>
<td class="cellalignment1578" headers="r8c1-t42 r1c2-t42">
<p>Lists all the fine-grained auditing policies on the system</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r9c1-t42" headers="r1c1-t42">
<pre>
DBA_AUDIT_SESSION
</pre></td>
<td class="cellalignment1578" headers="r9c1-t42 r1c2-t42">
<p>Lists all audit trail records concerning <code>CONNECT</code> and <code>DISCONNECT</code></p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r10c1-t42" headers="r1c1-t42">
<p><code>DBA_AUDIT_POLICY_COLUMNS</code></p>
</td>
<td class="cellalignment1578" headers="r10c1-t42 r1c2-t42">
<p>Describes the fine-grained auditing policy columns on the tables and views throughout the database.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r11c1-t42" headers="r1c1-t42">
<p><code>DBA_AUDIT_STATEMENT</code></p>
</td>
<td class="cellalignment1578" headers="r11c1-t42 r1c2-t42">
<p>Lists audit trail records concerning <code>GRANT</code>, <code>REVOKE</code>, <code>AUDIT</code>, <code>NOAUDIT</code>, and <code>ALTER SYSTEM</code> statements throughout the database</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r12c1-t42" headers="r1c1-t42">
<p><code>DBA_AUDIT_TRAIL</code></p>
</td>
<td class="cellalignment1578" headers="r12c1-t42 r1c2-t42">
<p>Lists all standard audit trail entries in the <code>AUD$</code> table</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r13c1-t42" headers="r1c1-t42">
<p><code>DBA_COMMON_AUDIT_TRAIL</code></p>
</td>
<td class="cellalignment1578" headers="r13c1-t42 r1c2-t42">
<p>Combines standard and fine-grained audit log records, and includes <code>SYS</code> and mandatory audit records written in XML format</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r14c1-t42" headers="r1c1-t42">
<p><code>DBA_FGA_AUDIT_TRAIL</code></p>
</td>
<td class="cellalignment1578" headers="r14c1-t42 r1c2-t42">
<p>Lists audit trail records for fine-grained auditing.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r15c1-t42" headers="r1c1-t42">
<p><code>DBA_OBJ_AUDIT_OPTS</code></p>
</td>
<td class="cellalignment1578" headers="r15c1-t42 r1c2-t42">
<p>Displays the objects on which auditing options have been enabled</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r16c1-t42" headers="r1c1-t42">
<pre>
DBA_PRIV_AUDIT_OPTS
</pre></td>
<td class="cellalignment1578" headers="r16c1-t42 r1c2-t42">
<p>Describes current system privileges being audited across the system and by user</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r17c1-t42" headers="r1c1-t42">
<pre>
DBA_STMT_AUDIT_OPTS
</pre></td>
<td class="cellalignment1578" headers="r17c1-t42 r1c2-t42">
<p>Describes current statement auditing options across the system and by user</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r18c1-t42" headers="r1c1-t42">
<p><code>USER_AUDIT_OBJECT</code></p>
</td>
<td class="cellalignment1578" headers="r18c1-t42 r1c2-t42">
<p>Lists audit trail records for statements concerning objects that are accessible to the current user</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r19c1-t42" headers="r1c1-t42">
<p><code>USER_AUDIT_POLICIES</code></p>
</td>
<td class="cellalignment1578" headers="r19c1-t42 r1c2-t42">
<p>Describes the fine-grained auditing policy columns on the tables and views accessible to the current user.</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r20c1-t42" headers="r1c1-t42">
<p><code>USER_AUDIT_SESSION</code></p>
</td>
<td class="cellalignment1578" headers="r20c1-t42 r1c2-t42">
<p>Lists all audit trail records concerning connections and disconnections for the current user</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r21c1-t42" headers="r1c1-t42">
<pre>
USER_AUDIT_STATEMENT
</pre></td>
<td class="cellalignment1578" headers="r21c1-t42 r1c2-t42">
<p>Lists audit trail records concerning <code>GRANT</code>, <code>REVOKE</code>, <code>AUDIT</code>, <code>NOAUDIT</code>, and <code>ALTER SYSTEM</code> statements issued by the user</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r22c1-t42" headers="r1c1-t42">
<pre>
USER_AUDIT_TRAIL
</pre></td>
<td class="cellalignment1578" headers="r22c1-t42 r1c2-t42">
<p>Lists all standard audit trail entries in the <code>AUD$</code> table relating to current user</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r23c1-t42" headers="r1c1-t42">
<pre>
USER_OBJ_AUDIT_OPTS
</pre></td>
<td class="cellalignment1578" headers="r23c1-t42 r1c2-t42">
<p>Describes auditing options on all objects owned by the current user</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r24c1-t42" headers="r1c1-t42">
<pre>
STMT_AUDIT_OPTION_MAP
</pre></td>
<td class="cellalignment1578" headers="r24c1-t42 r1c2-t42">
<p>Describes information about auditing option type codes</p>
</td>
</tr>
<tr class="cellalignment1570">
<td class="cellalignment1578" id="r25c1-t42" headers="r1c1-t42">
<p><code>V$XML_AUDIT_TRAIL</code></p>
</td>
<td class="cellalignment1578" headers="r25c1-t42 r1c2-t42">
<p>Shows standard, fine-grained, SYS, and mandatory audit records written in XML format files.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect2" -->
<a id="i1007917"></a>
<div id="DBSEG98438" class="sect2">
<h3 class="sect2">Using Audit Trail Views to Investigate Suspicious Activities</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CHDFADGC">How Can You Use the Audit Trail to Investigate Suspicious Activities?</a></p>
</li>
<li>
<p><a href="#i1007158">Listing Active Statement Audit Options</a></p>
</li>
<li>
<p><a href="#i1007171">Listing Active Privilege Audit Options</a></p>
</li>
<li>
<p><a href="#i1007180">Listing Active Object Audit Options for Specific Objects</a></p>
</li>
<li>
<p><a href="#i1007197">Listing Default Object Audit Options</a></p>
</li>
<li>
<p><a href="#i1007208">Listing Audit Records</a></p>
</li>
<li>
<p><a href="#i1007212">Listing Audit Records for the AUDIT SESSION Option</a></p>
</li>
</ul>
<a id="CHDFADGC"></a>
<div id="DBSEG98516" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">How Can You Use the Audit Trail to Investigate Suspicious Activities?</h4>
<p><a id="sthref1792"></a>This section provides examples that demonstrate how to examine and interpret the information in the audit trail. Suppose you want to audit the database for the following suspicious activities:</p>
<ul>
<li>
<p>Passwords, tablespace settings, and quotas for some database users are altered without authorization.</p>
</li>
<li>
<p>A high number of deadlocks occur, most likely because of users acquiring exclusive table locks.</p>
</li>
<li>
<p>Rows are arbitrarily deleted from the <code>emp</code> table in <code>laurel</code>'s schema.</p>
</li>
</ul>
<p>You suspect the users <code>jward</code> and <code>swilliams</code> of several of these detrimental actions.</p>
<p>To investigate, you issue the following statements (in the order specified):</p>
<pre>
AUDIT ALTER, INDEX, RENAME ON DEFAULT;
CREATE VIEW laurel.employee AS SELECT * FROM laurel.emp;
AUDIT SESSION BY jward, swilliams;
AUDIT ALTER USER;
AUDIT LOCK TABLE
    BY ACCESS
    WHENEVER SUCCESSFUL;
AUDIT DELETE ON laurel.emp
    BY ACCESS
    WHENEVER SUCCESSFUL;
</pre>
<p>The following statements are subsequently issued by the user <code>jward</code>:</p>
<pre>
ALTER USER tsmith QUOTA 0 ON users;
DROP USER djones;
</pre>
<p>The following statements are subsequently issued by the user <code>swilliams</code>:</p>
<pre>
LOCK TABLE laurel.emp IN EXCLUSIVE MODE;
DELETE FROM laurel.emp WHERE mgr = 7698;
ALTER TABLE laurel.emp ALLOCATE EXTENT (SIZE 100K);
CREATE INDEX laurel.ename_index ON laurel.emp (ename);
CREATE PROCEDURE laurel.fire_employee (empid NUMBER) AS
  BEGIN
    DELETE FROM laurel.emp WHERE empno = empid;
  END;
/

EXECUTE laurel.fire_employee(7902);
</pre>
<p>The remaining sections within this section display the information relevant to your investigation that can be viewed using the audit trail views in the data dictionary:</p>
</div>
<!-- class="sect3" -->
<a id="i1007158"></a>
<div id="DBSEG98439" class="sect3">
<h4 class="sect3">Listing Active Statement Audit Options</h4>
<p><a id="sthref1793"></a>The following query returns all the statement audit options that are set:</p>
<pre>
SELECT * FROM DBA_STMT_AUDIT_OPTS;

USER_NAME               AUDIT_OPTION         SUCCESS         FAILURE
--------------------    -------------------  ----------      ---------
JWARD                   DROP ANY CLUSTER     BY ACCESS       BY ACCESS
SWILLIAMS               DEBUG PROCEDURE      BY ACCESS       BY ACCESS
MSEDLAK                 ALTER RESOURCE COST  BY ACCESS       BY ACCESS
</pre></div>
<!-- class="sect3" -->
<a id="i1007171"></a>
<div id="DBSEG98440" class="sect3">
<h4 class="sect3">Listing Active Privilege Audit Options</h4>
<p><a id="sthref1794"></a>The following query returns all the privilege audit options that are set:</p>
<pre>
SELECT * FROM DBA_PRIV_AUDIT_OPTS;

USER_NAME           PRIVILEGE            SUCCESS      FAILURE
------------------- -------------------- ---------    ----------
PSMITH              BY ACCESS            BY ACCESS
</pre></div>
<!-- class="sect3" -->
<a id="i1007180"></a>
<div id="DBSEG98441" class="sect3">
<h4 class="sect3">Listing Active Object Audit Options for Specific Objects</h4>
<p><a id="sthref1795"></a>The following query returns all audit options set for any objects with names that start with the characters <code>emp</code> and that are contained in the schema of <code>laurel</code>:</p>
<pre>
SELECT * FROM DBA_OBJ_AUDIT_OPTS
    WHERE OWNER = 'LAUREL' AND OBJECT_NAME LIKE 'EMP%';

OWNER   OBJECT_NAME OBJECT_TY ALT AUD COM DEL GRA IND INS LOC ...
-----   ----------- --------- --- --- --- --- --- --- --- --- ...
LAUREL EMP         TABLE     S/S -/- -/- A/- -/- S/S -/- -/- ...
LAUREL EMPLOYEE    VIEW      -/- -/- -/- A/- -/- S/S -/- -/- ...
</pre>
<p>The view returns information about all the audit options for the specified object. The information in the view is interpreted as follows:</p>
<ul>
<li>
<p>A dash (<code>-</code>) indicates that the audit option is not set.</p>
</li>
<li>
<p>The <code>S</code> character indicates that the audit option is set <code>BY ACCESS</code>.</p>
</li>
<li>
<p>The <code>A</code> character indicates that the audit option is set <code>BY ACCESS</code>.</p>
</li>
<li>
<p>Each audit option has two possible settings, <code>WHENEVER SUCCESSFUL</code> and <code>WHENEVER NOT SUCCESSFUL</code>, separated by a slash (<code>/</code>). For example, the <code>DELETE</code> audit option for <code>laurel.emp</code> is set <code>BY ACCESS</code> for successful <code>DELETE</code> statements and not set at all for unsuccessful <code>DELETE</code> statements.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="i1007197"></a>
<div id="DBSEG98442" class="sect3">
<h4 class="sect3">Listing Default Object Audit Options</h4>
<p><a id="sthref1796"></a>The following query returns all default object audit options:</p>
<pre>
SELECT * FROM ALL_DEF_AUDIT_OPTS;

ALT AUD COM DEL GRA IND INS LOC REN SEL UPD REF EXE FBK REA
--- --- --- --- --- --- --- --- --- --- --- --- --- --- ---
S/S -/- -/- -/- -/- S/S -/- -/- S/S -/- -/- -/- -/- /-  -/-
</pre>
<p>Notice that the view returns information similar to the <code>USER_OBJ_AUDIT_OPTS</code> and <code>DBA_OBJ_AUDIT_OPTS</code> views (refer to previous example).</p>
</div>
<!-- class="sect3" -->
<a id="i1007208"></a>
<div id="DBSEG98443" class="sect3">
<h4 class="sect3">Listing Audit Records</h4>
<p>The following query lists audit records generated for all objects in the database:</p>
<pre>
SELECT * FROM DBA_AUDIT_OBJECT;
</pre></div>
<!-- class="sect3" -->
<a id="i1007212"></a>
<div id="DBSEG98444" class="sect3">
<h4 class="sect3">Listing Audit Records for the AUDIT SESSION Option</h4>
<p>The following query lists audit information corresponding to the <code>AUDIT SESSION</code> statement audit option:</p>
<pre>
SELECT USERNAME, LOGOFF_TIME, LOGOFF_LREAD, LOGOFF_PREAD,
    LOGOFF_LWRITE, LOGOFF_DLOCK
    FROM DBA_AUDIT_SESSION;

USERNAME   LOGOFF_TI LOGOFF_LRE LOGOFF_PRE LOGOFF_LWR LOGOFF_DLO
---------- --------- ---------- ---------- ---------- ----------
JWARD      02-AUG-91         53          2         24          0 
SWILLIAMS  02-AUG-91       3337        256        630          0 
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1007930"></a>
<div id="DBSEG98445" class="sect2">
<h3 class="sect2">Deleting the Audit Trail Views</h3>
<p><a id="sthref1797"></a><a id="sthref1798"></a>If you disable auditing and no longer need the audit trail views, then delete them by connecting to the database as <code>SYS</code> and run the script<a id="sthref1799"></a><a id="sthref1800"></a><a id="sthref1801"></a> file <code>CATNOAUD.SQL</code>. The location of the <code>CATNOAUD.SQL</code> script is operating system-dependent.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" -->
<hr />
<br />
<p style="text-decoration:underline">Footnote Legend</p>
Footnote&nbsp;1:&nbsp;"Nondatabase users" refers to application users who are recognized in the database using the <code>CLIENT_IDENTIFIER</code> attribute. To audit this type of user, you can use a fine-grained audit policy. See <a href="#CEGBAFIA">"Auditing Specific Activities with Fine-Grained Auditing"</a> for more information.<br />
Footnote&nbsp;2:&nbsp;Oracle Database records the actions of both database and nondatabase users in the <code>SYS.AUD$</code> and <code>SYS.FGA_LOG$</code> tables. The <code>CLIENTID<a id="sthref1753"></a></code> column in these tables records the name of the nondatabase user. The <code>USERID</code> column in the <code>SYS.AUD$</code> table and the <code>DBUID</code> column of the <code>SYS.FGA_LOG$</code> store the database user account. For nondatabase users, the <code>USERID</code> and <code>DBUID</code> columns store the database user account that was created to enable the nondatabase user access to the database. The <code>DBA_AUDIT_TRAIL</code>, <code>DBA_FGA_AUDIT_TRAIL</code>, and <code>DBA_COMMON_AUDIT_TRAIL</code> views store this information in the <code>CLIENT_ID</code>, <code>USERNAME</code>, and <code>DB_USER</code> columns.<br /></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1569">
<tr>
<td class="cellalignment1578">
<table class="cellalignment1574">
<tr>
<td class="cellalignment1573"><a href="data_encryption.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1573"><a href="guidelines.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1581">
<table class="cellalignment1572">
<tr>
<td class="cellalignment1573"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1573"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1573"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1573"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1573"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1573"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
</body>
</html>
