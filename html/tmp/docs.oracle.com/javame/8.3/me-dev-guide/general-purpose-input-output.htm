<!DOCTYPE html>
<html lang="en-US" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<meta http-equiv="Content-Type" content="UTF-8" />
<title>General Purpose Input/Output</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)" />
<meta name="dcterms.created" content="2016-07-12T02:30:24Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Java ME Embedded Developer&rsquo;s Guide" />
<meta name="dcterms.identifier" content="E73093-02" />
<meta name="dcterms.isVersionOf" content="MEEDG" />
<link rel="Start" href="../index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="software-management.htm" title="Previous" type="text/html" />
<link rel="Next" href="working-i2c-bus.htm" title="Next" type="text/html" />
<link rel="alternate" href="MEEDG.pdf" title="PDF version" type="application/pdf" />
<link rel="alternate" href="MEEDG.epub" title="ePub version" type="application/epub+zip" />
<link rel="alternate" href="MEEDG.mobi" title="Mobipocket version" type="application/x-mobipocket-ebook" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a>
<header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-88D01C3E-A880-40A3-B69F-E49EF0BB7CB8"></a> <span id="PAGE" style="display:none;">8/18</span> <!-- End Header --><a id="MEEDG338"></a>
<h1 id="MEEDG-GUID-88D01C3E-A880-40A3-B69F-E49EF0BB7CB8" class="sect1"><span class="enumeration_chapter">5</span> General Purpose Input/Output</h1>
<div>
<p>This chapter describes the General Purpose Input/Output (GPIO) functionality in the Oracle Java ME Embedded product. GPIO typically refers a generic pin on an embedded board whose behavior, including whether it is an input or output pin, can be programmed by the user at runtime.</p>
<p>GPIO pins are often lined up in rows. By design, they have no dedicated purpose, and are used by programmers for a wide variety of tasks. For example:</p>
<ul style="list-style-type: disc;">
<li>
<p>GPIO pins can be <span class="italic">enabled</span> or <span class="italic">disabled</span>.</p>
</li>
<li>
<p>GPIO pins can be configured to be <span class="italic">input</span> or <span class="italic">output</span>.</p>
</li>
<li>
<p>Input values are readable, often with a 1 representing a high voltage, and a 0 representing a low voltage.</p>
</li>
<li>
<p>Input GPIO pins can be used as "interrupt" lines, which allow a peripheral board connected via multiple pins to signal to the primary embedded board that it requires attention.</p>
</li>
<li>
<p>Output pin values are both readable and writable.</p>
</li>
</ul>
<div class="infoboxnotewarn" id="GUID-88D01C3E-A880-40A3-B69F-E49EF0BB7CB8__GUID-1A2D3064-8236-46C8-A568-301B0B05935A">
<p class="notep1">WARNING:</p>
<p>Be sure to observe manufacturer's specifications and warnings carefully. For example, with the Raspberry Pi board, the voltage value that represents a "high" value on an input pin may be 3.3 volts (+3.3V). However, other pins may output 5 volts (+5V). Be sure to check the manufacturer's specifications to ensure that you are not placing too much voltage on an input GPIO line, as the board may not have an overvoltage protection.</p>
</div>
<p>GPIO pins have much greater functionality than this, but it is important to start with the basics.</p>
</div>
<a id="MEEDG340"></a><a id="MEEDG342"></a><a id="MEEDG343"></a><a id="MEEDG344"></a><a id="MEEDG345"></a><a id="MEEDG339"></a>
<div class="props_rev_3"><a id="GUID-D8BA6B7A-C87F-4D7C-BBDB-5EF696494821"></a>
<h2 id="MEEDG-GUID-D8BA6B7A-C87F-4D7C-BBDB-5EF696494821" class="sect2">Setting a GPIO Output Pin</h2>
<div>
<div class="section">
<p>For this example, you will need the following hardware:</p>
<div class="tblformal" id="GUID-D8BA6B7A-C87F-4D7C-BBDB-5EF696494821__GUID-F11DFC5A-9154-44EB-A2C6-89EE5BCA105B">
<hr />
<p class="titleintable">Table 5-1 Hardware for GPIO Example</p>
<table class="cellalignment8" title="Hardware for GPIO Example" summary="Hardware for GPIO Example">
<thead align="left">
<tr>
<th class="cellalignment11" id="d34310e85">Hardware</th>
<th class="cellalignment12" id="d34310e88">Where to Obtain</th>
</tr>
</thead>
<tbody>
<tr>
<td class="cellalignment11" id="d34310e93" headers="d34310e85">
<p>Raspberry Pi 512 MB Rev B, B+, or Raspberry Pi 2</p>
</td>
<td class="cellalignment12" headers="d34310e93 d34310e88">
<p>Various third-party sellers</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e100" headers="d34310e85">
<p>Multimeter</p>
</td>
<td class="cellalignment12" headers="d34310e100 d34310e88">
<p>Various. Sinometer DT830B used in the example.</p>
</td>
</tr>
</tbody>
</table>
<hr /></div>
<!-- class="inftblhruleinformal" -->
<p>Perhaps the simplest example of working with the GPIO functionality in the Oracle Java ME Embedded product is to set the high/low value of an arbitrary output pin and read its voltage with a multimeter. In this example, we set the value of GPIO pin 7 to alternate between high (3.3V) and low (0V) at intervals of 10 seconds and 5 seconds, respectively. The following example shows the source code.</p>
<pre dir="ltr">
import jdk.dio.UnavailablePeripheralException;
import jdk.dio.DeviceManager;
import jdk.dio.gpio.GPIOPin;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.microedition.midlet.MIDlet;

public class GPIOExample1 extends MIDlet {
 
    GPIOPin pin;
 
    public void startApp() {
 
        try {
 
            pin = (GPIOPin) DeviceManager.open(7);
            System.out.println("----------------------------------------");
            Thread.sleep(5000);
 
            for (int i = 0; i &lt; 20; i++) {
                System.out.println("Setting pin to true...");
                pin.setValue(true);
                Thread.sleep(10000);
                System.out.println("Setting pin to false...");
                pin.setValue(false);
                Thread.sleep(5000);
                System.out.println("----------------------------------------");
 
            }
 
        } catch (IOException ex) {
            Logger.getLogger(GPIOExample1.class.getName()).
                log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(GPIOExample1.class.getName()).
                log(Level.SEVERE, null, ex);
        }
    }
 
    public void pauseApp() {
    }
 
    public void destroyApp(boolean unconditional) {
 
        try {
            pin.close();
        } catch (IOException ex) {
            Logger.getLogger(GPIOExample1.class.getName()).
                log(Level.SEVERE, null, ex);
        }
 
    }
}
</pre>
<p>The following permissions must be added to the Application Descriptor of the IMlet so that it will execute without any security exceptions from the Oracle Java ME Embedded runtime.</p>
<div class="tblformal" id="GUID-D8BA6B7A-C87F-4D7C-BBDB-5EF696494821__GUID-6F633509-9836-4734-8BA5-DF71F3064B5F">
<hr />
<p class="titleintable">Table 5-2 Permissions for GPIO Example</p>
<table class="cellalignment8" title="Permissions for GPIO Example" summary="Permissions for GPIO Example">
<thead align="left">
<tr>
<th class="cellalignment25" id="d34310e123">Permission</th>
<th class="cellalignment26" id="d34310e126">Device</th>
<th class="cellalignment26" id="d34310e129">Operation</th>
</tr>
</thead>
<tbody>
<tr>
<td class="cellalignment25" id="d34310e134" headers="d34310e123">
<p><code>jdk.dio.DeviceMgmtPermission</code></p>
</td>
<td class="cellalignment26" headers="d34310e134 d34310e126">
<p><code>GPIO7:7</code></p>
</td>
<td class="cellalignment26" headers="d34310e134 d34310e129">
<p><code>open</code></p>
</td>
</tr>
</tbody>
</table>
<hr /></div>
<!-- class="inftblhruleinformal" -->
<p>Note that if you're using an IDE such as NetBeans as the development environment, you will need to access the project properties of the project and set API permissions under the application descriptor, as shown in <a href="general-purpose-input-output.htm#GUID-D8BA6B7A-C87F-4D7C-BBDB-5EF696494821__CHDGHHGI">Figure 5-1</a>.</p>
<div class="figure" id="GUID-D8BA6B7A-C87F-4D7C-BBDB-5EF696494821__CHDGHHGI">
<p class="titleinfigure">Figure 5-1 API Permissions in the Application Descriptor in NetBeans</p>
<img width="814" height="586" src="img/permissions1.jpg" alt="Description of Figure 5-1 follows" title="Description of Figure 5-1 follows" /><br />
<a href="img_text/permissions1.htm">Description of "Figure 5-1 API Permissions in the Application Descriptor in NetBeans"</a></div>
<!-- class="figure" -->
<p>After running the application, set your multimeter to read DC voltage with a maximum of 20V, then connect one of the leads of the multimeter to GPIO 7, and the other to GND (ground). As the application is running, note that the voltage that is read by the multimeter will jump from its low value of around 0V after a call to <code>pin.setValue(false)</code> to its high value of around 3.3V after a call to <code>pin.setValue(true)</code>. This is shown in <a href="general-purpose-input-output.htm#GUID-D8BA6B7A-C87F-4D7C-BBDB-5EF696494821__CHDCIFDG">Figure 5-2</a> and <a href="general-purpose-input-output.htm#GUID-D8BA6B7A-C87F-4D7C-BBDB-5EF696494821__CHDHICGF">Figure 5-3</a>.</p>
<div class="infoboxnotewarn" id="GUID-D8BA6B7A-C87F-4D7C-BBDB-5EF696494821__GUID-72973E25-3F48-4A82-88B1-CC5B03B8AE18">
<p class="notep1">WARNING:</p>
<p>Remember that the GPIO pin assignments on the Raspberry Pi do <span class="italic">not</span> match the pin numbers on the board. For example, GPIO 7 is <span class="italic">not</span> mapped to pin 7, but instead pin 26. See Appendix A (or the hardware-appropriate Getting Started Guide) for the pin assignments for the target boards of the Oracle Java ME Embedded software.</p>
</div>
<div class="figure" id="GUID-D8BA6B7A-C87F-4D7C-BBDB-5EF696494821__CHDCIFDG">
<p class="titleinfigure">Figure 5-2 Raspberry Pi Pin 7 with Low (0V) Voltage</p>
<img width="641" height="612" src="img/example1off.jpg" alt="Description of Figure 5-2 follows" title="Description of Figure 5-2 follows" /><br />
<a href="img_text/example1off.htm">Description of "Figure 5-2 Raspberry Pi Pin 7 with Low (0V) Voltage"</a></div>
<!-- class="figure" -->
<div class="figure" id="GUID-D8BA6B7A-C87F-4D7C-BBDB-5EF696494821__CHDHICGF">
<p class="titleinfigure">Figure 5-3 Raspberry Pi Pin 7 with High (3.3V) Voltage</p>
<img width="629" height="629" src="img/example1on.jpg" alt="Description of Figure 5-3 follows" title="Description of Figure 5-3 follows" /><br />
<a href="img_text/example1on.htm">Description of "Figure 5-3 Raspberry Pi Pin 7 with High (3.3V) Voltage"</a></div>
<!-- class="figure" --></div>
<!-- class="section" --></div>
</div>
<a id="MEEDG347"></a><a id="MEEDG348"></a><a id="MEEDG349"></a><a id="MEEDG350"></a><a id="MEEDG346"></a>
<div class="props_rev_3"><a id="GUID-5CDD398B-97FD-4684-AAD6-5B0CAA040825"></a>
<h2 id="MEEDG-GUID-5CDD398B-97FD-4684-AAD6-5B0CAA040825" class="sect2">Working with a Breadboard</h2>
<div>
<div class="section">
<p>When prototyping circuits, it is often helpful to have a way of connecting wires without having to perform soldering. In some cases, if there are only a few connections, you can use jumper wires. However, when layout out more complex circuits, it's helpful to use a breadboard. A typical breadboard is shown in <a href="general-purpose-input-output.htm#GUID-5CDD398B-97FD-4684-AAD6-5B0CAA040825__CHDDHJIF">Figure 5-4</a>.</p>
<div class="figure" id="GUID-5CDD398B-97FD-4684-AAD6-5B0CAA040825__CHDDHJIF">
<p class="titleinfigure">Figure 5-4 A Typical Breadboard</p>
<img width="800" height="533" src="img/breadboard.jpg" alt="Description of Figure 5-4 follows" title="Description of Figure 5-4 follows" /><br />
<a href="img_text/breadboard.htm">Description of "Figure 5-4 A Typical Breadboard"</a></div>
<!-- class="figure" -->
<p>A breadboard consists of a large number of holes, each of which are wired together on the bottom using a standardized pattern, such as the one shown in <a href="general-purpose-input-output.htm#GUID-5CDD398B-97FD-4684-AAD6-5B0CAA040825__CHDCADIH">Figure 5-5</a>. Note that the two columns on both the left and the right of the breadboard are wired vertically--these provide power (+) and ground (-) connections that can be tapped into to. The horizontal rows on either side of the center line, on the other hand, are used to create circuits. Circuits can be created using small wires with metal tips on each end that can "plug into" the holes.</p>
<div class="figure" id="GUID-5CDD398B-97FD-4684-AAD6-5B0CAA040825__CHDCADIH">
<p class="titleinfigure">Figure 5-5 Wiring Pattern for a Typical Breadboard</p>
<img width="320" height="420" src="img/bboardwiring.jpg" alt="Description of Figure 5-5 follows" title="Description of Figure 5-5 follows" /><br />
<a href="img_text/bboardwiring.htm">Description of "Figure 5-5 Wiring Pattern for a Typical Breadboard"</a></div>
<!-- class="figure" -->
<p>For the Raspberry Pi, we can connect the GPIO pins on the Pi to a breadboard using a device called a T-Cobbler Extension Board. This device attaches a ribbon cable to the GPIO pins, which in turn connects to the T-cobbler board. The T-cobbler board is then inserted into the top of the breadboard, as shown in <a href="general-purpose-input-output.htm#GUID-5CDD398B-97FD-4684-AAD6-5B0CAA040825__CHDBBEHB">Figure 5-6</a>.</p>
<div class="figure" id="GUID-5CDD398B-97FD-4684-AAD6-5B0CAA040825__CHDBBEHB">
<p class="titleinfigure">Figure 5-6 T-Cobbler Extension Board for the Raspberry Pi</p>
<img width="549" height="766" src="img/tcobbler.jpg" alt="Description of Figure 5-6 follows" title="Description of Figure 5-6 follows" /><br />
<a href="img_text/tcobbler.htm">Description of "Figure 5-6 T-Cobbler Extension Board for the Raspberry Pi"</a></div>
<!-- class="figure" -->
<p>Once connected to the Pi, you can use any of the holes running along the red stripe on the left side of the breadboard to provide +3.3 volts (3V3), or any of the holes running along the red stripe on the right side of the breadboard to provide +5 volts (5V0). In addition, any of the holes running along the blue stripes on either side of the board connect to the ground (GND) on the Raspberry Pi.</p>
<p>The GPIO pins on the Raspberry Pi map to the pins on the T-cobbler (and hence the respective horizontal rows on the breadboard) as shown in <a href="general-purpose-input-output.htm#GUID-D8BA6B7A-C87F-4D7C-BBDB-5EF696494821__CHDHICGF">Figure 5-3</a>.</p>
<div class="tblformal" id="GUID-5CDD398B-97FD-4684-AAD6-5B0CAA040825__GUID-13E4752F-2B19-44B6-BD44-567B66DECE95">
<hr />
<p class="titleintable">Table 5-3 Broadcom GPIO to T-Cobbler Conversion</p>
<table class="cellalignment8" title="Broadcom GPIO to T-Cobbler Conversion" summary="GPIO to T-Cobbler">
<thead align="left">
<tr>
<th class="cellalignment11" id="d34310e251">GPIO (Pi Pin Number)</th>
<th class="cellalignment12" id="d34310e254">Alternate Name</th>
</tr>
</thead>
<tbody>
<tr>
<td class="cellalignment11" id="d34310e259" headers="d34310e251">
<p>2 (Pin 3)</p>
</td>
<td class="cellalignment12" headers="d34310e259 d34310e254">
<p>SDA</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e266" headers="d34310e251">
<p>3 (Pin 5)</p>
</td>
<td class="cellalignment12" headers="d34310e266 d34310e254">
<p>SCL</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e273" headers="d34310e251">
<p>4 (Pin 7)</p>
</td>
<td class="cellalignment12" headers="d34310e273 d34310e254">
<p>P7</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e280" headers="d34310e251">
<p>7 (Pin 26)</p>
</td>
<td class="cellalignment12" headers="d34310e280 d34310e254">
<p>CE1</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e287" headers="d34310e251">
<p>8 (Pin 24)</p>
</td>
<td class="cellalignment12" headers="d34310e287 d34310e254">
<p>CE0</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e294" headers="d34310e251">
<p>9 (Pin 21)</p>
</td>
<td class="cellalignment12" headers="d34310e294 d34310e254">
<p>MISO</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e301" headers="d34310e251">
<p>10 (Pin 19)</p>
</td>
<td class="cellalignment12" headers="d34310e301 d34310e254">
<p>MOSI</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e308" headers="d34310e251">
<p>11 (Pin 23)</p>
</td>
<td class="cellalignment12" headers="d34310e308 d34310e254">
<p>SCLK</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e315" headers="d34310e251">
<p>14 (Pin 8)</p>
</td>
<td class="cellalignment12" headers="d34310e315 d34310e254">
<p>TXD</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e322" headers="d34310e251">
<p>15 (Pin 10)</p>
</td>
<td class="cellalignment12" headers="d34310e322 d34310e254">
<p>RXD</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e329" headers="d34310e251">
<p>18 (Pin 12)</p>
</td>
<td class="cellalignment12" headers="d34310e329 d34310e254">
<p>P1</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e337" headers="d34310e251">
<p>22 (Pin 15)</p>
</td>
<td class="cellalignment12" headers="d34310e337 d34310e254">
<p>P3</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e344" headers="d34310e251">
<p>23 (Pin 16)</p>
</td>
<td class="cellalignment12" headers="d34310e344 d34310e254">
<p>P4</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e351" headers="d34310e251">
<p>24 (Pin 18)</p>
</td>
<td class="cellalignment12" headers="d34310e351 d34310e254">
<p>P5</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e358" headers="d34310e251">
<p>25 (Pin 22)</p>
</td>
<td class="cellalignment12" headers="d34310e358 d34310e254">
<p>P6</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e365" headers="d34310e251">
<p>27 (Pin 13)</p>
</td>
<td class="cellalignment12" headers="d34310e365 d34310e254">
<p>P2</p>
</td>
</tr>
</tbody>
</table>
<hr /></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" --></div>
</div>
<a id="MEEDG352"></a><a id="MEEDG353"></a><a id="MEEDG354"></a><a id="MEEDG351"></a>
<div class="props_rev_3"><a id="GUID-B1EE20B3-F619-4279-9EF4-D335B68897A6"></a>
<h2 id="MEEDG-GUID-B1EE20B3-F619-4279-9EF4-D335B68897A6" class="sect2">Blinking an LED</h2>
<div>
<div class="section">
<p>We can use the code in the first example to create a small circuit on the breadboard that turns on an off a light-emitting diode (LED). For this example, you will need the following equipment.</p>
<div class="tblformal" id="GUID-B1EE20B3-F619-4279-9EF4-D335B68897A6__GUID-ABB97D10-5E92-45BE-B509-E3632C652CAC">
<hr />
<p class="titleintable">Table 5-4 Equipment Needed for Blinking LED Example</p>
<table class="cellalignment8" title="Equipment Needed for Blinking LED Example" summary="Equipment Needed">
<thead align="left">
<tr>
<th class="cellalignment11" id="d34310e404">Hardware</th>
<th class="cellalignment12" id="d34310e407">Where to Obtain</th>
</tr>
</thead>
<tbody>
<tr>
<td class="cellalignment11" id="d34310e412" headers="d34310e404">
<p>LED</p>
</td>
<td class="cellalignment12" headers="d34310e412 d34310e407">
<p>Any electronics store</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e419" headers="d34310e404">
<p>1000 ohm resistor</p>
</td>
<td class="cellalignment12" headers="d34310e419 d34310e407">
<p>Any electronics store</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e426" headers="d34310e404">
<p>T-Cobbler and Breadboard</p>
</td>
<td class="cellalignment12" headers="d34310e426 d34310e407">
<p>Adafruit</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e433" headers="d34310e404">
<p>Jumper Wires (Male to Male)</p>
</td>
<td class="cellalignment12" headers="d34310e433 d34310e407">
<p>Adafruit</p>
</td>
</tr>
</tbody>
</table>
<hr /></div>
<!-- class="inftblhruleinformal" -->
<p>Use the breadboard to connect one end of a 1000-ohm resistor to a row that connects to GPIO7, which is marked on the T-Cobbler by CE1. Plug the other end of the 1000-ohm resistor into an unused row further down the breadboard. Then, run an LED from that row an adjacent row, and then connect that row to the ground (GND). The circuit should look similar to the schematic in <a href="general-purpose-input-output.htm#GUID-B1EE20B3-F619-4279-9EF4-D335B68897A6__CHDFEHEJ">Figure 5-7</a>.</p>
<div class="figure" id="GUID-B1EE20B3-F619-4279-9EF4-D335B68897A6__CHDFEHEJ">
<p class="titleinfigure">Figure 5-7 Schematic for Wiring an LED to GPIO 7</p>
<img width="300" height="128" src="img/led-schematic.jpg" alt="Description of Figure 5-7 follows" title="Description of Figure 5-7 follows" /><br />
<a href="img_text/led-schematic.htm">Description of "Figure 5-7 Schematic for Wiring an LED to GPIO 7"</a></div>
<!-- class="figure" -->
<p>When completed, you should have a prototype that looks like <a href="general-purpose-input-output.htm#GUID-B1EE20B3-F619-4279-9EF4-D335B68897A6__CHDEECCD">Figure 5-8</a>. Run the first example again, and you should see the LED light blinking off an on whenever the <code>setValue(true)</code> call is made on the <code>GPIOPin</code> object.</p>
<div class="infobox-note" id="GUID-B1EE20B3-F619-4279-9EF4-D335B68897A6__GUID-1B29F5C9-0548-402B-8EFE-E61124F5B5DF">
<p class="notep1">Note:</p>
<p>Remember that an LED is a <span class="italic">diode</span>, which by definition only allows current to travel one way through it. If your LED does not light up when the voltage is applied, try flipping the connections so that the current travels the reverse direction through the diode.</p>
</div>
<div class="figure" id="GUID-B1EE20B3-F619-4279-9EF4-D335B68897A6__CHDEECCD">
<p class="titleinfigure">Figure 5-8 Wiring an LED to GPIO Pin 7</p>
<img width="495" height="671" src="img/blinkingled.jpg" alt="Description of Figure 5-8 follows" title="Description of Figure 5-8 follows" /><br />
<a href="img_text/blinkingled.htm">Description of "Figure 5-8 Wiring an LED to GPIO Pin 7"</a></div>
<!-- class="figure" --></div>
<!-- class="section" --></div>
</div>
<a id="MEEDG356"></a><a id="MEEDG358"></a><a id="MEEDG359"></a><a id="MEEDG355"></a>
<div class="props_rev_3"><a id="GUID-3A8A7A51-6718-42C5-8F23-452100DEDB9A"></a>
<h2 id="MEEDG-GUID-3A8A7A51-6718-42C5-8F23-452100DEDB9A" class="sect2">Testing Output and Input Pins</h2>
<div>
<div class="section">
<p>Our next GPIO example will take the output voltage from one pin and redirect it back to an adjacent input pin, while creating a listener on the input pin that reacts accordingly. For this example, you will need the following hardware:</p>
<div class="tblformal" id="GUID-3A8A7A51-6718-42C5-8F23-452100DEDB9A__GUID-B3D4D16D-9F8C-4E51-A1A2-2C8F4062EFDA">
<hr />
<p class="titleintable">Table 5-5 Hardware for Example 1-1</p>
<table class="cellalignment8" title="Hardware for Example 1-1" summary="Hardware for Example 1-1">
<thead align="left">
<tr>
<th class="cellalignment11" id="d34310e501">Hardware</th>
<th class="cellalignment12" id="d34310e504">Where to Obtain</th>
</tr>
</thead>
<tbody>
<tr>
<td class="cellalignment11" id="d34310e509" headers="d34310e501">
<p>Raspberry Pi 512 MB Rev B</p>
</td>
<td class="cellalignment12" headers="d34310e509 d34310e504">
<p>Various third-party sellers</p>
</td>
</tr>
<tr>
<td class="cellalignment11" id="d34310e516" headers="d34310e501">
<p>Multimeter</p>
</td>
<td class="cellalignment12" headers="d34310e516 d34310e504">
<p>Various. Sinometer DT830B used in the example.</p>
</td>
</tr>
</tbody>
</table>
<hr /></div>
<!-- class="inftblhruleinformal" -->
<p>Here, we use GPIO 8 and 11 on the Raspberry Pi due to their proximity to each other. These pins are right next to GPIO 7 and GND, which was used in the previous example. In the example below, we've added a listener to an input pin that will trigger whenever the input voltage changes in both directions (high-to-low and low-to-high).</p>
<pre dir="ltr">
import jdk.dio.UnavailablePeripheralException;
import jdk.dio.DeviceManager;
import jdk.dio.gpio.GPIOPin;
import jdk.dio.gpio.PinEvent;
import jdk.dio.gpio.PinListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.microedition.midlet.MIDlet;
 
public class GPIOExample2 extends MIDlet {
 
    GPIOPin pin8;
    GPIOPin pin11;
 
    public void startApp() {
 
        try {
 
            pin8 = (GPIOPin) DeviceManager.open(8);   //  Output pin by default
            pin11 = (GPIOPin) DeviceManager.open(11);  //  Input pin by default
            pin11.setInputListener(new MyPinListener());
 
            System.out.println("----------------------------------------");
            Thread.sleep(5000);
 
            for (int i = 0; i &lt; 20; i++) {
                System.out.println("Setting pin 8 to true...");
                pin8.setValue(true);
                Thread.sleep(10000);
                System.out.println("Setting pin 8 to false...");
                pin8.setValue(false);
                Thread.sleep(5000);
                System.out.println("----------------------------------------");
 
            }
 
        } catch (IOException ex) {
            Logger.getLogger(GPIOExample2.class.getName()).
                log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(GPIOExample2.class.getName()).
                log(Level.SEVERE, null, ex);
        }
    }
 
    public void pauseApp() {
    }
 
    public void destroyApp(boolean unconditional) {
 
        try {
            pin8.close();
            pin11.close();
        } catch (IOException ex) {
            Logger.getLogger(GPIOExample2.class.getName()).
                log(Level.SEVERE, null, ex);
        }
 
    }
    
    class MyPinListener implements PinListener {
 
        @Override
        public void valueChanged(PinEvent event) {
            try {
                System.out.println("Pin listener for pin 11 has been called!");
                System.out.println("Pin 11 is now " + pin11.getValue());
            } catch (IOException ex) {
                Logger.getLogger(GPIOExample2.class.getName()).
                    log(Level.SEVERE, null, ex);
            }
        }
        
    }
}
</pre>
<p><a href="general-purpose-input-output.htm#GUID-3A8A7A51-6718-42C5-8F23-452100DEDB9A__CHDJJGED" title="Permissions for Example 1-1">Table 5-6</a> shows the permission that must be added to the Application Descriptor of the IMlet so that it will execute without any security exceptions from the Oracle Java ME Embedded runtime.</p>
<div class="tblformal" id="GUID-3A8A7A51-6718-42C5-8F23-452100DEDB9A__CHDJJGED">
<hr />
<p class="titleintable">Table 5-6 Permissions for Example 1-2</p>
<table class="cellalignment8" title="Permissions for Example 1-2" summary="Permissions for Example 1-1">
<thead align="left">
<tr>
<th class="cellalignment25" id="d34310e543">Permission</th>
<th class="cellalignment26" id="d34310e546">Device</th>
<th class="cellalignment26" id="d34310e549">Operation</th>
</tr>
</thead>
<tbody>
<tr>
<td class="cellalignment25" id="d34310e554" headers="d34310e543">
<p><code>jdk.dio.DeviceMgmtPermission</code></p>
</td>
<td class="cellalignment26" headers="d34310e554 d34310e546">
<p><code>*:*</code></p>
</td>
<td class="cellalignment26" headers="d34310e554 d34310e549">
<p><code>open</code></p>
</td>
</tr>
</tbody>
</table>
<hr /></div>
<!-- class="inftblhruleinformal" -->
<p>After running the application, either connect one of the leads of the multimeter to the GPIO 8 pin and the other to the GPIO 11 pin of the Raspberry Pi (or create a compatible circuit on a breadboard). Set your multimeter to read DCV with a maximum of 200 mV. As the application is running, note that the voltage that is read by the multimeter will jump from its low value to its high voltage, although the voltages will be much smaller than that from GPIO 7. Try disconnecting the lead from GPIO 11 momentarily and reconnecting it when GPIO 8 is high. The output of the program should reflect that the listener is called both when the lead is released, and when it is reconnected.</p>
<div class="infoboxnotewarn" id="GUID-3A8A7A51-6718-42C5-8F23-452100DEDB9A__GUID-BE56A027-8B43-4F0B-AF12-338CCDC85094">
<p class="notep1">WARNING:</p>
<p>Remember that the GPIO pin assignments on the Raspberry Pi do <span class="italic">not</span> match the pin numbers on the board. For example, GPIO 8 is <span class="italic">not</span> mapped to pin 8, but instead pin 24. Likewise, GPIO 11 is mapped to pin 23. See Appendix A and Appendix B for the pin assignments for the target boards of the Oracle Java ME Embedded software.</p>
</div>
<p>The output of the application when running in NetBeans is shown in <a href="general-purpose-input-output.htm#GUID-3A8A7A51-6718-42C5-8F23-452100DEDB9A__CHDFJJEE">Figure 5-9</a>.</p>
<div class="figure" id="GUID-3A8A7A51-6718-42C5-8F23-452100DEDB9A__CHDFJJEE">
<p class="titleinfigure">Figure 5-9 Output of Example 1-2</p>
<img width="664" height="271" src="img/example2output.jpg" alt="Description of Figure 5-9 follows" title="Description of Figure 5-9 follows" /><br />
<a href="img_text/example2output.htm">Description of "Figure 5-9 Output of Example 1-2"</a></div>
<!-- class="figure" --></div>
<!-- class="section" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1">
<tr>
<td class="cellalignment16">
<table class="cellalignment6">
<tr>
<td class="cellalignment5"><a href="software-management.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5"><a href="working-i2c-bus.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2012, 2016, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment18">
<table class="cellalignment4">
<tr>
<td class="cellalignment5"><a href="../index.html"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
