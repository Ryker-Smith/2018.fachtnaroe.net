<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.72 [en] (Win95; U) [Netscape]">
   <meta name="Author" content="Eric Phelps">
   <meta name="Description" content="Sample VBScript for the Windows Scripting Host">
   <title>Windows Scripting</title>
</head>
<body text="#000000" bgcolor="#FFFFFF" link="#0000EE" vlink="#551A8B" alink="#FF0000">
&nbsp;
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH="100%" >
<tr>
<td ALIGN=LEFT VALIGN=BOTTOM><a href="~webspace.html"><img SRC="duck.gif" BORDER=0 height=82 width=159></a></td>

<td>
<center>
<h1>
Windows Scripting</h1></center>
</td>
</tr>

<tr BGCOLOR="#666699">
<td BGCOLOR="#666699">&nbsp;</td>

<td WIDTH="100%">&nbsp;</td>
</tr>

<tr>
<td ALIGN=LEFT VALIGN=TOP><img SRC="114x50.gif" height=50 width=114></td>

<td>
<center><i>How to do it. Well, how about what I do with it? You do what
you want.</i></center>
</td>
</tr>
</table>

<p>If you want to write ASP or web pages with scripting, you'll have lots
of friends. But if you want to write utilities using the Windows Scripting
Host, you're on your own. There aren't many good sources of help out there.
So let me offer what I have. By the way -- all I do is Visual Basic Scripting.
No JavaScript here.
<p>First, let me show you my favorite links.
<table BORDER COLS=2 WIDTH="100%" >
<tr ALIGN=LEFT VALIGN=TOP>
<td><b><font color="#993366"><font size=+2>Links:</font></font></b>
<br><b><a href="http://msdn.microsoft.com/scripting/windowshost/default.htm">Getting
Scripting</a></b> This is the page you start at to get scripting if you
don't have it. Sure, if you have Windows98/NTSP4 or newer, you already
have it on your CDROM or hard drive. But getting it from here means you
get the latest version. It's worth the download if you have even a slim
doubt. Getting the scripting host and VBScript/JScript engines is easy
(they're bundled), but you'll have to crawl through the links to find their
three separate help files and the separate sample code collection.
<br><b><a href="http://www.microsoft.com/trainingandservices/content/downloads/1080_web.exe">Learning
Scripting</a></b> Microsoft's downloadable html-based course. How to use
scripting in all three modes: ASP, HTML, and my favorite, WSH (the Windows
Scripting Host). It's aimed at scripting version 1, but it's a good starting
point. Get it before it disappears!
<br><b><a href="http://wsh.glazier.co.nz/">Ian Morrish</a></b> Not just
any scripting, he's exclusively a Windows Scripting Host kind of guy!
<br><a href="http://cwashington.netreach.net/"><b>Clarence Washington Jr</b>.</a>
Every kind of scripting available under Windows. Kixtart, Perl, DOS, VBS,
JavaScript, and yes, WSH.
<br><b><a href="http://ourworld.compuserve.com/homepages/Guenter_Born/WSHBazaar/WSHBazaar.htm">Guenter
Born</a></b> A grab bag of scripting fixes and tips. And my favorite: How
to use VB5CCE to write your own controls.
<br><b><a href="news://msnews.microsoft.com/microsoft.public.scripting.vbscript">News:Vbscript</a></b>
If you have a question, it's already been asked and answered here.
<br><b><a href="news://msnews.microsoft.com/microsoft.public.scripting.wsh">News:Wsh</a></b>
Ummm... Or here.
<br><b><a href="http://localhost/iisHelp/iis/misc/default.asp">Are you
sitting at an NT web server?</a></b> Then read the great stuff about scripting
you didn't know you already had! If you aren't at a server, try replacing
"localhost" in this link with the name of your favorite NT server to see
if maybe they made the help directory public!</td>

<td><b><font color="#993366"><font size=+2>Script Editors:</font></font></b>
<br>It seems that there is no "native" editor for the Windows Scriping
Host. You can borrow the VBA editor in a Microsoft Office product or maybe
use the web page editor in something else. Things like that work pretty
good, but very little really understands WSH (Windows Scripting Host).
So knowing of an editor that can be configured to support at least some
part of scripting is handy. I offer these suggestions.
<p><a href="http://www.sapien.com/">Primal SCRIPT</a> $149 -- The only
editor I know of specifically designed for the Windows Scripting Host.
Syntax highlighting, parameter help and intellisense for VBScript and JScript
5.0, built-in object browser, support for WSC and WSH files, and more.
Type "Wscript", hit a period, and up pops a list of all methods and properties.
Type "MsgBox", hit a space key, and see the correct usage with all parameters
right above where you are typing. The coolest thing is that it even supports
intellisense for some objects with late binding (you know, "CreateObject").
Even VB doesn't do that! Don't take my word, download the demo and see
for yourself. You'll be stunned. Also supports Perl, Java, Tcl, Rexx, Python,
Html, SQL, Batch, Awk, C, C++, Kixtart, and Pascal.
<p><a href="http://www.netobjects.com/products/html/nsb3.html">ScriptBuilder</a>
$139 -- Primarily a script editor for web pages. Syntax highlighting, online
language reference.
<!--
<p><a href="http://www.petes-place.com/codemagic.html">Code Magic</a> FREE
-- Syntax highlighting. Primarily designed as a Perl editor. Also supports
VBScript, JavaScript, Html, Asp, Java, C, C++, Pascal, Python, and Ini
files.
-->
<p><a href="http://www.winmain.com">CodeMax</a> $250 -- Syntax highlighting.
Supports VB, C/C++, Java, SQL, Pascal, and Basic. Is an ActiveX object.
<p><a href="http://www.vim.org/">Vim</a> FREE -- Syntax highlighting. Supports
virtually all languages or any conceivable text formatting scheme. Extendable
to additional keywords or languages. The UNIX origins are very apparent
-- everything happens in a bland terminal window. Version 5.5 seems more
stable than 5.6 under Win95.</td>
</tr>
</table>

<br>&nbsp;
<table WIDTH="100%" >
<tr>
<td ALIGN=LEFT VALIGN=TOP><img SRC="references.gif" BORDER=0 height=357 width=435></td>

<td ALIGN=LEFT VALIGN=TOP>Here's my big free editing tip: Use the Excel
(or Word!) VBA (Visual Basic for Applications) editor to write your VBS
(Visual Basic Scripting) programs. If you don't have any Microsoft Office
VBA applications, you can always <a href="http://msdn.microsoft.com/vbasic/downloads/cce/default.asp">download</a>
the free <a href="http://msdn.microsoft.com/downloads/tools/visualbasic/vbcce.asp">Visual
Basic Control Creation Edition</a>. The VBA/VBS code rules are almost identical.
Here's how. First, include the three Windows Scripting files in your VBA
project. Go ahead and leave whatever references you started out with --
just add the three files shown here (or more recent versions if you have
them). Browse for them if you have to. Include the following line in your
VBA code if you are using Scripting version two (it is one line -- your
browser may wrap it into two):
<br><b><tt>Dim Wscript As IHost.IHost2</tt></b>
<br>or as this if you use Scripting version one:
<br><b><tt>IWinScriptHostApp.IWinScriptHostApp_Class</tt></b>
<br>Now you get all the cool VBA features when writing your VBS code! By
including references to Word or Excel (it's impossible not to), it makes
it easy to write automation code too. But watch out when doing this! You
can <u>write</u>, but not <u>run</u> VBS code this way. And keep in mind
all the intellisense help you are getting is actually for VB, not VBS.
But hey -- if you're too cheap to get a good script editor, this works
in a pinch.</td>
</tr>
</table>

<p>
<hr WIDTH="100%">
<center>
<h2>
Writing Your First Script</h2></center>
Start up Notepad. Enter this text:
<br><b><tt>MsgBox "Hello World!"</tt></b>
<br>Save it as "HelloWorld.vbs" (Or any name with a .vbs extension. You
need to save it <u>with the quotes</u> if you are using the default Windows
behavior of hiding file extensions). Open up Explorer, find the file you
just saved, and double-click it. Yes, it's that easy.
<p>Try another simple one: Again start up Notepad, but enter this text:
<br><b><tt>strMyName = InputBox ("Enter your name")</tt></b>
<br><b><tt>MsgBox strMyName &amp; " is my master!"</tt></b>
<br>Again, save it (any name with a .vbs extension) and double-click it.
Easy.
<p>From here, you just need to read the help files (After you FIND the
help files!) on Visual Basic Scripting and the Windows Scripting Host to
see what other things you can do. Also check out the sample code Microsoft
provides! Search your C: drive for all "*.vbs" files if you're not sure
where they are. By far the coolest thing about scripting is how it can
control Excel, Word, or most any other ActiveX program. Once you see the
"chart.vbs" sample Microsoft provides, you'll be hooked!
<p>
<hr WIDTH="100%">
<center>
<h2>
Debugging Your Scripts</h2></center>
When it comes to debugging the scripts you create, I have two tips for
you.
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; First, when your script fails, the Windows
Scripting Host will pop up a window telling you the line number, column
number, and error. The error it reports gives you a good starting point,
but trying to count down to line 132, column 43 to find it in your code
is unworkable. So you can buy a nice script editor like I did. Or if you're
too cheap, the DOS program EDIT.COM has a line and column counter. So you
can just set up an association for VBS files (or any scripting file type)
so they can be edited with EDIT.COM. You can get a reg file that will set
up the VBS-EDIT association for you <a href="http://www.calweb.com/~webspace/scripting/samples/edit.reg">here</a>.
If it upsets you to have to work in a small DOS screen (it upsets me!),
just click on the logo in the title bar (top left) of the DOS window. Select
"Properties". On the "Screen" tab, set the "Initial size" to "50 lines",
and on the "Font" tab, set the "Font size" to "8 x 12". Now you can actually
see your code!
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; For now, the handiest free item Microsoft
has is the <a href="http://msdn.microsoft.com/scripting/debugger/dbdown.htm">scripting
debugger</a>. The debugger works three ways:
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; First, you can use it to open and edit
your scripts. It's about as useful as Notepad in this respect. Pretty lame.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Second, when you have an error, the
debugger opens up and highlights the line where the error occurred. Well,
if you have the original scripting Host that shipped with Win98 or NTSP6
it acts that way. If you upgraded your scripting host to the most recent
version, the dubugger won't start on an error unless you launched your
script with the "//d" option (like "wscript myscript.vbs //d" or "start
myscript.vbs //d". It won't let you do anything about the error in this
mode other than running a command in the "Command Window". Getting better...
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Third, you can put the word "stop" in
your script. When your script hits that "stop" line, it pauses and starts
up the debugger. Again, that's only true on the original version of the
scripting host. On the new version, you have to use the //d option to get
it to recognize the "stop" word. In this mode, you can step through your
code and use the full capabilities of the debugger.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fourth, you can start your script with
the //x option (if you have the new version of the scripting host). That
way it starts the script in the debugger automatically without waiting
for an error or a stop word.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; So basically, unless you use "stop",
"//d", or "//x", the debugger will do nothing more than frustrate you.
<br>
<hr WIDTH="100%">
<center>
<h2>
Code Samples and Utilities</h2></center>
Remember, I wrote all this code to solve <u>my problems</u>. That means
it isn't bug-free. The code did what I wanted and I stopped development
there. At least it will give you a starting point. <b>Warning</b>: These
are links to real VBS and batch files. IE may try to run them! Netscape
usually displays them. You may have to right-click or shift-click the links
to force a download.
<br>&nbsp;
<table COLS=1 WIDTH="100%" >
<tr>
<td BGCOLOR="#3366FF">
<center><b><font color="#FFFFFF"><font size=+1>Real Simple Samples</font></font></b></center>
</td>
</tr>
</table>
<b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/PrintWebPageWithWord.vbs">PrintWebPageWithWord.vbs</a></font></b>&nbsp;&nbsp;
Illustrates how to automate Word to print a web page. My web page. Well,
until you modify the code!
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/MakeAndRunBatchFile.vbs">MakeAndRunBatchFile.vbs</a></font></b>&nbsp;&nbsp;
Shows how to create, run, wait for, and delete a batch file from scripting.
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/UserIn.bat">UserIn.bat</a></font></b>&nbsp;&nbsp;
Shows how to create, run, wait for, and delete a script from a <u>batch</u>
file. In a perverse twist, the created script has to in turn create a batch
file of it's own in order to communicate results back to the original batch
file. Why bother? Because it provides a really nice way to get user input
in a batch file!
<br>&nbsp;
<table COLS=1 WIDTH="100%" >
<tr>
<td BGCOLOR="#3366FF">
<center><b><font color="#FFFFFF"><font size=+1>Web Server CGI Programs</font></font></b></center>
</td>
</tr>
</table>

<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/WebPageCounterCGI/index.htm">WebPageCounterCGI</a></font></b>&nbsp;&nbsp;
A VBS CGI that shows xbm (!) graphic digits representing how many times
any participating web page has been hit. Creates, reads, and writes to
an Access database. Reassembles pre-built single graphic digit files into
the final single displayed graphic.
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/ChatCGI/index.htm">ChatCGI</a></font></b>&nbsp;&nbsp;
A VBS chat CGI. Pretty straightforward. Displays the last 50 comments,
allows users to enter new comments, and stores everything in an Access
database via DAO.
<br>&nbsp;
<table COLS=1 WIDTH="100%" >
<tr>
<td BGCOLOR="#3366FF">
<center><b><font color="#FFFFFF"><font size=+1>File Utilities</font></font></b></center>
</td>
</tr>
</table>

<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/DateName.vbs">DateName.vbs</a></font></b>&nbsp;&nbsp;
I bet you have a process that kicks out an identically-named file every
day. If you want to rename them so they don't overwrite each other, naming
them with date seems the most natural solution. You pass it a file name
like this:
<br><b><tt>start /w DateName.vbs C:\PROGRA~1\FNORDW~1\LOGS\REFERE~1.TXT</tt></b>
<br>or a quoted long name like this:
<br><b><tt>start /w DateName.vbs "C:\Program Files\Fnord Web Server\logs\Reference
Log.txt"</tt></b>
<br>And it would rename the corresponding
<br><b><tt>"C:\Program Files\Fnord Web Server\logs\Reference Log.txt"</tt></b>
<br>to
<br><b><tt>"C:\Program Files\Fnord Web Server\logs\1999-12-28-Reference
Log.txt"</tt></b>
<br>I used year-month-date to make sorting easier.
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/TimeDateName.vbs">TimeDateName.vbs</a></font></b>
Same as the above DateName, but this one adds time as well. Prefaces the
file name with year-month-date-hour-minute-second
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/TrimLogFiles.vbs">TrimLogFiles.vbs</a></font></b>&nbsp;&nbsp;
I have lots of log files that do nothing but grow. So I wrote this to trim
them down to a reasonable size. I run it as a scheduled task every night.
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/DeleteOldFiles.vbs">DeleteOldFiles.vbs</a></font></b>&nbsp;&nbsp;
Let it loose on the network "share" drive every once in a while. It deletes
files in and below any directory you select based on file extension, age,
and last accessed date.
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/NoOldFiles.vbs">NoOldFiles.vbs</a></font></b>&nbsp;
Basically an automatable version of the above script based on common requests
from system administrators. It only looks at file creation date and starting
directory, but still runs through subdirectories. It can take both arguments
from the environment, the command line, or interactively from the user.
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/RecursiveLowerCase.vbs">RecursiveLowerCase.vbs</a></font></b>&nbsp;&nbsp;
Starts at a directory you specify and changes all file names in and below
that directory to lower case. I needed this when I moved a web site onto
a case-sensitive Unix web server.
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/RecursiveNoSpaces.vbs">RecursiveNoSpaces.vbs</a></font></b>&nbsp;&nbsp;
Starts at a directory you specify and removes the spaces from all file
names in and below that directory. I needed this when I moved a web site
onto a Unix web server.
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/SearchAndReplace.vbs">SearchAndReplace.vbs</a></font></b>&nbsp;
Searches through any single plain-text file and replaces text you specify.
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/GlobalSearchAndReplace.vbs">GlobalSearchAndReplace.vbs</a></font></b>&nbsp;&nbsp;
Starts at a directory you specify and edits all files (you specify the
target file extensions)&nbsp; in and below that directory to replace text.
I use it to fix web pages, scripts, and batch files when servers, files,
or directory names get changed! As written, it crashes if it finds a file
with no extension. An easy fix, but like I said, I wrote this to solve
my problem. And I use extensions. So there.
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/ChangeFileNameCase.vbs">ChangeFileNameCase.vbs</a></font></b>&nbsp;&nbsp;
Changes all files in a single directory you select to upper or lower case.
I needed to change case when I needed a way to "mark" files. You know,
kind of like a file attribute? I have files that are "guesses" and files
that are "verified" and I didn't want to create a database to keep track
of which category each file was in. My Win32 box doesn't care about file
name case, but code can tell if a file has an upper or lower case file
name! It's just like having another file attribute! Keep it in mind...
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/UnGutenberg.vbs">UnGutenberg.vbs</a></font></b>&nbsp;
Creates a Palm PDB file from a <a href="http://promo.net/cgi-promo/pg/t9.cgi">Gutenberg</a>
etext file. All the classic stories you were supposed to have read in high
school and college are available via Gutenberg. All the classic poems and
fairy tales you want to read to your kids are also there. Thanks to the
Palm, you can take them with you and not have to read them on a monitor
or print them out (both really bad options). This script unwraps the Gutenberg
etext, "sanitizes" the etext by removing all the Gutenberg "small print",
and tries to set the Palm document name to match the actual book title.
Needs <a href="http://www.pkware.com/shareware/pkz250dos.html">PKUNZIP</a>
and <a href="http://www.hotfiles.com/?000UMP">MAKEDOC</a> in the path.
<br>&nbsp;
<br>&nbsp;
<table COLS=1 WIDTH="100%" >
<tr>
<td BGCOLOR="#3366FF">
<center><b><font color="#FFFFFF"><font size=+1>FTP Utilities</font></font></b></center>
</td>
</tr>
</table>

<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/MakeFtpScript.vbs">MakeFtpScript.vbs</a></font></b>&nbsp;&nbsp;
I have too many web pages to keep up with. I may modify a dozen files in
as many directories over a period of days before I upload the changes.
And then -- oops. Which ones did I modify or create since my last upload?
This searches for modified files (based on the archive bit), then creates
an FTP upload script. It doesn't actually upload anything, it just creates
a script batch file. Running the batch file will do the actual upload.
It includes an undo batch file to reset the archive bits in case you change
your mind. Using the archive bit is very appropriate because you don't
need to back up anything that has been uploaded to the web (The web is
your backup!).
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/FtpUpload.vbs">FtpUpload.vbs</a></font></b>&nbsp;&nbsp;
No interaction version of the above script. This one will actually upload
all modified files in and under a specified directory in one shot. Automatic
undo if it can't connect to the FTP server. Log files are always kept of
action and results. Can be run visibly or invisibly. So -- after you get
comfortable with the above script, you switch to this one. Edit seven values
(Simple things like strRemoteSite = "ftp.calweb.com") and you're home free!
You can put a shortcut to it in the startup group or run it as a scheduled
task for people I refer to as "Content Creators". On most intranets, there
are dozens of general staff people scattered all over who create and update
spreadsheets, reports and the like. And we need those items on the intranet.
The heck of it is, some of those staff people keep forgetting how and when
to upload things no matter how easy you make it or how often they're told.
Use this script to make life easier for them and you.
<p><b><font size=+1><a href="http://www.calweb.com/~webspace/scripting/samples/FtpFileUpload.vbs">FtpFileUpload.vbs</a></font></b>&nbsp;&nbsp;
Very basic version of the above script. Again with no user interaction,
but it only uploads files you designate, and it puts them where you designate.
You have to build the source and destination file names into the code.
This is more appropriate for giving to "content creators" that are only
responsible for creating or updating a few files that might be maintained
in directories with other files that shouldn't be uploaded. To simplify
things, this script does not check for or change archive bit status. This
is really little more than a template that will require considerable rewriting
on your part.
<br>&nbsp;
<br>&nbsp;
<br>
<br>
<center>
<p>Bad links? Questions? <a href="mail.htm">Send
me mail</a>.</center>

</body>
</html>
