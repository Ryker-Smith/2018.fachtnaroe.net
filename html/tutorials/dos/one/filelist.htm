<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.72 [en] (Win95; U) [Netscape]">
   <meta name="Author" content="Eric Phelps">
   <meta name="Description" content="How to generate and process lists of file names.">
   <title>Creating and Processing Lists of File Names</title>
</head>
<body>

<center>
<h2>
Creating and Processing Lists of File Names&nbsp;
<hr WIDTH="100%"></h2></center>
To get a list of all files of a certain type on your disk, use the DIR
command with it's /s option to recursively search all subdirectories. Also
use the /b option for the "bare" output to get JUST the file name (no header
stuff). For example, to get a list of all Excel files on your C: drive:
<p><b><tt>dir /s /b c:\*.xls</tt></b>
<p>If you want to save the results, just redirect the output into a file:
<p><b><tt>dir /s /b c:\*.xls > filelist.txt</tt></b>
<p>If you only want files in a certain subdirectory (say all the text files
in and under the Windows directory), just start there:
<p><b><tt>dir /s /b c:\windows\*.txt > filelist.txt</tt></b>
<p>If you want just a list of directories, it's as simple as using the
appropriate /ad DIR option:
<p><b><tt>dir /s /b /ad c:\*.* > directorylist.txt</tt></b>
<p>Note that using the /s option with DIR will do two things: It searches
all subdirectories AND it generates fully-qualified file names. Leave out
the /s option to get JUST names.
<p>The only problem with everything I tell you above is that the generated
file list will be <u>long file names</u>. I REALLY REALLY hate long file
names because they break all kinds of otherwise good batch code. About
the only way to process a list of long file names is to quote them and
the only pure DOS way to do that is to get the long name into the environment.
Here's an example showing how to process a list of long file names this
way.
<br>&nbsp;
<table BORDER WIDTH="100%" >
<tr ALIGN=CENTER BGCOLOR="#999999">
<td><b>FRAGMENT.TXT</b></td>

<td><b>MAIN.BAT</b></td>
</tr>

<tr ALIGN=LEFT VALIGN=TOP>
<td><b><tt>set filename=</tt></b></td>

<td><b><tt>@echo off&nbsp;</tt></b>
<br><b><tt>:START&nbsp;</tt></b>
<br><b><tt>copy fragment.txt + filelist.txt temp.txt > nul&nbsp;</tt></b>
<br><b><tt>type temp.txt | find "set filename=" > temp.bat</tt></b>
<br><b><tt>echo call process.bat >> temp.bat</tt></b>
<br><b><tt>call temp.bat&nbsp;</tt></b>
<br><b><tt>type temp.txt | find /v "set filename=" > filelist.txt&nbsp;</tt></b>
<br><b><tt>copy filelist.txt nul | find "0" > nul</tt></b>
<br><b><tt>if errorlevel 1 goto START&nbsp;</tt></b></td>
</tr>

<tr ALIGN=CENTER BGCOLOR="#999999">
<td><b>FILELIST.TXT</b></td>

<td><b>PROCESS.BAT</b></td>
</tr>

<tr ALIGN=LEFT VALIGN=TOP>
<td><b><tt>C:\Program Files\faq.txt</tt></b>
<br><b><tt>C:\Received Files\msg.txt</tt></b>
<br><b><tt>C:\My Documents\report.doc</tt></b></td>

<td><b><tt>echo Processing "%filename%"</tt></b></td>
</tr>
</table>
The big disadvantage here is tremendous disk activity. I won't go on with
a description of the above example. Instead, see the generic description
on <a href="line-seq.htm">Batch Sequential Processing of a List</a>.
<p>
<hr WIDTH="100%">
<p>There is no simple way to create a recursive list of short file names
(unless you reboot into DOS mode!), but this code will get the short names
in a given directory:
<p><b><tt>lfnfor off</tt></b>
<br><b><tt>for %%x in (*.*) do echo %%x > filelist.txt</tt></b>
<p>As long as you happen to be in a given directory, the undocumented TRUENAME
command will give you the fully-qualified short file name of any file in
that directory. Keep that in mind as you read the next two tidbits.
<p>To change into a given drive, just add a trailing backslash to any fully-qualified
file name and&nbsp; execute the result. For example, either of these two
lines would change to the C: drive.
<p><b><tt>"C:\Program Files\Acrobat\Acrobat.pdf\"</tt></b>
<br><b><tt>C:\PROGRA~1\ACROBAT\ACROBAT.PDF\</tt></b>
<p>To change to a given directory, add a trailing backslash and a double-dot.
For example, either of these will change to the C:\Program Files\Acrobat
directory:
<p><b><tt>cd "C:\Program Files\Acrobat\Acrobat.pdf\.."</tt></b>
<br><b><tt>cd C:\PROGRA~1\ACROBAT\ACROBAT.PDF\..</tt></b>
<p>The great part of having a list of short names is that it allows you
several <a href="index7.htm">different ways to process</a>. One of my favorite
ways of working with short file names is to separate the name and extension
parts. Since the DIR command normally does this, I use it:
<p><b><tt>@echo off</tt></b>
<br><b><tt>dir /a-d *.* | find "-" | find ":" > en#er.bat</tt></b>
<br><b><tt>echo.>> en#er.bat</tt></b>
<br><b><tt>type en#er.bat | date | find "Enter new date" | find "&nbsp;&nbsp;
" >> en#er.bat</tt></b>
<br><b><tt>echo @echo Name = %%3&nbsp; Extension = %%4 > new.bat</tt></b>
<br><b><tt>copy c:\windows\command\loadfix.com enter.com</tt></b>
<br><b><tt>call en#er.bat</tt></b>
<br><b><tt>del enter.com</tt></b>
<br><b><tt>del new.bat</tt></b>
<p>In the above example, I'll refer you to the <a href="loadfix.htm">Renaming
LOADFIX.COM</a> page for an explanation of why I use a "new.bat" and "loadfix.com".
I've create a "stub" new.bat on-the-fly in the above example, but your
new.bat would probably be a call to some other "process.bat" where the
REAL work would be done.
<p>
<hr WIDTH="100%">But I have to be honest with you. If you don't have to
write a big batch file, you shouldn't. Look, if you already have a list
of files, you may be stuck using it. But maybe you can get away WITHOUT
creating the list. If you just want to process certain files in a single
directory, you should use the FOR command:
<p><b><tt>lfnfor off</tt></b>
<br><b><tt>for %%x in (*.xls) do call process.bat %%x</tt></b>
<p>Yes, I assume there is a process.bat somewhere that will do something.
If you have several directories you need to process, just duplicate the
lines:
<p><b><tt>lfnfor off</tt></b>
<br><b><tt>for %%x in (c:\temp\*.xls) do call process.bat %%x</tt></b>
<br><b><tt>for %%x in (c:\windows\temp\*.xls) do call process.bat %%x</tt></b>
<br><b><tt>for %%x in (c:\windows\tempor~1\*.xls) do call process.bat %%x</tt></b>
<p>Don't get forced into doing anything huge unless you absolutely have
to.
<center>
<p>Bad links? Questions? <a href="mail.htm">Send
me mail</a>.</center>

</body>
</html>
