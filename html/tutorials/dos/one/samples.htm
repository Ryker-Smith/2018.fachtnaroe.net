<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.06 [en] (Win95; I) [Netscape]">
   <META NAME="Author" CONTENT="Eric Phelps">
   <META NAME="Description" CONTENT="Sometimes it's easier to show an example DOS batch file than to explain the general case.">
   <TITLE>Sample Win9x Batch Programs</TITLE>
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0000EE" VLINK="#551A8B" ALINK="#FF0000">
&nbsp;
<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH="100%" >
<TR>
<TD ALIGN=LEFT VALIGN=BOTTOM><A HREF="~webspace.html"><IMG SRC="duck.gif" BORDER=0 HEIGHT=82 WIDTH=159></A></TD>

<TD>
<CENTER>
<H1>
&nbsp;Sample Win9x Batch Files</H1></CENTER>
</TD>
</TR>

<TR BGCOLOR="#666699">
<TD BGCOLOR="#666699">&nbsp;</TD>

<TD WIDTH="100%">&nbsp;</TD>
</TR>

<TR>
<TD ALIGN=LEFT VALIGN=TOP><IMG SRC="114x50.gif" HEIGHT=50 WIDTH=114></TD>

<TD>
<CENTER><I>Sometimes it's easier to show a real-world example than to explain
the general case.&nbsp;</I></CENTER>
</TD>
</TR>
</TABLE>

<P><B><A HREF="getqbasic.bat.txt">Insure QBASIC exists on a user's machine</A></B>
<BR>Not just test for it, but download and install it automatically too!
Just stick this code in front of any batch file that needs QBASIC.
<P><B><A HREF="pushpath.bat.txt">Save the current directory</A></B>
<BR>Done without using the environment. Put this "pushpath.bat" file in
your path. It will create the matching "poppath.bat". You run pusshpath
first, then do something that changes your current directory, then run
poppath to reset the directory to where you started.
<P><B><A HREF="adrive.bat.txt">Is there a disk in the A: drive?</A></B>
<BR>Using the /f option of command.com allows you to find out without crashing
your batch program.
<P><B><A HREF="format.txt">How to format a disk automatically</A></B>
<BR>Just about the worst thing you would want to automate, but it's your
life.
<P><B><A HREF="alldirs.bat.txt">Run a command in every subdirectory</A></B>
<BR>Automatically change to each subdirectory on your drive (or part of
it) and run whatever command you want.
<P><B><A HREF="comtest.bat.txt">Is a COM port available</A></B>
<BR>Check to see if a com port is available before proceeding.
<P><B><A HREF="accessed.bat.txt">When was a file last accessed?</A></B>
<BR>Use the DEBUG command to trim the output of the DIR /V command to get
just the access date.
<P><B><A HREF="rootname.bat.txt">Get the root name of a file</A></B>
<BR>Only works on short names, but if you ever want to dump the file extension,
here's a way.
<P><B><A HREF="disksize.bat.txt">Find Disk Size</A></B>
<BR>Use the DEBUG command to trim the output of the CHKDSK command to get
disk size.
<P><B><A HREF="diskfree.bat.txt">Find Disk free space</A></B>
<BR>Use the DEBUG command to trim the output of the DIR command to get
the free space.
<P><B><A HREF="obfuscating.txt">Hide your batch file code</A></B>
<BR>What if you have to embed a password or something else you don't want
seen in your code?
<P><B><A HREF="created.bat.txt">When was a file created?</A></B>
<BR>Use the DEBUG command to trim the output of the DIR command to get
the file created date.
<P><B><A HREF="beep.txt">Make a beep</A></B>
<BR>You can misuse the CHOICE command or spin up a quick QBASIC program.
No ANSI needed.
<P><B><A HREF="sleep.txt">Make a time delay</A></B>
<BR>Put your computer to sleep for a while. At least put the particular
DOS window you are in to sleep.
<P><B><A HREF="addition.txt">Incrementing</A></B>
<BR>It isn't real math, but batch files can add one to a number to help
you set up loops or generate sequential file names or whatever you want.
<P><B><A HREF="huntftp.zip">Find all FTP servers</A></B>
<BR>Actually just the FTP servers on any small subnet. You build a loop
that counts from 1 to 254 and let it script the FTP program. Three batch
programs zipped up. You configure and run hunt.bat, it calls the other
two.
<P><B><A HREF="random.bat.txt">Generate a random number</A></B>
<BR>Grab the hundredths digit from the time.
<P><B><A HREF="enter.bat.txt">Get user input from batch file</A></B>
<BR>Sure, you've done it, but can you do it without having to hit a Ctrl-Z,
without ANSI, without a debug script, and without a separate "set" file?
<P><B><A HREF="ntinput.bat.txt">Get user input from an NT batch file</A></B>
<BR>All the old tricks fail. Luckily, QBASIC can be used and is standard
equipment in NT. Windows Scripting works better if you have it.
<P><B><A HREF="justtime.bat.txt">Put the time into the environment</A></B>
<BR>This batch file shows the trick of using a command output as a command
line. In this case the "Current Time..." output of the TIME command is
used to call a batch file named "CURRENT.BAT".
<P><B><A HREF="choice.txt">Read the output of DOS commands</A></B>
<BR>Use FIND.EXE and CHOICE.COM (if needed) to make decisions based on
the output of any DOS command. This isn't the discovery of the year, but
it can be a very handy trick to know! How would you use this? Tell if ANSI
is in memory. Tell if Windows is running. And all automatically!
<P><B><A HREF="getini.txt">Read and write to INI files</A></B>
<BR>A "pure" batch file solution requiring nothing more than standard DOS.
It won't work with complex INI files like WIN.INI, but is instead intended
for simple one-section private INI data files. Store all your stuff in
an INI file instead of in the environment!
<P><B><A HREF="username.txt">Get the user name</A></B>
<BR>Shows how to grab the current Windows or network user name out of the
system registry.
<P><B><A HREF="username.bat.txt">Get the user name</A></B>
<BR>Parse the output of the NET command and use the first word as the name
of a batch file.
<P><B><A HREF="usernamedebug.bat.txt">Get the user name</A></B>
<BR>Parse the output of the NET command, but use DEBUG instead of relying
on the first word.
<P><B><A HREF="computername.bat.txt">Get the computer name</A></B>
<BR>Parse the output of the NET command and use DEBUG to strip the leading
// from the result.
<P><B><A HREF="recent.txt">Copy the most recent file</A></B>
<BR>When a process automatically generates files, it can really help to
have a single file name for the most recently generated file.
<P><B><A HREF="login.log.txt">Track when anybody logs in</A></B>
<BR>How to get a program to run when Windows starts or a new user logs
in.
<P><B><A HREF="control.txt">How to shut down a Windows program</A></B>
<BR>This is actually a generic "How to control another app" question. It
isn't DOS, but it can be done.
<P><B><A HREF="autotime.bat.txt">Time delay and For-Next loops</A></B>
<BR>Demonstrates two things: using CHOICE to effect a one-second time delay,
and using&nbsp; environment variables to track nested "for-next" loops
in batch files (yes, you can!) to multiply the one second up to sixty seconds
(actually sixty seconds plus batch processing time). And what did I decide
this file should do with it's one-minute delay? Why, display the time,
of course!
<P><B><A HREF="subsdemo.bat.txt">Subroutines in batch files.</A></B>
<BR>Structured programming is here at last! The batch file simply CALLs
itself and passes the name of a label it wants to GOTO. Each label contains
the standalone "subroutine" code and exits when finished, returning control
to the calling incidence. Sound confusing? Just take a look at the simple
code and run it.
<P><B><A HREF="ftp.script.txt">FTP scripting</A></B>
<BR>The FTP program can be scripted. Assuming you know how to type FTP
commands, this tells you that little bit more you need to generate a script
-- or turn your script into a batch file. Now you can set up FTP script
batch files to automate your downloads.
<P><B><A HREF="hexsize.bat.txt">Get file sizes in HEX</A></B>
<BR>How to use DEBUG to retrieve the lower 16 bits (64k) of a file's size.
Although it isn't done, I show how to get the upper 16 bits as well.
<P><B><A HREF="filename.bat.txt">Long and short file names</A></B>
<BR>Shown are several tricks for converting back-and-forth from long to
short names, getting the drive letter, and getting the file extension.
This isn't made for reading. Just save it as a BAT file and drop a file
on it with Explorer. If it gives you what you want, steal the appropriate
code section.
<P><B><A HREF="printall.txt">Print multiple files or multiple copies</A></B>
<BR>Even though it may be a Windows program that does the printing, you
can automate the process with a batch file.
<P><B><A HREF="closewindow.txt">How to make a DOS window close</A></B>
<BR>after your batch program finishes. It only takes two lines of code!
<P><B><A HREF="windowfinish.txt">Running a batch file after Windows shuts
down.</A></B>
<BR>It's a great time to run last-minute tests or delete temporary files.
<P><B><A HREF="reboot.txt">Want to know how to exit windows and shut down
your computer</A></B>
<BR>from a batch file? Rundll.exe can do the impossible.
<P><B><A HREF="today.bat.txt">Run a specified program only on certain days
at boot time.</A></B>
<BR>This demo makes use of two tricks: It reads a custom INI file, and
it puts the current day into the environment.
<P><B><A HREF="yn.txt">How to get around the "Do you really want to do
this?" prompt.</A></B>
<BR>Have your batch file send the desired answer..
<P><B><A HREF="random.txt">How to make a randomly-named file.</A></B>
<BR>Or at least how to get an almost random filename guaranteed not to
exist in your TEMP directory.
<P><B><A HREF="waitfor.txt">Wait for your friend's dynamic web site</A></B>
<BR>to come up. Keep pinging it until it responds. Then launch whatever
you want. Automatically.
<P><B><A HREF="password.txt">Enter your password automatically</A></B>
<BR>so you can login or attach to file servers at work.
<P><B><A HREF="add.bat.txt">Ping an entire subnet and find the live computers.</A></B>
<BR>This demonstrates how to increment a number from 1 to 255 and build
a loop based on the incremented number.
<P><B><A HREF="annoythecat.bat.txt">Play sounds</A></B>
<BR>Annoy the cat. Play all your sounds with just enough delay between
sounds to let the cat relax.
<P><B><A HREF="namedate.txt">Rename Files with time and date</A></B>
<BR>Many programs generate files which need to be renamed with unique names.
Time and date usually do the trick.
<P><B><A HREF="vxe-exe.bat.txt">Rename all files from one extension to
another</A></B>
<BR>Shown here renaming VXE files to EXE by creating a list of files to
be changed and changing them one-at-a-time
<P><B><A HREF="vxe2exe.bat.txt">Rename all files from one extension to
another</A></B>
<BR>Shown here renaming VXE files to EXE by changing into every subdirectory
one-at-a-time and doing a wildcard rename.
<P><B><A HREF="ip.zip">Inner Peace</A></B>
<BR>No, I didn't do this! I helped out with a few tips. It's just as odd
as it sounds and implementing it in DOS batch is even odder. But it is
the biggest batch file I know of. When it starts, it generates about 60
temporary batch file utilities you can peek at.
<P>
<HR WIDTH="100%">
<BR>&nbsp;
<BR>&nbsp;
<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<CENTER>
<P>Bad links? Questions? <A HREF="mail.htm">Send
me mail</A>.</CENTER>

<BR>&nbsp;
<P><BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
</BODY>
</HTML>
