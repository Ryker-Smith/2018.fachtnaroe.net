<!DOCTYPE html>
<!-- #exec cgi="/head.shtml" -->
<body>
<!-- #exec cgi="/inprogress.shtml" -->
<div id="pagewrap">
<!-- #exec cgi="/topmenu.shtml" -->
<!-- #exec cgi="/sidemenu.shtml" -->
<div id="content">
<h1>Perl - Part 13</h1>
<!--#include virtual="/subjects/computerprogramming/perl/navigate.shtml" -->
<h2>Logical Operators</h2>
<p>Sometimes a program needs to be able to make decisions as to which course of action to take. For this we have the <b>IF..ELSE</b> construct. However, thus far all decisions your programs have made using the IF construct have been based on the value of one variable. Next we shall see how to make a decision based on more than one vairiable, or on a variable having more than one possible value. For this we use logical operators.</p>
<p>The logical operators are <b>AND</b>, <b>OR</b> and <b>NOT</b>:
<ul>
<li>AND - both variables or conditions must evaluate to TRUE</li>
<li>OR - one or other variables or conditions must evaluate to TRUE</li>
<li>NOT - Logically negate a result: TRUE becomes FALSE and vice versa</li>
</ul>
<p>An example of the use of the OR operator could come from the last program - in Task 016 - where the program was to keep looping until a value of 'n' was typed. It would be more appropriate to stop the program if either 'n' <b>OR</b> 'N' was typed.<p>
<h2>Writing AND, OR, NOT in perl</h2>
<p>Some programming languages (such as PASCAL and BASIC) use the actual words AND, OR and NOT. Many other languages, such as C, C++, Perl, Java use symbols instead:
<ul>
<li>AND - &amp;&amp;</li>
<li>OR - ||</li>
<li>NOT - already seen and used in <b>!=</b> and <b>ne</b></li>
</ul>
<h2>The Catch</h2>
<p>AND and OR have operational status the same as +, -, / and *; they can be used for binary mathematical operations. Therefore we have to use them with the same caution as the normal mathematical operators - we must use brackets ('(', ')') to clarify our intent.</p>
<p><i>Example 1 (AND):</i></p>
<p>If we have an IF statement with two options that must be true before the body of the structure executes then the general form would be as follows:</p>
<font face="Courier" >
&nbsp;&nbsp;if ( ( condition_1 ) && (condition_2) )<br>
&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;Carry out necessary statements;<br>
&nbsp;&nbsp;}<br>
</font>
<p><i>Example 2 (OR):</i></p>
<p>If we have an IF statement with two options ANY ONE of which must be true before the body of the structure executes then the general form would be as follows:</p>
<font face="Courier" >
&nbsp;&nbsp;if ( ( condition_1 ) || (condition_2) )<br>
&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;Carry out necessary statements;<br>
&nbsp;&nbsp;}<br>
</font>
<p>Create the following program called <font face="Courier">and01.pl</font> that uses the <b>&&</b> function. The program purpose should be reasonably clear.</p>
<center><img width="100%" src="/images/and01.png"></center>
<h2>Task 017</h2>
<p>Modify the program <font face="Courier">responder-xx.pl</font> so that <i>either</i> a large or a small 'n' will stop the program from looping.</p>
<p>Onwards...</p>
<!--#include virtual="/subjects/computerprogramming/perl/navigate.shtml" -->
<small><!--#config timefmt="%Y%m%d-%H:%M" -->Last updated: <!--#flastmod file="perl-part13.shtml" --></small>
</div> <!-- #content -->
<!-- #exec cgi="/bottom.shtml" -->
</div> <!-- #pagewrap -->
</body>
</html>
