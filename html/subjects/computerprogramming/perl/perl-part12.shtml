<!DOCTYPE html>
<!-- #exec cgi="/head.shtml" -->
<body>
<!-- #exec cgi="/inprogress.shtml" -->
<div id="pagewrap">
<!-- #exec cgi="/topmenu.shtml" -->
<!-- #exec cgi="/sidemenu.shtml" -->
<div id="content">
<h1>Perl - Part 12</h1>
<!--#include virtual="/subjects/computerprogramming/perl/navigate.shtml" -->
<h2>Repetition without calculation</h2>
<p>The last programs made use of while statements to carry out actions repeatedly. In all of the examples, some calculations were involved. These calculations may even have been the purpose of the loop. Certainly, the statements were controlled by numbers at the very least.</p>
<p>This is not always the case. Some while statements have very little to do with numbers, except incidentally, and may have control over iteration (or not) determined by text input, such as 'y' for Yes and 'n' for No. This will be the case in this next task.<p>
<h2>Task 016</h2>
<p>Copy the <font face="Courier" >responder.pl</font> into the file <font face="Courier" >responder-xx.pl</font>; then modify the file to give output similar to that below:
<p>
<center><img width="90%"  src="/images/responder-xx-pl.png" /></center>
<br>
<p>In summary, this is the last created of the responder programs with a while loop around it. Rather like this:</p>
<font face="Courier" >
<br>#!/usr/bin/perl
<br>#
<br>#--------------------------------------------------------------------------
<br># Author:			Date:		
<br># Title:	responder-xx.pl	Purpose:	
<br>#--------------------------------------------------------------------------
<br>#
<br>&nbsp;&nbsp;while_variable_initialisation_bit
<br>&nbsp;&nbsp;while (condition)
<br>&nbsp;&nbsp;{
<br>&nbsp;&nbsp;&nbsp;&nbsp;the former responder program
<br>&nbsp;&nbsp;&nbsp;&nbsp;copied into the while loop,
<br>&nbsp;&nbsp;&nbsp;&nbsp;indented, re-used.
<br>&nbsp;&nbsp;&nbsp;&nbsp;ask to run again (as you've asked for input before)
<br>&nbsp;&nbsp;&nbsp;&nbsp;the input given controls the while (condition) above
<br>&nbsp;&nbsp;}
</font>
<p>Essentially the program re-uses existing code - perfectly allowable, recommended even, in programming - surrounds that code with a controlling loop that keeps the code looping until a small 'n' is entered. When this is entered the loop, and the program, stops.</p>
<p>Click on, Brave Soul...
<!--#include virtual="/subjects/computerprogramming/perl/navigate.shtml" -->
<small><!--#config timefmt="%Y%m%d-%H:%M" -->Last updated: <!--#flastmod file="perl-part12.shtml" --></small>
</div> <!-- #content -->
<!-- #exec cgi="/bottom.shtml" -->
</div> <!-- #pagewrap -->
</body>
</html>
