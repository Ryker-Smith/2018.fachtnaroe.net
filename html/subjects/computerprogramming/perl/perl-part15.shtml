<!DOCTYPE html>
<!-- #exec cgi="/head.shtml" -->
<body>
<!-- #exec cgi="/inprogress.shtml" -->
<div id="pagewrap">
<!-- #exec cgi="/topmenu.shtml" -->
<!-- #exec cgi="/sidemenu.shtml" -->
<div id="content">
<h1>Perl - Part 15</h1>
<!--#include virtual="/subjects/computerprogramming/perl/navigate.shtml" -->
<h2>Storing Multiple Values - <i>Easily</i></h2>
<p>The previous program in some ways raises more questions than it answers, especially about how to handle different amounts of data.</p>
<ol>
<li>What would need to be done to change the number of names from 5 to 3?</li>
<li>What would need to be done to change the number of names from 5 to 10?</li>
<li>Is there anyway of shortening the asking and responding section at the end?</li>
</ol>
<p>At present the answer to questions 1 and 2 would be to include less or more variables, input and chop lines. This is possibly acceptable for smaller amounts of numbers, but what if we wish to accept 100 names? Or a thousand? That represents a <u>lot</u> of typing!</p>
<p>As for the third question, the indentation used for 5 names is probably confusing. It would quickly become unmanageable on larger quantities - possibly even before you reached a 10<sup>th</sup> name mentioned in point 2!<p>
<p>No computer language could exist and be popular if it had no mechanism for shortening this. Perl is no different. For the tidier and more efficient version of this task, we'll use <a href="http://en.wikipedia.org/wiki/Array">arrays</a>.</p>
<p>Enter this program, called <font face="Courier">names02.pl</font> instead:<p>
<center><img width="100%" src="/images/names02-01.png"></center>
<p>In this case we are using an array of variables. An array is a collection of variables with the same name. In this case the array is called <font face="Courier">@all_the_names</font>. Notice how the symbol <b>@</b> is used instead of <b>$</b>. When <b>@</b> is used <i>all</i> the elements are being referred to. When <b>$</b> is used only <i>one</i> element is being referred to. That's why in the program above <b>$</b> is used; as we are referring to (or using) only one element at a time. But we identify each element by it's number in the array which we get from <font face="Courier">[$counter]</font>.</p>
<p>As the value of <font face="Courier">$counter</font> changes with the loop, so to does the element of the array that we are using.</p>
<p>Best of all, by changing the initial value of <font face="Courier">$max=<i>whatever_number_you_like</i>;</font> at the start you can make the program work for 3, 10 or 1000 names.</p>
<p>Onwards...</p>
<!--#include virtual="/subjects/computerprogramming/perl/navigate.shtml" -->
<small><!--#config timefmt="%Y%m%d-%H:%M" -->Last updated: <!--#flastmod file="perl-part15.shtml" --></small>
</div> <!-- #content -->
<!-- #exec cgi="/bottom.shtml" -->
</div> <!-- #pagewrap -->
</body>
</html>
