<!DOCTYPE html>
<!-- #exec cgi="/head.shtml" -->
<body>
<!-- #exec cgi="/inprogress.shtml" -->
<div id="pagewrap">
<!-- #exec cgi="/topmenu.shtml" -->
<!-- #exec cgi="/sidemenu.shtml" -->
<div id="content">
<h1>Perl - Part 19</h1>
<!--#include virtual="/subjects/computerprogramming/perl/navigate.shtml" -->
<h2>Saving your data</h2>
<p>As you have learned through practical experience by now, whether in Word Processing, Spreadsheets or any other form of computer usage it is essential to be able to save your work; whether to continue your work at a later stage or to keep that work for future reference. In the next task you'll see how that is done in Perl.</p>
<h2>Task 021</h2>
<p>Create the file below. Copy the file <font face="Courier">names02.pl</font> to <font face="Courier">names02a.pl</font> then modify the text of the program as given.</p>
<center><img width="100%" src="/images/names02a.png"></center>
<p>When you run the program you'll be asked for the number of names specified by <b>$max</b> (which we are treating as a constant). After the program runs, you may <font face="Courier">cat</font> the file <font face="Courier">names.txt</font> to see that the names from the array <b>@all_the_names</b> have been written to the file.</p>
<p>The <b>NAMESFILE</b> is a file variable, or <b>file handle</b>, used to refer to "names.txt". This can be any other meaningful name, just as other variables can have any meaningful name we desire. It is normal in all programming languages to generate an internal 'handle' for an external file.</p>
<p>Why "names.txt"? Read the program. Look closely also at the structure of the three lines that write the data to the file; you're about to see the reverse!</p>
<h2>Reading (or recovering) your data</h2>
<p>There's not much point saving data to disk if we can't recover it later...</p>
<h2>Task 022</h2>
<p>Copy the file <font face="Courier">names02.pl</font> to <font face="Courier">names02b.pl</font> then modify the text of the program as given.</p>
<center><img width="100%" src="/images/names02b.png"></center>
<p>Note how the &gt; in the first <b>open</b> becomes a &lt; in the second program. This is intended to indicate the flow of information. Note also how in both cases the full array of names is referred to beginning with <B>@</b>. You can change the name of the file in which the data is stored by changing the $filename at the start of the program.</p>
<p>Note also the use of the <b>-1</b> in the second program for the modification of the loop. This is present because arrays in some languages number their first element as 0, others as 1. In Perl it's 0. So when in the first loop we began at 1 it was for our convenience and understanding; in the second, the array is read according to the normal Perl rules.</p>
<p>To see the difference the -1 makes, rewrite the line without the -1 and run the program. This should show how the numbers generated by the loop need to match the numbers required by the array.</p>
<p><b>When both programs are completed print them and bring them to Fachtna with screen-captures or print-outs of the data generated by the program runs. Make sure your programs have suitable header sections.</b></p>
<p>Onwards...</p>
<!--#include virtual="/subjects/computerprogramming/perl/navigate.shtml" -->
<small><!--#config timefmt="%Y%m%d-%H:%M" -->Last updated: <!--#flastmod file="perl-part19.shtml" --></small>
</div> <!-- #content -->
<!-- #exec cgi="/bottom.shtml" -->
</div> <!-- #pagewrap -->
</body>
</html>
