<!DOCTYPE html><!--#include virtual="/includes/head.shtml" --><body onload="onloadProc()"><!--#include virtual="/includes/inprogress.shtml" --><!--#include virtual="/includes/animation.shtml" --><div id="pagewrap"><!--#include virtual="/includes/sitename.shtml" --><div id="topstripe"></div><!--#include virtual="/includes/sidemenu.shtml" --><div id="content"><!--#include virtual="/includes/topblurb.shtml" --><h1>Perl - Editing Your Source Code.</h1><h2>The first program</h2><ul>  <li>Go to the console<br>(press ALT+F2, then <b>konsole</b>; also known as the bash prompt, command-prompt, shell)</li>  <li>Start kwrite there<br>(type <b>kwrite&nbsp;&nbsp;&amp;</b> then press return)</li>  <li>Type this in:</li></ul><pre>#!/usr/bin/perl# This is my first program.print "Hello World!\n";</pre><ul><li>Now save the file, calling it <b>hello.pl</b></li><li>Go back to the konsole by clicking on it</li><li><p>Now the file will need to be made executable. To do this change the mode of the file by toggling its execute bit on<br>(type <b>chmod +x hello.pl</b>)</li><li>Now run the program<br>(type <b>./hello.pl</b>)</p></ul><p>If there are any problems with the code, edit it further in kwrite, save again, then run again. This is the edit/save/debug cycle with which you will become very familiar.</p><span style="margin-left: auto; margin-right:auto;"><img src="eternalSpinCycle.png" width="250" ></span><p>The <a href="http://en.wikipedia.org/wiki/Hello_world_program">Hello World</a> program is the traditional first program. Use the name <b>hello.pl</b> for the file to clearly identify the purpose of the program as well as the type of file.</p><!-- <p>How to create and edit the file is discussed next...</p><h2>GUI Editing through the CLI</h2><p>Use the CLI to access the programming server with this command:</p><pre>ssh -p portnum -X progserv.fachtnaroe.net</pre><p>This command starts an ssh session to the server, but allows X-Windows traffic to travel through the ssh session; it's a special form of tunnelling. This enables X applications to run in the server, but display on your computer.</p><p>On the server locate or start a new file with the command:</p><pre>gedit filename.pl &amp;</pre><p>Which will open the file <b>filename.pl</b> for editing. Note that the <b>&amp;</b> detaches the geditor from the command line, allowing you to continue to use the CLI while editing.</p><p>If you're using Putty you'll need to click through Connection/SSH/X11 to enable X11 forwarding <b>before</b> connecting.</p><p>I recommend these settings for <b>gedit</b>:</p><a href="images/gedit01.png"><img src="images/gedit01.png" width="100" alt=""></a><a href="images/gedit02.png"><img src="images/gedit02.png" width="100" alt=""></a><h2>CLI Editing: vi</h2><p>Type <b>nano</b> <i>filename</i> to edit your file. There will be letters at the bottom of the editor screen to show<p>Another option is to type a space and an <a href="http://en.wikipedia.org/wiki/Ampersand">ampersand</a> after the line given above, like this: <b>kwrite hello.pl &amp;</b> This allows control of the terminal session to be returned to you so that you can have the editor running while simultaneously able to test your program in the terminal.</p>--><form><input type="button" value="Back" onclick="history.back()"></form><small><!--#config timefmt="%Y%m%d-%H:%M" -->Last updated: <!--#flastmod file="perl_edit_index.shtml" --></small></div> <!-- #content --><!--#include virtual="/includes/backtotop.shtml" --></div> <!-- #pagewrap --></body></html>