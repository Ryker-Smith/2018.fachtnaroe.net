<!DOCTYPE html>
<!--#include virtual="/includes/head.shtml" -->
<body onload="onloadProc()">
<!--#include virtual="/includes/inprogress.shtml" -->
<!--#include virtual="/includes/animation.shtml" -->
<div id="pagewrap">
<!--#include virtual="/includes/sitename.shtml" -->
<div id="topstripe"></div>
<!--#include virtual="/includes/sidemenu.shtml" -->
<div id="content">
<!--#include virtual="/includes/topblurb.shtml" -->
<h1>Killing your program quickly</h1>
<h2>exit and die!</h2>
<p>Exit can be used to exit a program quickly but relatively correctly, passing a numeric exit value. Die will do the same thing but passes a numeric or text value which can be trapped as an exception (<i>ie</i> flagged as an error).</p>
<h2>When and why</h2>
<p>Sometimes you'll want to end your program quickly. To do this there is the ideal, right, way:</p>
<ul>
<li>You should have a semaphore that is checked in every loop and if statement of your program. If an event triggers a need to exit then each of these checks will allow the program to reverse it's journey thus far, coming straight back out of each control structure until there is nothing left but the end of the program. The down side of this is that it may involve many, many lines of extra code in a larger program.</li>
</ul>
<p>The wrong way - generally - is to terminate or abort the program suddenly. Many modern languages provide at least one command for this. This does not do any tidy-up that may be required of the program, and may lead to memory leaks, files left open or other unexpected issues. In perl, use the command <b>die</b> to kill the program instantly raising an exception; or <b>exit</b> to, well, exit instantly.</p>
<p>But don't forget to ask yourself, if this is the wrong thing to do, why are there two separate ways to do this? Because this may be seen as the "wrong but right in the circumstances" way.</p>
<p>
<ul>
<li>Sometimes the player of your game presses 'q' for quit there's no need to hang about, close files or do any of that other socially-reponsible stuff. Then issue an <b>exit(0)</b> command to signal succesful/normal termination and rapidly close the app.</li>
<li>Sometimes there is no way that the program can logically proceed. As an example, possibly the program has failed a <a href="http://en.wikipedia.org/wiki/Sanity_testing#Software_development">sanity check</a>. In this case, the <b>die</b> function is required to abort the program run without doing further damage. You can display a useful message as to why you are killing a program by enclosing that message after the die command as shown: <b>die ("some useful message")</b></li>
</ul>
<br>
<form>
<input type="button" value="Back" onclick="history.back()"></form>
<small><!--#config timefmt="%Y%m%d-%H:%M" -->Last updated: <!--#flastmod file="die.shtml" --></small>
</div> <!-- #content -->
<!--#include virtual="/includes/backtotop.shtml" -->
</div> <!-- #pagewrap -->
</body>
</html>
