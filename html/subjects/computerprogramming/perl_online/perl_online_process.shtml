<!DOCTYPE html>
<!--#include virtual="/includes/head.shtml" -->
<body onload="onloadProc()">
<!--#include virtual="/includes/inprogress.shtml" -->
<!--#include virtual="/includes/animation.shtml" -->
<div id="pagewrap">
<!--#include virtual="/includes/sitename.shtml" -->
<div id="topstripe"></div>
<!--#include virtual="/includes/sidemenu.shtml" -->
<div id="content">
<!--#include virtual="/includes/topblurb.shtml" -->
<h1>Using Perl Online</h1>
<!--#include virtual="/subjects/computerprogramming/perl_online/navigate.shtml" -->
<h2>Processing</h2>
<p>One of the first things that the script must do is accept the input generated by the form. There are many ways to do this. However, one of the perl maxims is "don't re-invent the wheel". In this case that maxim means that this task of taking input from a form is so common that rather than write our own code from scratch, we can use a perl module that already exists for this commonly carried out task.</p>
<p>We shall use the aptly named CGI module. Using it is easy. There are 3 steps:
<ol>
<li>Declare to perl that you require the module</li>
<li>Call a function in the module to process the form input</li>
<li>(For tidyness &amp; easy of typing) Move the form input from the CGI processed form to other variables</li>
</ol>
<p>The CGI module will return the values in the input boxes in the form of pairings of the input form box names, and the values entered. This is fine, but slightly unsightly, hence the 3<sup>rd</sup> stage mentioned above. The original HTML was:</p>
<center>
<font face="Courier" >
<br />&lt;br /&gt;Enter a number:&nbsp;&lt;input type="text" size="10" name="first_num"&gt;
<br />&lt;br /&gt;Enter a number:&nbsp;&lt;input type="text" size="10" name="secnd_num"&gt;
<br />&lt;br /&gt;Enter a number:&nbsp;&lt;input type="text" size="10" name="third_num"&gt;
</font>
</center>
<p>From this we remember that our input boxes names were (as shown above) "first_num", "secnd_num" and "third_num". These will be the three values we'll move into other variables. Now you need to create the script in <b>public_html/cgi-bin/addnumbers.pl</b>.
<h2>The script</h2>
<p>The simple addition script, with very basic output, looks like this:
<br />
<font face="Courier" >
<br />#!/usr/bin/perl
<br />use CGI;     # Tell perl about the CGI module
<br />CGI::ReadParse();     # Tell the module to 'parse' the form
<br />print "Content-type: text/html\n\n";     # This tells the Web Server what type of data it's dealing with
<br /># Tidy up the variables received.
<br />$num1=$in{first_num};
<br />$num2=$in{secnd_num};
<br />$num3=$in{third_num};
<br />$final_answer = $num1 + $num2 + $num3;
<br />print "&lt;html&gt;&lt;body&gt;The answer is $final_answer.&lt;/body&gt;&lt;/html&gt;";
<br /># End of script
</font>
<h2>Running the script</h2>
<p>With the script in place we enter some sample data and then click...</p>
<center><a href="images/sample_sum2.png"><img border="0" width="75%" src="images/sample_sum2.png"></a></center>
<br /><p>...and get our answer!</p><br />
<center><a href="images/final_answer.png"><img border="0" width="75%" src="images/final_answer.png"></a></center>
<p>You should hopefully find the output is correct. A script error will generated a code 500 (internal error) message. Obviously if this happens, check your code. Also make sure the execute bit is set - this is an executable script after all. A short way of doing this is to right click on the file in the FTP window and choose CHMOD.</p>
<h2>Sample Form &amp; Script</h2>
<p><a href="http://xen.fachtnaroe.net/~fachtna/demo-addnumbers.html">Click here to see the sample form and script in operation</a>.</p>
<h2>Simple Modifications</h2>
<ul>
<li>Modify the script (and HTML file) to multiply the numbers</li>
<li>Modify to accept a fourth number</li>
<li>Find the average of the numbers entered</li>
<li>Modify the input form to have a 'Clear Input' button.</li>
</ul>
<h2>Saving Form Input</h2>
<ul>
<li>Once a form has been processed and the data verified, if the form input needs to be recorded for later use (not in the current example!) the <a href="
http://www.fachtnaroe.com/subjects/computerprogramming/perl/perl-part19.shtml">19<sup>th</sup> page</a> of the 2007 Tutorial Trail shows the basic mechanism for outputing to and inputting from files.</li>
</ul>
<p><a href="../">Back to the main Programming page.</a></p>
<br />
<!--#include virtual="/subjects/computerprogramming/perl_online/navigate.shtml" -->
<small><!--#config timefmt="%Y%m%d-%H:%M" -->Last updated: <!--#flastmod file="perl_online_process.shtml" --></small>
</div> <!-- #content -->
<!--#include virtual="/includes/backtotop.shtml" -->
</div> <!-- #pagewrap -->
</body>
</html>
